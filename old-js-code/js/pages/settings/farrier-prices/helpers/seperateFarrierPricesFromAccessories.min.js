// @ts-nocheck
import{isNumeric}from"../../../../utils/validation/validationUtils.js";export default function seperateFarrierPricesFromAccessories(s){try{const e={},c={pads:[],packing:[],wedges:[],rockers:[],clips:[],casting:[],sedation:[]},o={pads:{name:{key:"pads_name_",action:(s,e)=>{c.pads[s-1]={...c.pads[s-1],name:e}}},cost:{key:"pads_cost_",action:(s,e)=>{c.pads[s-1]={...c.pads[s-1],cost:e}}}},packing:{name:{key:"packing_name_",action:(s,e)=>{c.packing[s-1]={...c.packing[s-1],name:e}}},cost:{key:"packing_cost_",action:(s,e)=>{c.packing[s-1]={...c.packing[s-1],cost:e}}}},wedges:{name:{key:"wedges_name_",action:(s,e)=>{c.wedges[s-1]={...c.wedges[s-1],name:e}}},cost:{key:"wedges_cost_",action:(s,e)=>{c.wedges[s-1]={...c.wedges[s-1],cost:e}}}},rockers:{cost:{key:"rockers",action:(s,e)=>{c.rockers=[{cost:e}]}}},clips:{cost:{key:"clips",action:(s,e)=>{c.clips=[{cost:e}]}}},casting:{cost:{key:"casting",action:(s,e)=>{c.casting=[{cost:e}]}}},sedation:{cost:{key:"sedation",action:(s,e)=>{c.sedation=[{cost:e}]}}}};for(let c in s)if(s.hasOwnProperty(c)){const[a,i,t]=c.split("_");if(o[a]){const e=void 0===t&&void 0===i?"cost":c.replace(`${a}_`,"").replace(`_${t}`,"");o[a][e]&&""!==s[c]&&o[a][e].action(t,s[c])}else{if(""!==s[c]&&!isNumeric(s[c],!0)){const s=new Error("Farrier prices must be numeric.");throw s.isCustom=!0,s}e[c]=s[c]}}return e.accessories=c,e}catch(s){throw console.warn("seperate farrier prices from accessories error: ",s),s}}