// @ts-nocheck
import{validationToken}from"../../../../tracker.js";import{clearMsg,mySuccess,setActiveTab}from"../../../../utils/dom/domUtils.js";import errorLogs from"../../../../utils/error-messages/errorLogs.js";import{addListener}from"../../../../utils/event-listeners/listeners.js";import{getUnpaidInvoicesAPI}from"../../../../utils/network/apiEndpoints.js";import{fetchData}from"../../../../utils/network/network.js";import showUnpaidClientInvoiceModal from"./showUnpaidClientInvoiceModal.js";export default async function displayUnpaidInvoices(e,i,t){e.preventDefault();try{setActiveTab(e,tabs,i),mySuccess(i,"Loading...","w3-text-blue"),t.innerHTML="";const o=await fetchData({api:getUnpaidInvoicesAPI,token:validationToken});t.innerHTML=o.msg;const n=document.querySelectorAll('span[id^="user-info-"]');n&&n.length>0&&n.forEach((e=>addListener(e,"click",(i=>showUnpaidClientInvoiceModal(i,e.dataset.clientid,e.dataset.trimid,e.dataset.invoiceid,modal,modalContent))))),clearMsg({container:i})}catch(e){await errorLogs("displayUnpaidInvoicesError","Error displaying the unpaid invoices: ",e),t.innerHTML="We cannot get the invoices while you are offline."}}