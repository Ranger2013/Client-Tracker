// @ts-nocheck
import openModal from"../../../../../utils/modal/openModal.js";import{mySuccess}from"../../../../../utils/dom/domUtils.js";import errorLogs from"../../../../../utils/error-messages/errorLogs.js";export default async function handleDisplayMsg(s,r){const e=["error","server-error","validation-error","no-data"];try{const{errorMessages:t,successMessages:a}=s.reduce(((s,r)=>(r.forEach((r=>{e.includes(r.status)&&s.errorMessages.push(r),"error"===r.email_status&&s.errorMessages.push(r),["error","server-error"].includes(r.invoice_status)&&s.errorMessages.push(r),"success"===r.email_status&&s.successMessages.push(r),"success"===r.invoice_status&&s.successMessages.push(r)})),s)),{errorMessages:[],successMessages:[]});return t.length&&displayErrorMsg(t),a.length&&displaySuccessMsg(a,r),!t.length}catch(s){throw await errorLogs("handleDisplayMsgError","Handle Display Msg Error: ",s),s}}function displaySuccessMsg(s,r){try{let e="";for(const r of s)e+=`<div>${r}</div>`;mySuccess(r,e)}catch(s){console.warn("display success msg error: ",s)}}function displayErrorMsg(s){try{let r='<ul class="w3-padding-small">';s.forEach((s=>{r+=`<li class="w3-light-red w3-padding-small w3-margin-small w3-round-large">\n\t\t\t\t\t${s.msg?s.msg.replace(/(SERVER ERROR:|ERROR:)/g,'<span class="w3-text-red w3-bold">$1</span>'):s.replace(/(SERVER ERROR:|ERROR:)/g,'<span class="w3-text-red w3-bold">$1</span>')}\n\t\t\t\t\t${s.data?`\n\t\t\t\t\t\t <ul class="w3-padding-small">\n\t\t\t\t\t\t\t  ${Object.entries(s.data).map((([s,r])=>`<li class="w3-margin-left w3-text-red">${r}</li>`)).join("")}\n\t\t\t\t\t\t </ul>\n\t\t\t\t\t`:""}\n\t\t\t  </li>`})),r+="</ul>",openModal({content:r,title:"Backup Data Errors",configuration:["w3-padding","w3-margin-top","w3-round-large","w3-white","w3-margin-center","w3-margin"]})}catch(s){console.warn("display error msg error: ",s)}}