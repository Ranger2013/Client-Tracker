// @ts-nocheck
import setupObjectStoreStructure from"./setupObjectStoreStructure.js";import handleIndicatorLights from"./handleIndicatorLights.js";import{buildEle}from"../../../../../utils/dom/domUtils.js";const createPageElements=()=>({container:buildEle({type:"div",myClass:["w3-container"]}),titleContainer:buildEle({type:"div",myClass:["w3-center"]}),title:buildEle({type:"h5",text:"Save your data to the server"}),messages:{error:buildEle({type:"div",attributes:{id:"backup-msg-error"},myClass:["w3-hide","w3-padding-small"]}),success:buildEle({type:"div",attributes:{id:"backup-msg-success"},myClass:["w3-padding-small"]})},buttonContainer:buildEle({type:"div",attributes:{id:"backup-data-button-container"},myClass:["w3-center","w3-margin-bottom"]}),button:buildEle({type:"button",myClass:["w3-button","w3-round-large","w3-black"],attributes:{id:"backup-data-button"},text:"Back Up Data"})});export default async function buildBackupPageElements(){try{const t=createPageElements();let e=await setupObjectStoreStructure({});const[a,r,s]=await handleIndicatorLights(e);return t.titleContainer.append(t.title),t.container.append(t.titleContainer),r&&(t.buttonContainer.append(t.button),t.container.append(t.buttonContainer)),t.container.append(t.messages.success,t.messages.error,a),[t.container,e,s]}catch(t){const{default:e}=await import("../../../../../utils/error-messages/errorLogs.js");throw await e("buildBackupPageElementsError","Build backup page elements error: ",t),t}}