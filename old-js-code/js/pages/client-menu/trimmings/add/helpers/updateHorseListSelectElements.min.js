// @ts-nocheck
import{addListener}from"../../../../../utils/event-listeners/listeners.js";export default async function updateHorseListSelectElements(){try{const e=document.getElementById("number-horse-container");e.querySelectorAll('select[id^="horse-list-"]').forEach((e=>{e.hasAttribute("data-listener")||(addListener(e,"change",(async t=>{const r=e.id.split("-").pop();document.getElementById(`services-container-${r}`).classList.remove("w3-hide"),document.getElementById(`checkbox-container-${r}`).classList.remove("w3-hide"),await updateAllSelectElements(t)})),e.setAttribute("data-listener","true"))}))}catch(e){const{handleError:t}=await import("../../../../../utils/error-messages/handleError.js");await t("updateHorseListSelectElementsError","Update horse list select elements error: ",e,"We encountered an error while updating the horse list select elements. Please refresh the page and try again.","form-msg")}}const removedOptionsMap=new Map;async function updateAllSelectElements(e){try{const t=e.target,r=document.getElementById("number-horse-container").querySelectorAll('select[id^="horse-list-"]'),s=t.id,n=t.options[t.selectedIndex].value,o=new Set(Array.from(r).map((e=>e.value)));removedOptionsMap.forEach(((e,t)=>{e.forEach((({listID:e,option:t,index:r})=>{if(!o.has(t.value)){const s=document.getElementById(e);s&&s.add(t,r)}}))})),removedOptionsMap.clear(),r.forEach((e=>{if(s!==e.id){const t=Array.from(e.options),r=t.find((e=>e.value===n));if(r){const n=t.indexOf(r);e.removeChild(r),removedOptionsMap.has(s)||removedOptionsMap.set(s,[]),removedOptionsMap.get(s).push({listID:e.id,option:r,index:n})}}}))}catch(e){const{handleError:t}=await import("../../../../../utils/error-messages/handleError.js");await t("updateAllSelectElementsError","Update all select elements error: ",e,"We encountered an error while updating the horse list select elements. Please refresh the page and try again.","form-msg")}}