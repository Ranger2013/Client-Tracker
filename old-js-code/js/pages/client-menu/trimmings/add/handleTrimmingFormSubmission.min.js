// @ts-nocheck
import ManageTrimming from"../../../../classes/ManageTrimming.js";import{helpDeskTicket}from"../../../../utils/error-messages/errorMessages.js";import validateTrimmingForm from"../../../../utils/validation/validateTrimmingForm.js";export default async function handleTrimmingFormSubmission(r,e){try{const i=Array.from(new FormData(r.target).entries()).reduce(((r,[e,i])=>(e.startsWith("accessories_")?(r[e]=r[e]||[],r[e].push(i)):r[e]=i,r)),{});if(await validateTrimmingForm(i))return{status:"validation-error",msg:"Please correct the errors in the form."};i.primaryKey=e.primaryKey;const t=new ManageTrimming;return await t.handleAddTrimmingSession(i,e)}catch(r){const{handleError:e}=await import("../../../../utils/error-messages/handleError.js");return await e("addTrimmingError","Add trimming error: ",r,"We encountered an error. Unable to add trimming/shoeing at this time.","form-msg"),{status:"error",msg:`Unable to add trimming at this time.<br>${helpDeskTicket}.`}}}