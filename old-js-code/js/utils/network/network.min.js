// @ts-nocheck
export async function fetchData({api:e,data:t,json:r=!0,token:a=null}){const o={method:t?"POST":"GET",credentials:"include",headers:{}};a&&(o.headers.Authorization=`Bearer ${a}`),t&&(o.body=r?JSON.stringify(t):t),r&&t&&(o.headers["Content-Type"]="application/json");try{const t=await fetch(e,o),r=t.headers.get("content-type");if(r&&-1!==r.indexOf("application/json")){if(!t.ok){const e=await t.text();throw new Error(`There was a problem on the server: ${e}`)}return await t.json()}{const e=await t.text();throw new Error(`There was an issue on the server: ${e}`)}}catch(e){throw e}}export async function logServerSideError(e,t,r,a=!0){try{const{getValidationToken:o}=await import("../../tracker.js"),n=o(),s={page:r,error:{name:t.name,message:t.message,stack:t.stack?t.stack.split("\n"):["No stack trace"]}};if(a)try{await fetchData({api:e,data:s,token:n})}catch(t){throw console.warn("fetchData error, possibly due to being offline. "),t}}catch(t){console.warn("User is offline or there was a server error")}}export async function isOnline(){try{if((await fetch("/tracker/online.php")).ok)return!0;throw new Error("Network response was not ok.")}catch(e){return!1}}