// @ts-nocheck
import ManageClient from"../../../../../../classes/ManageClient.js";import ManageUser from"../../../../../../classes/ManageUser.js";import{formatDate,formatTime,getSMSWeekday,isFutureDate,sortByTrimDateAndAppTime}from"../../../../../date/dateUtils.js";import{buildEle}from"../../../../../dom/domUtils.js";import selectClientMenuPage from"../../../../../navigation/selectClientMenuPage.js";import{cleanUserOutput}from"../../../../../string/stringUtils.js";export default async function buildClientList({active:e="",clientID:t=null,primaryKey:r=null}){try{const i=new ManageUser,a=new ManageClient,o=document.createDocumentFragment();let n;if(!e||"yes"!==e&&"no"!==e){Number(t);n=[await a.getClientInfo({primaryKey:r})]}else n=await a.getClientScheduleList();const l=await i.getUserSettings(),s=l.color_options,d=l.date_time;if(n&&n.length>0){n.sort(sortByTrimDateAndAppTime);const t=new Set;let i=0;return(await Promise.all(n.map((async(a,o)=>{if("string"==typeof e&&a.active.toLowerCase()===e.toLowerCase()||a.primaryKey===r)return t.has(a.cID)||(t.add(a.cID),i++),buildClientListBlock(a,o,s,d)})))).forEach((e=>{e&&o.appendChild(e)})),[o,i]}{const t=await buildNoClientsMessage(e);return o.appendChild(t),[o,0]}}catch(e){return console.warn("There was an error with the idb: ",e),[document.createDocumentFragment(),0]}}async function buildClientListBlock(e,t,r,i){try{const[a,o,n,l,s]=await Promise.all([getScheduleColorOptions(e.trim_date,r),buildClientAnchor(e),buildClientAddress(e),buildClientTrimDate(e,i),buildClientMenu(e,t+1)]),d=buildEle({type:"div",attributes:{id:`client-list-block-${t+1}`,style:a},myClass:["w3-row","w3-padding-small","w3-border-left","w3-border-right","w3-border-bottom"]});return[{myClass:["w3-col","m2","s4","w3-center","client-name"],content:o},{myClass:["w3-col","m2","w3-center","w3-hide-small","address"],content:n},{myClass:["w3-col","m2","w3-center","w3-hide-small","phone"],content:cleanUserOutput(e.phone)},{myClass:["w3-col","m2","w3-center","w3-hide-small"],content:cleanUserOutput(formatTime(e.app_time,i.time_format))},{myClass:["w3-col","m2","s4","w3-center"],content:l},{myClass:["w3-col","m2","s4","w3-center","w3-margin-top"],content:s}].forEach((e=>{const t=buildEle({type:"div",myClass:e.myClass,text:e.content});d.appendChild(t)})),d}catch(e){const{default:t}=await import("../../../../../../utils/error-messages/errorLogs.js");throw await t("buildClientListBlockError","Build client list block error: ",e),e}}async function getScheduleColorOptions(e,t){try{(new Date).setHours(0,0,0,0);const[r,i,a]=e.split("-").map(Number);new Date(r,i-1,a).setHours(0,0,0,0);const o=isFutureDate(e);let n="";return n=o>=7?`background-color:${t.color_7}; color: ${t.text_color}`:o<7&&o>=3?`background-color:${t.color_6_3}; color: ${t.text_color}`:2===o?`background-color:${t.color_2}; color: ${t.text_color}`:1===o?`background-color:${t.color_tomorrow}; color: ${t.text_color}`:0===o?`background-color:${t.color_today}; color: ${t.text_color}`:`background-color:${t.over_due}; color: ${t.text_color}`,n}catch(e){const{default:t}=await import("../../../../../../utils/error-messages/errorLogs.js");throw await t("getScheduleColorOptionsError","Get schedule color options error: ",e),e}}async function buildClientAnchor(e){try{return buildEle({type:"a",attributes:{href:`sms://${cleanUserOutput(e.phone)}`,title:`Text ${cleanUserOutput(e.client_name)}`},myClass:["client-name"],text:`${cleanUserOutput(e.client_name)}`})}catch(e){const{default:t}=await import("../../../../../../utils/error-messages/errorLogs.js");throw await t("buildClientAnchorError","Build client anchor error: ",e),e}}async function buildClientAddress(e){try{let t=`${cleanUserOutput(e.street)},<br>${cleanUserOutput(e.city)}, ${cleanUserOutput(e.state)}`;return t+=e.zip&&""!==e.zip?`, ${cleanUserOutput(e.zip)}`:"",t}catch(e){const{default:t}=await import("../../../../../../utils/error-messages/errorLogs.js");throw await t("buildClientAddressError","Build client address error: ",e),e}}async function buildClientTrimDate(e,t){try{const r=new Date(e.trim_date+"T00:00").toLocaleString("en-US",{weekday:"long"}),i=buildEle({type:"div"}),a=buildEle({type:"div",text:r}),o=buildEle({type:"span",myClass:["app-date"],text:cleanUserOutput(formatDate(e.trim_date,t.date_format))}),n=buildEle({type:"div",myClass:["w3-hide-medium","w3-hide-large"],text:`At ${formatTime(e.app_time,t.time_format)}`});return i.appendChild(a),i.appendChild(o),i.appendChild(n),i}catch(e){const{default:t}=await import("../../../../../../utils/error-messages/errorLogs.js");throw await t("buildClientTrimDateError","Build client trim date error: ",e),e}}async function buildNoClientsMessage(e){try{const t=buildEle({type:"div",myClass:["w3-center","w3-padding-small"]}),r=buildEle({type:"h5",myClass:["w3-text-red"],text:`You currently do not have any ${"yes"===e?"active":"inactive"} clients`});return t.appendChild(r),t}catch(e){const{default:t}=await import("../../../../../../utils/error-messages/errorLogs.js");throw await t("buildNoClientsMessageError","Build no clients message error: ",e),e}}async function buildClientMenu(e,t){try{const r=getSMSWeekday(e.trim_date),i=formatTime(e.app_time,12),a=encodeURI(`${e.street},${e.city},${e.state}`),o=e.cID,n=e.primaryKey,l=new Date,s=new Date(l);s.setDate(l.getDate()+1);const[d,c,u]=e.trim_date.split("-").map(Number),m=new Date(d,c-1,u),p=s.toLocaleDateString("en-US"),w=`Wanting to confirm your farrier appointment for ${m.toLocaleDateString("en-US")===p?"tomorrow":r} at ${i}`,b=buildEle({type:"div",myClass:["w3-dropdown-click"]}),y=buildEle({type:"button",myClass:["w3-button","w3-padding-small","w3-round","w3-dark-grey","w3-text-white","w3-small"],text:"Manage Client"}),h=buildEle({type:"div",attributes:{id:`button-${t}`,style:"right: 0px; width: 200px;"},myClass:["w3-dropdown-content","w3-bar-block","w3-border","w3-border-white"]}),g=buildEle({type:"a",attributes:{href:`sms://${cleanUserOutput(e.phone)}?&body=${w}`},myClass:["w3-border-bottom","w3-border-white","w3-bar-item","w3-button","w3-text-white","w3-dark-grey"],text:"Confirm Appointment"}),C=buildEle({type:"a",attributes:{href:`http://maps.google.com/maps?q=${a}`,target:"_blank"},myClass:["w3-border-bottom","w3-border-white","w3-bar-item","w3-button","w3-dark-grey","w3-text-white","w3-hide-large"],text:"Directions"}),f=buildEle({type:"a",attributes:{href:`tel:${cleanUserOutput(e.phone)}`},myClass:["w3-border-bottom","w3-border-white","w3-bar-item","w3-button","w3-dark-grey","w3-text-white","w3-hide-large"],text:"Call"});b.appendChild(y),b.appendChild(h),h.appendChild(g),h.appendChild(C),h.appendChild(f);const $={trimming:{id:`trims-${t}`,cID:o,primaryKey:n,buttonText:"Trimming/Shoeing",pages:{add:{href:{address:`../../trimming/add/?cID=${o}&key=${n}`,text:"Add Trim/Shoeing"},pageName:"add-trimming"},view:{href:{address:`../../trimming/view/?cID=${o}&key=${n}`,text:"View Dates"},pageName:"view-trim-dates"}}},clientHorses:{id:`horses-${t}`,cID:o,primaryKey:n,buttonText:"Client Horses",pages:{add:{href:{address:`../../client-horses/add/?cID=${o}&key=${n}`,text:"Add Horse"},pageName:"add-horse"},edit:{href:{address:`../../client-horses/edit/?cID=${o}&key=${n}`,text:"Edit Horse"},pageName:"edit-horse"}}}},D=await buildClientDropDownMenu($);h.appendChild(D);const x=buildEle({type:"a",attributes:{href:`../edit-client/?cID=${o}&key=${n}`},myClass:["w3-bar-item","w3-button","w3-text-white","w3-black"],text:"Edit Client"});return x.addEventListener("click",(async e=>await selectClientMenuPage(e,"edit-client",o,n))),h.appendChild(x),y.addEventListener("click",listenForClientMenuButton),b}catch(e){const{default:t}=await import("../../../../../../utils/error-messages/errorLogs.js");throw await t("buildClientMenuError","Build client menu error: ",e),e}}async function buildClientDropDownMenu(e){try{const t=document.createDocumentFragment();return Object.keys(e).forEach((r=>{const i=e[r].cID,a=e[r].primaryKey,o=buildEle({type:"div",myClass:["w3-dropdown-click"]}),n=buildEle({type:"button",myClass:["w3-button","w3-border-bottom","w3-border-white","w3-text-white","w3-padding-small","w3-black"],text:'<img src="/public/siteImages/caret-down-white.svg">&nbsp;'+e[r].buttonText}),l=buildEle({type:"div",attributes:{id:`${e[r].id}`,style:"position: relative"},myClass:["w3-dropdown-content","w3-bar-block","w3-blue-grey"]}),s=e[r].pages,d=Object.keys(s).map((e=>{const t=s[e].href.address,r=s[e].href.text,o=s[e].pageName,n=buildEle({type:"a",attributes:{href:t},myClass:["w3-border-bottom","w3-bar-item","w3-button","w3-text-white"],text:r});return n.addEventListener("click",(async e=>await selectClientMenuPage(e,o,i,a))),n}));o.appendChild(n),o.appendChild(l),d.forEach((e=>l.appendChild(e))),t.appendChild(o),n.addEventListener("click",listenForClientMenuButton)})),t}catch(e){const{default:t}=await import("../../../../../../utils/error-messages/errorLogs.js");throw await t("buildClientDropDownMenuError","Build client drop down menu error: ",e),e}}function listenForClientMenuButton(e){e.target.nextElementSibling.classList.toggle("w3-show")}