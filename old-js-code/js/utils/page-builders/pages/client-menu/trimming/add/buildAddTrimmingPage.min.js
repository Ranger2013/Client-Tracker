// @ts-nocheck
import ManageClient from"../../../../../../classes/ManageClient.js";import ManageUser from"../../../../../../classes/ManageUser.js";import{getReadableCurrentFutureDate}from"../../../../../date/dateUtils.js";import{buildEle,clearMsg}from"../../../../../dom/domUtils.js";import{removeAllListeners}from"../../../../../event-listeners/listeners.js";import buildPageContainer from"../../../../helpers/buildPageContainer.js";import buildSubmitButtonSection from"../../../../helpers/buildSubmitButtonSection.js";import buildTwoColumnInputSection from"../../../../helpers/buildTwoColumnInputSection.js";import buildFuelChargeCheckboxSection from"./helpers/buildFuelChargeCheckboxSection.js";import buildInvoicePaidCheckbox from"./helpers/buildInvoicePaidCheckboxSection.js";import buildReceiptSection from"./helpers/buildReceiptSection.js";import buildSessionNotesSection from"./helpers/buildSessionNotesSection.js";import getMileageCharges from"./helpers/getMileageCharges.js";export default async function buildAddTrimmingPage({cID:e,primaryKey:i,mainContainer:t}){try{if(clearMsg({container:"page-msg"}),!e||!i)throw new Error("No cID or primary key provided.");const n=new ManageUser,a=await n.getMileageCharges(),r=new ManageClient,l=await r.getClientInfo({primaryKey:i}),o=l?.client_name||"No Name",m=l?.horses||[],p=l?.distance||0;if(0===m.length){const{default:n}=await import("./helpers/buildNoHorsesPage.js");return void await n(t,e,i)}const d=buildEle({type:"div",attributes:{id:"form-msg"},myClass:["w3-center"]}),u=buildEle({type:"form",attributes:{id:"trimming-form"}}),s=buildEle({type:"div",attributes:{id:"number-horse-container"},myClass:["w3-padding-small"]}),c=parseInt(l.trim_cycle,10)/7,b=buildEle({type:"div",myClass:["w3-small","w3-text-red"],text:`NOTE: This client trim cycle is ${c} weeks.`});let g;l?.email&&(g=await buildReceiptSection());const h=getMileageCharges(p,a);let C;h.inRange&&(C=await buildFuelChargeCheckboxSection(h.cost));const[[T,f],y,S,w,I,x,N,j,D]=await Promise.all([buildPageContainer({pageTitle:"Add Trimming for ",clientName:o,cID:e,primaryKey:i}),buildTwoColumnInputSection({labelText:"Number of Horses:",inputType:"number",inputID:"number-horses",inputName:"number_horses",inputTitle:"Number of Horses",required:!0}),buildTwoColumnInputSection({labelText:"Trim Date:",inputType:"date",inputID:"trim-date",inputName:"trim_date",inputTitle:"Trim Date",required:!0,additionalElement:b}),buildTwoColumnInputSection({labelText:"Next Trimming/Shoeing Date:",inputType:"date",inputID:"next-trim-date",inputName:"next_trim_date",inputTitle:"Next Trim Date",required:!0,inputValue:getReadableCurrentFutureDate(l?.trim_cycle)}),buildTwoColumnInputSection({labelText:"Appointment Time:",inputType:"time",inputID:"app-time",inputName:"app_time",inputTitle:"Appointment Time",required:!0,inputValue:l?.app_time}),buildSessionNotesSection(),buildTwoColumnInputSection({labelText:"Amount Due:",inputType:"number",inputID:"payment",inputName:"payment",inputTitle:"Payment",required:!0}),buildInvoicePaidCheckbox(),buildSubmitButtonSection("Add Trimming/Shoeing")]);f.appendChild(d),f.appendChild(u),u.appendChild(y),u.appendChild(s),u.appendChild(S),u.appendChild(w),u.appendChild(I),g instanceof HTMLElement&&u.appendChild(g),C instanceof HTMLElement&&u.appendChild(C),u.appendChild(x),u.appendChild(N),u.appendChild(j),u.appendChild(D),T.appendChild(f),t.innerHTML="",t.appendChild(T);const{default:M}=await import("../../../../../../pages/client-menu/trimmings/add/addTrimmingJS.js");return await M({clientInfo:l}),removeAllListeners}catch(e){const{handleError:i}=await import("../../../../../error-messages/handleError.js");await i("buildAddTrimmingPageError","Build add trimming page error: ",e,"Unable to show the add trimming page. Please try again later.","page-msg")}}