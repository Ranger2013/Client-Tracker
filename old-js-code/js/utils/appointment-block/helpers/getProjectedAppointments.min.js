// @ts-nocheck
import IndexedDBOperations from"../../../classes/IndexedDBOperations.js";import getBlockOfTime from"./getBlockOfTime.js";export default async function getProjectedAppointments(e,t,n,o){try{let s=n?.cID||null;if(!(n?.trim_cycle||("null"!==t.options[t.selectedIndex].value?t.options[t.selectedIndex].value:null)))return null;const[r,i,l]=e.value.split("-"),c=new Date(r,i-1,l);c.setHours(0,0,0,0);const a=[7,14,21,28,35,42,49,56,63,70],m=[],g=new IndexedDBOperations,p=await g.openDBPromise();for(const e of a){const t=new Date(c);t.setDate(c.getDate()-e);const n=t.toISOString().slice(0,10),r=await g.getAllStoreByIndexPromise(p,g.stores.CLIENTLIST,"trim_date",n);if(r&&r.length>0)for(const t of r){if(t.cID===s||"no"===t.active||t.trim_cycle!==e.toString())continue;const n=await g.getStorePromise(p,g.stores.TRIMMING,t.cID);let r=t.horses?.length||1,i="";n?.trimmings?.length>0?r=n.trimmings[n.trimmings.length-1].horses.length:t.horses&&0!==t.horses.length||(i="New Client.");const l={client_name:t.client_name,city:t.city,num_horses:r,new_client:i,time_block:await getBlockOfTime(o.avg_horses,r,o.avg_drive_time)};m.push(l)}}return m.length>0?m:null}catch(e){const{default:t}=await import("../../error-messages/errorLogs.js");throw await t("getProjectedAppointmentsError","Get projected appointments error: ",e),e}}