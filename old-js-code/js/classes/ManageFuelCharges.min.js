// @ts-nocheck
import IndexedDBOperations from"./IndexedDBOperations.js";import ManageUser from"./ManageUser.js";export default class ManageFuelCharges{constructor(){this.indexed=new IndexedDBOperations,this.manageUser=new ManageUser}async addFuelChargesByMile(e){try{let a=(await this.manageUser.getUserSettings()).mileage_charges;return a.per_mile={...a.per_mile,...e},a.range=[],!!await this.manageUser.updateLocalUserSettings({userData:a,settingsProperty:"mileage_charges",backupStore:this.indexed.stores.MILEAGECHARGES,backupAPITag:"add_fuelCosts"})}catch(e){const{default:a}=await import("../utils/error-messages/errorLogs.js");return await a("addFuelChargesByMileError","Add fuel charges by mile error: ",e),!1}}async addFuelChargesByRange(e){try{if(""===e.fuel_ranges)return!1;let a=(await this.manageUser.getUserSettings()).mileage_charges;a.per_mile={starting_mile:null,cost_per_mile:null,base_cost:null},a.range=[];for(let r=1;r<=e.fuel_ranges;r++){const s=`mileage_range_${r}`,t=`fuel_cost_${r}`;e[s]&&e[t]&&a.range.push({range:e[s],cost:e[t]})}return!!await this.manageUser.updateLocalUserSettings({userData:a,settingsProperty:"mileage_charges",backupStore:this.indexed.stores.MILEAGECHARGES,backupAPITag:"add_fuelCosts"})}catch(e){const{default:a}=await import("../utils/error-messages/errorLogs.js");return await a("addFuelChargesByRangeError","Add fuel charges by range error: ",e),!1}}}