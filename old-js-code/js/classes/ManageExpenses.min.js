// @ts-nocheck
import IndexedDBOperations from"./IndexedDBOperations";export default class ManageExpenses{constructor(){this.indexed=new IndexedDBOperations}async addExpenses(e){try{const s=await this.indexed.openDBPromise();return e.add_expenses=!0,await this.indexed.putStorePromise(s,e,this.indexed.stores.ADDEXPENSES),{status:!0,msg:"Expenses added successfully."}}catch(e){const{handleError:s}=await import("../utils/error-messages/handleError.js");return await s("addExpensesFormSubmissionError","Error adding expenses: ",e,"Unable to add expenses. Please try again later.","form-msg"),{status:!1,msg:"Unable to add expenses. Please try again later."}}}}