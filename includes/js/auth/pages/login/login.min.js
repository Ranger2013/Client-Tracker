// @ts-nocheck
import{authAPI}from"../../../core/network/api/apiEndpoints.min.js";import{fetchData}from"../../../core/network/services/network.min.js";import{safeDisplayMessage}from"../../../core/utils/dom/messages.min.js";import ManageUser from"../../../features/user/models/ManageUser.min.js";async function handleLogIn(e){e.preventDefault();try{safeDisplayMessage({elementId:"form-msg",message:"Processing...",color:"w3-text-blue",isSuccess:!0});const s=Object.fromEntries(new FormData(e.target));if(!validateForm(s))return;const a=await fetchData({api:authAPI.login,data:s,timeout:1e4});if("ok"!==a.status)return void safeDisplayMessage({elementId:"form-msg",message:a.msg});const t=a.msg;if(!t)return void safeDisplayMessage({elementId:"form-msg",message:"Token validation issue. Please contact the administrator."});const r=new ManageUser;await r.updateLocalUserSettings({userData:{userToken:t,status:a.member_status,expiry:a.account_expiry,uID:a.uID},settingsProperty:"user_status"}),window.location.href="/tracker/"}catch(e){const{AppError:s}=await import("../../../core/errors/models/AppError.min.js");s.handleError(e,{errorCode:s.Types.AUTHORIZATION_ERROR,userMessage:s.BaseMessages.system.authorization}),safeDisplayMessage({elementId:"form-msg",message:"Login failed. Please contact administrator."})}}function validateForm(e){return!(!e.username||!e.password)||(safeDisplayMessage({elementId:"form-msg",message:"Usr Name and Password are required."}),!1)}document.getElementById("login-form").addEventListener("submit",handleLogIn);