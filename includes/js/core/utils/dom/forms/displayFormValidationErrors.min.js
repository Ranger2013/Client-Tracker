// @ts-nocheck
import{top}from"../../window/scroll.js";import{safeDisplayMessage}from"../messages.js";import{underscoreToHyphen,underscoreToHyphenPlusError}from"../../string/stringUtils.js";export default async function displayFormValidationErrors(r,e={}){const{formMessage:o="Please fix the following errors",scrollToTop:s=!0,displayTarget:t="form-msg"}=e;try{if(!Array.isArray(r)||0===r.length)return void console.warn("displayFormValidationErrors called with invalid or empty errors array:",r);const e=r.filter((r=>r&&"object"==typeof r&&"string"==typeof r.input&&"string"==typeof r.msg));if(0===e.length)return void console.warn("No valid error entries found in:",r);for(const{input:r,msg:o}of e)safeDisplayMessage({elementId:underscoreToHyphenPlusError(r),message:o,targetId:underscoreToHyphen(r)});safeDisplayMessage({elementId:t,message:o}),s&&top()}catch(r){const{AppError:e}=await import("../../../errors/models/AppError.js");e.handleError(r,{errorCode:e.Types.FORM_VALIDATION_ERROR,userMessage:null})}}