// @ts-nocheck
export function buildEle({type:e,attributes:t,myClass:n,text:r}){const o=document.createElement(e);if(t)for(const e in t)o.setAttribute(e,t[e]);return n&&o.classList.add(...n),r&&("string"==typeof r||"number"==typeof r?o.innerHTML=r:r instanceof Node&&o.appendChild(r)),o}export function disableEnableSubmitButton(e){try{const t=getValidElement(e),n=document.querySelectorAll(".error");t.disabled=n.length>0}catch(e){import("../../errors/models/AppError.js").then((({AppError:t})=>new t("Submit button state update failed",{originalError:e,errorCode:t.Types.RENDER_ERROR,shouldLog:!0,displayTarget:"page-msg",userMessage:null}).logError())).catch((e=>console.error("Error handler failed:",e)))}}export function getValidElement(e){if("string"==typeof e){const t=document.getElementById(e);if(!t)throw new Error(`Element with ID "${e}" not found.`);return t}if(!(e instanceof HTMLElement))throw new Error("The provided element is not valid.");return e}export function buildElementsFromConfig(e){return Object.entries(e).reduce(((e,[t,n])=>(e[t]=buildEle(n),e)),{})}export function buildGenericSelectOptions(e){return e.list.map((t=>buildEle({type:"option",attributes:{value:e.value(t)},text:e.text(t)})))}export function updateSelectOptions(e,t,{valueMapper:n,textMapper:r,selectedValue:o=null,preserveFirst:l=!0}){const i=getValidElement(e),u=l&&i.options.length>0?i.options[0].cloneNode(!0):null,a=buildGenericSelectOptions({list:t,value:n,text:r}),d=document.createDocumentFragment();u&&d.appendChild(u),a.forEach((e=>d.appendChild(e))),i.innerHTML="",i.appendChild(d),null!==o&&(i.value=o)}