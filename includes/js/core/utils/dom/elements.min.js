// @ts-nocheck
export function buildEle({type:e,attributes:t,myClass:r,text:n}){const o=document.createElement(e);if(t)for(const e in t)o.setAttribute(e,t[e]);return r&&o.classList.add(...r),n&&("string"==typeof n||"number"==typeof n?o.innerHTML=n:n instanceof HTMLElement&&o.appendChild(n)),o}export function disableEnableSubmitButton(e){try{const t=getValidElement(e),r=document.querySelectorAll(".error");t.disabled=r.length>0}catch(e){import("../../errors/models/AppError.js").then((({AppError:t})=>new t("Submit button state update failed",{originalError:e,errorCode:t.Types.RENDER_ERROR,shouldLog:!0,displayTarget:"page-msg",userMessage:null}).logError())).catch((e=>console.error("Error handler failed:",e)))}}export function getValidElement(e){if("string"==typeof e){const t=document.getElementById(e);if(!t)throw new Error(`Element with ID "${e}" not found.`);return t}if(!(e instanceof HTMLElement))throw new Error("The provided element is not valid.");return e}export function buildElementsFromConfig(e){return Object.entries(e).reduce(((e,[t,r])=>(e[t]=buildEle(r),e)),{})}