// @ts-nocheck
// @ts-nocheck
// @ts-nocheck
// @ts-nocheck
const COMPONENT="Elements.js",DEBUG=!1,debugLog=(...e)=>{false};export function buildEle({type:e,attributes:t,myClass:r,text:n}){const o=document.createElement(e);if(t)for(const e in t)o.setAttribute(e,t[e]);return r&&o.classList.add(...r),n&&("string"==typeof n||"number"==typeof n?o.innerHTML=n:n instanceof Node&&o.appendChild(n)),o}export function disableEnableSubmitButton(e){try{const t=getValidElement(e),r=document.querySelectorAll(".error");t.disabled=r.length>0}catch(e){import("../../errors/models/AppError.js").then((({AppError:t})=>new t("Submit button state update failed",{originalError:e,errorCode:t.Types.RENDER_ERROR,shouldLog:!0,displayTarget:"page-msg",userMessage:null}).logError())).catch((e=>console.error("Error handler failed:",e)))}}export function getValidElement(e){if("string"==typeof e){const t=document.getElementById(e);if(!t)throw new Error(`Element with ID "${e}" not found.`);return t}if(!(e instanceof HTMLElement))throw new Error(`The provided element "${e}" is not valid.`);return e}export function buildElementsFromConfig(e){return Object.entries(e).reduce(((e,[t,r])=>(e[t]=buildEle(r),e)),{})}export function buildGenericSelectOptions(e){return debugLog(),e.list.map((t=>{const r=e.value(t),n=e.text(t);return buildEle({type:"option",attributes:{value:r,...e.attributes&&e.attributes(t)},text:n})}))}export function updateSelectOptions(e,t,{valueMapper:r,textMapper:n,datasetMapper:o,selectedValue:l=null,preserveFirst:i=!0}){const u=getValidElement(e),a=i&&u.options.length>0?u.options[0].cloneNode(!0):null,s=t.map((e=>buildEle({type:"option",attributes:{value:r(e),...o&&o(e)},text:n(e)}))),d=document.createDocumentFragment();a&&d.appendChild(a),s.forEach((e=>d.appendChild(e))),u.innerHTML="",u.appendChild(d),null!==l&&(u.value=l)}