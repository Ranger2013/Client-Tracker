// @ts-nocheck
export const DEVICE_TYPES={MOBILE:"mobile",TABLET:"tablet",LAPTOP:"laptop",DESKTOP:"desktop"};export const DEBOUNCE_DELAYS={FAST:300,NORMAL:500,MEDIUM:650,SLOW:800,MOBILE:1e3,TABLET:800};const TYPING_SPEEDS={POWER:100,FAST:80,MEDIUM:60,NORMAL:40,SLOW:30};let typingMetrics={lastKeyTime:0,keystrokes:0,timeElapsed:0,averageWPM:0},performanceMetrics={avgInputDelay:0,sampleCount:0};export function updateOptimalDelay(e){performance.now();if(performanceMetrics.avgInputDelay=(performanceMetrics.avgInputDelay*performanceMetrics.sampleCount+e)/(performanceMetrics.sampleCount+1),performanceMetrics.sampleCount++,console.debug("Performance metrics:",{avgDelay:performanceMetrics.avgInputDelay,samples:performanceMetrics.sampleCount,currentDelay:e}),performanceMetrics.sampleCount>10){if(performanceMetrics.avgInputDelay>100)return DEBOUNCE_DELAYS.SLOW;if(performanceMetrics.avgInputDelay<50)return DEBOUNCE_DELAYS.FAST}}function detectDevice(){const e=navigator.userAgent.toLowerCase(),t=navigator?.deviceMemory||4,r=navigator?.hardwareConcurrency||4,n="ontouchstart"in window||navigator.maxTouchPoints>0,o=/android|webos|iphone|ipod|blackberry|iemobile|opera mini/i.test(e),i=/(ipad|tablet|(android(?!.*mobile))|(windows(?!.*phone)(.*touch))|kindle|playbook|silk|(puffin(?!.*(IP|AP|WP))))/i.test(e),a=/macintosh|windows nt/i.test(e)&&n;return{type:o?DEVICE_TYPES.MOBILE:i?DEVICE_TYPES.TABLET:a?DEVICE_TYPES.LAPTOP:DEVICE_TYPES.DESKTOP,isLowPowered:t<4||r<4,isHighPowered:t>=8&&r>=8,hasTouch:n,deviceMemory:t,cpuCores:r,isTouch:n,isMobile:o||i}}function calculateTypingSpeed(){const e=performance.now();if(typingMetrics.lastKeyTime>0){const t=e-typingMetrics.lastKeyTime;if(t<2e3){typingMetrics.timeElapsed+=t,typingMetrics.keystrokes++;const e=typingMetrics.timeElapsed/6e4;typingMetrics.averageWPM=typingMetrics.keystrokes/5/e}}return typingMetrics.lastKeyTime=e,typingMetrics.averageWPM}function getDelayForTypingSpeed(e){return e>=TYPING_SPEEDS.POWER?DEBOUNCE_DELAYS.FAST:e>=TYPING_SPEEDS.FAST?DEBOUNCE_DELAYS.MEDIUM:e>=TYPING_SPEEDS.MEDIUM?DEBOUNCE_DELAYS.NORMAL:DEBOUNCE_DELAYS.SLOW}export function getOptimalDelay(e="default"){const t=detectDevice();if(t.isMobile)return"search"===e?t.isTouch?DEBOUNCE_DELAYS.MOBILE:DEBOUNCE_DELAYS.NORMAL:DEBOUNCE_DELAYS.FAST;const r=calculateTypingSpeed();return console.debug("Performance metrics:",{device:t.type,typingSpeed:Math.round(r),inputType:e}),t.type===DEVICE_TYPES.MOBILE?DEBOUNCE_DELAYS.MOBILE:t.type===DEVICE_TYPES.TABLET?DEBOUNCE_DELAYS.TABLET:getDelayForTypingSpeed(r)}export function createDebouncedHandler(e,t){let r;return(...n)=>{clearTimeout(r),r=setTimeout((()=>e(...n)),t)}}export function createThrottledHandler(e,t){let r;return(...n)=>{r||(e(...n),r=!0,setTimeout((()=>r=!1),t))}}export function createAdaptiveHandler(e,t="default"){let r,n=DEBOUNCE_DELAYS.NORMAL;return(...o)=>{clearTimeout(r);const i=getOptimalDelay(t);i!==n&&(n=i,console.debug("Adjusted delay to:",i)),r=setTimeout((()=>{const t=performance.now();e(...o),updateOptimalDelay(performance.now()-t)}),n)}}