// @ts-nocheck
import{fetchData}from"../../network/services/network.js";import{getValidationToken}from"../../../tracker.js";export async function logServerSideError(r,o,e,a=!0){try{console.log("In logServerSideError: API: ",r),console.log("In logServerSideError: err: ",o),console.log("In logServerSideError: page: ",e);const t=getValidationToken();console.log("In logServerSideError: validationToken: ",t);const s={page:e,error:{name:o.name,message:o.message,stack:o.stack?.split("\n")||["No stack trace"]}};if(a)try{await fetchData({api:r,data:s,token:t})}catch(r){"NETWORK_ERROR"===r.message&&await storeErrorForSync(s),console.warn("Error logging failed:",r.message)}}catch(o){console.warn("Error logging process failed:",o)}}async function storeErrorForSync(r){try{const{default:o}=await import("../../../../../old-js-code/js/classes/IndexedDBOperations.js"),e=new o,a=await e.openDBPromise();await e.putStorePromise(a,r,e.stores.ERRORQUEUE)}catch(r){console.warn("Failed to store error for sync:",r)}}