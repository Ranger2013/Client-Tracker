// @ts-nocheck
import{buildEle}from"../../../../utils/dom/elements.min.js";import{buildPageContainer,buildTwoColumnInputSection,buildTwoColumnSelectElementSection}from"../../../../utils/dom/forms/buildUtils.min.js";import{removeListeners}from"../../../../utils/dom/listeners.min.js";import{cleanUserOutput}from"../../../../utils/string/stringUtils.min.js";const COMPONENT="Build Delete Duplicate Client Page",DEBUG=!1,debugLog=(...e)=>{false},COMPONENT_ID="delete-duplicate-client";export default async function buildDeleteDuplicateClientPage({mainContainer:e,manageClient:t,manageUser:i}){try{const n=await t.getAllDuplicateClients();if(0===n.length)return void await buildNoDuplicateClients(e);debugLog();const l=await getClientListOptions({manageClient:t,mainContainer:e});debugLog();const a=await buildPageComponents(l);await renderPage({mainContainer:e,pageComponents:a}),await initializeEventHandlers({mainContainer:e,manageClient:t,manageUser:i,componentId:COMPONENT_ID,duplicateClients:n})}catch(e){throw e}}async function getClientListOptions({manageClient:e,mainContainer:t}){const i=await e.getAllDuplicateClients();if(0===i.length)return void await buildNoDuplicateClients(t);debugLog();const n=getDuplicateCount(i);debugLog();const l=getUniqueClientList({duplicateClients:i,clientDuplicateCounts:n});return debugLog(),l.unshift({cID:null,client_name:"-- Select a Client --"}),l.map((e=>({value:e.cID,text:`${cleanUserOutput(e?.client_name)}${e?.duplicateCount?` (${e?.duplicateCount} duplicates)`:""}`})))}async function buildNoDuplicateClients(e){const[t,i]=await buildPageContainer({pageTitle:"Delete Duplicate Client"}),n=buildEle({type:"p",text:"No duplicate clients found.",myClass:["w3-center"]});i.appendChild(n),t.appendChild(i),e.innerHTML="",e.appendChild(t)}function getDuplicateCount(e){return e.reduce(((e,t)=>(e[t.cID]=(e[t.cID]||0)+1,e)),{})}function getUniqueClientList({duplicateClients:e,clientDuplicateCounts:t}){return Array.from(new Set(e.map((e=>e.cID)))).map((i=>({...e.find((e=>e.cID===i)),duplicateCount:t[i]})))}async function buildPageComponents(e){const[[t,i],n,l]=await Promise.all([buildPageContainer({pageTitle:"Delete Duplicate Client"}),buildTwoColumnInputSection({labelText:"Filter Client List:",inputID:"filter-client-list",inputType:"search",inputName:"filter_client_list",inputTitle:"Filter the client list"}),buildTwoColumnSelectElementSection({labelText:"Select a Client:",selectID:"client-list",selectName:"client_list",selectTitle:"Select a client.",required:!0,options:e})]);return[t,i,n,l,buildEle({type:"div",attributes:{id:"client-container"},myClass:["w3-padding-small"]})]}async function renderPage({mainContainer:e,pageComponents:t}){debugLog();const[i,n]=t.splice(0,2);n.append(...t),i.append(n),e.innerHTML="",e.appendChild(i)}async function initializeEventHandlers({mainContainer:e,manageClient:t,manageUser:i,componentId:n,duplicateClients:l}){try{const{default:a}=await import("../../../../../features/client/ui/delete-duplicate/deleteDuplicateClientJS.js");return await a({mainContainer:e,duplicateClients:l,manageClient:t,manageUser:i,componentId:n}),()=>removeListeners(COMPONENT_ID)}catch(e){const{AppError:t}=await import("../../../../errors/models/AppError.min.js");t.process(e,{errorCode:t.Types.INITIALIZATION_ERROR,userMessage:t.BaseMessages.system.initialization},!0)}}