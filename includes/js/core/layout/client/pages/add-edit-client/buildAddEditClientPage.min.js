// @ts-nocheck
// @ts-nocheck
// @ts-nocheck
import{buildEle}from"../../../../utils/dom/elements.js";import{trimCycleConfigurations}from"../../../../utils/dom/forms/trimCycleConfigurations.js";import{removeListeners}from"../../../../utils/dom/listeners.js";import{clearMsg}from"../../../../utils/dom/messages.js";import buildPageContainer from"../../../components/buildPageContainer.js";import buildTwoColumnAddressSection from"../../../components/buildTwoColumnAddressSection.js";import buildTwoColumnInputSection from"../../../components/buildTwoColumnInputSection.js";import buildTwoColumnRadioButtonSection from"../../../components/buildTwoColumnRadioButtonSection.js";import buildTwoColumnSelectElementSection from"../../../components/buildTwoColumnSelectElementSection.js";export const COMPONENT_ID="add-edit-client";export default async function buildAddEditClientPage({cID:e=null,primaryKey:t=null,mainContainer:i,manageClient:n,manageUser:l}){try{const u={client_name:"",street:"",city:"",state:"",zip:"",distance:"",phone:"",email:"",trim_cycle:"",trim_date:"",app_time:"",active:""};clearMsg({container:"page-msg"});let o=null,a=null,p=null,r=null;if(e&&""!==e||t&&""!==t){o=await n.getClientInfo({primaryKey:t}),a=`/tracker/clients/appointments/?cID=${e}&key=${t}`,p=o.client_name,Object.keys(u).forEach((e=>{void 0!==o[e]&&(u[e]=o[e])}));const{default:i}=await import("../../../components/buildSubmitDeleteButtonSection.js");r=await i({submitButtonText:"Edit Client",deleteButtonText:"Delete Client"})}else{const{default:e}=await import("../../../components/buildSubmitButtonSection.js");r=await e("Add Client")}const m=o?"Edit ":"Add a new Client",[d,s]=await buildPageContainer({pageTitle:m,clientAnchor:a,clientName:p,cID:e,primaryKey:t}),c=buildEle({type:"form",attributes:{id:"client-form"}});(await Promise.all([buildTwoColumnInputSection({labelText:"Client Name:",inputID:"client-name",inputType:"text",inputName:"client_name",inputTitle:"Client Name",inputValue:u.client_name,required:"required"}),buildTwoColumnAddressSection("Address:","street",[{typeEle:"input",inputId:"street",inputType:"text",inputName:"street",inputTitle:"Street",inputClass:"w3-input w3-border w3-padding-small input",inputValue:u.street,required:"required"},{typeEle:"input",inputId:"city",inputType:"text",inputName:"city",inputTitle:"City",inputClass:"w3-input w3-border w3-padding-small input",inputValue:u.city,required:"required"},{typeEle:"input",inputId:"state",inputType:"text",inputName:"state",inputTitle:"State",inputClass:"w3-input w3-border w3-padding-small input",inputValue:u.state,required:"required"},{typeEle:"input",inputId:"zip",inputType:"text",inputName:"zip",inputTitle:"Zip Code (Optional)",inputClass:"w3-input w3-border w3-padding-small input",inputPattern:"[0-9]{5}",inputValue:u.zip,note:"Zip code is required for accepting credit card payments from your client."}]),buildTwoColumnInputSection({labelText:"Distance:",inputID:"distance",inputType:"number",inputName:"distance",inputTitle:"Total Distance to Client",inputValue:u.distance}),buildTwoColumnInputSection({labelText:"Client Phone#:",inputID:"phone",inputType:"tel",inputName:"phone",inputTitle:"Client Phone: xxx-xxx-xxxx",inputValue:u.phone,required:"required"}),buildTwoColumnInputSection({labelText:"Client Email:",inputID:"email",inputType:"email",inputName:"email",inputTitle:"Client Email",inputValue:u.email}),buildTwoColumnSelectElementSection({labelText:"Trimming/Shoeing Cycle:",selectID:"trim-cycle",selectName:"trim_cycle",selectTitle:"Trimming/Shoeing Cycle",options:trimCycleConfigurations(u),required:"required"}),buildTwoColumnInputSection({labelText:"Trimming/Shoeing Date:",inputID:"trim-date",inputName:"trim_date",inputType:"date",inputTitle:"Trimming/Shoeing Date",inputValue:u.trim_date,required:"required"}),buildTwoColumnInputSection({labelText:"Appointment Time:",inputID:"app-time",inputName:"app_time",inputType:"time",inputTitle:"Appointment Time",inputValue:u.app_time,required:"required"}),buildTwoColumnRadioButtonSection({labelText:"Active Status:",buttons:[{type:"radio",name:"active",value:"yes",labelText:"Yes",checked:"yes"===u.active||""===u.active?"checked":void 0},{type:"radio",name:"active",value:"no",labelText:"No",checked:"no"===u.active?"checked":void 0}]})])).forEach((e=>c.appendChild(e))),c.appendChild(r),s.appendChild(c),d.appendChild(s),i.innerHTML="",i.appendChild(d);const{default:T}=await import("../../../../../features/client/ui/add-edit-client/addEditClientJS.js");return await T({cID:e,primaryKey:t,clientInfo:o,manageClient:n,manageUser:l,componentId:COMPONENT_ID}),()=>removeListeners(COMPONENT_ID)}catch(e){const{AppError:t}=await import("../../../../errors/models/AppError.js");t.process(e,{errorCode:t.Types.RENDER_ERROR,userMessage:t.BaseMessages.system.render},!0)}}