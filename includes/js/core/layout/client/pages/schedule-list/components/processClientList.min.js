// @ts-nocheck
import{sortByTrimDateAndAppTime}from"../../../../../utils/date/dateUtils.min.js";import{buildEle}from"../../../../../utils/dom/elements.min.js";import buildClientListRow from"./buildClientListRow.min.js";export default async function processClientList({clientList:e,active:t,primaryKey:s,fragment:i,uniqueClientIds:o,counter:r,colorOptions:n,dateTime:l}){try{e.sort(((e,t)=>sortByTrimDateAndAppTime(e,t,!0)));for(const[a,p]of e.entries()){if(!shouldProcessClient(p,t,s))continue;o.has(p.cID)||(o.add(p.cID),r++);const e=await buildClientListRow({client:p,index:a,colorOptions:n,dateTime:l});i.appendChild(e)}const a=buildEle({type:"div",myClass:["w3-small"],text:`Total Clients: ${r}`});i.appendChild(a)}catch(e){const{AppError:t}=await import("../../../../../errors/models/AppError.min.js");t.process(e,{errorCode:t.Types.PROCESSING_ERROR,userMessage:t.BaseMessages.system.processing},!0)}}function shouldProcessClient(e,t,s){return"string"==typeof t&&e.active.toLowerCase()===t.toLowerCase()||parseInt(e.primaryKey,10)===parseInt(s,10)}