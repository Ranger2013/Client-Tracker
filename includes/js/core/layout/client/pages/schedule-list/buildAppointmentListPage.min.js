// @ts-nocheck
import{clearMsg}from"../../../../utils/dom/messages.min.js";import{top}from"../../../../utils/window/scroll.min.js";import{removeListeners}from"../../../../utils/dom/listeners.min.js";import buildPageElements from"./components/buildPageElements.min.js";const COMPONENT_ID="schedule-list";export default async function buildAppointmentListPage({active:e,cID:r=null,primaryKey:i=null,mainContainer:s,manageClient:t,manageUser:n}){try{await initializePage(s);const a=await buildPageElements({active:e,cID:r,primaryKey:i,manageClient:t,manageUser:n});s.innerHTML="",s.appendChild(a);const{default:o}=await import("../../../../../features/client/ui/schedule-list/appointmentListJS.min.js");return await o({active:e,cID:r,primaryKey:i,manageClient:t,manageUser:n,mainContainer:s,componentId:COMPONENT_ID}),()=>removeListeners(COMPONENT_ID)}catch(e){const{AppError:r}=await import("../../../../errors/models/AppError.js");r.process(e,{errorCode:r.Types.RENDER_ERROR,userMessage:r.BaseMessages.system.render},!0)}}async function initializePage(e){try{if(clearMsg({container:"page-msg"}),top(),!e)throw new Error("mainContainer is required")}catch(e){const{AppError:r}=await import("../../../../errors/models/AppError.js");r.process(e,{errorCode:r.Types.RENDER_ERROR,userMessage:null},!0)}}