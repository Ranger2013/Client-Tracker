// @ts-nocheck
import{buildEle}from"../../../../../utils/dom/elements.min.js";import{buildPageContainer,buildTwoColumnSelectElementSection}from"../../../../../utils/dom/forms/buildUtils.min.js";import{removeListeners}from"../../../../../utils/dom/listeners.min.js";import{clearMsg}from"../../../../../utils/dom/messages.min.js";import{cleanUserOutput}from"../../../../../utils/string/stringUtils.min.js";const COMPONENT_ID="edit-horse";export default async function buildEditHorsePage({cID:e,primaryKey:t,mainContainer:r,manageClient:i,manageUser:s}){try{if(clearMsg({container:"page-msg"}),!e&&!t)throw new Error("Unable to build the edit horse page. Certain parameters are missing.");const n=await i.getClientInfo({primaryKey:t}),o=cleanUserOutput(n.client_name)||"No Name Found",a=(n?.horses||[]).map((e=>({value:e.hID,text:cleanUserOutput(e.horse_name),"data-service-type":e.service_type,"data-trim-cycle":e.trim_cycle,"data-horse-type":e.horse_type})));a.unshift({value:"null",text:"-- Select a horse --"});const[[l,m],c]=await Promise.all([buildPageContainer({pageTitle:"Edit Horse for ",clientName:o,cID:e,primaryKey:t}),buildTwoColumnSelectElementSection({labelText:"Select a Horse: ",selectID:"horse-list",selectName:"horse_list",selectTitle:"Horse's Name",options:a,required:!0})]),p=buildEle({type:"div",attributes:{id:"horse-container"}});r.innerHTML="",l.appendChild(m),m.append(c,p),r.appendChild(l);const{default:d}=await import("../../../../../../features/client/ui/edit-horse/editClientHorse.min.js");return d({cID:e,primaryKey:t,mainContainer:r,manageClient:i,manageUser:s,componentId:"edit-horse"}),()=>removeListeners("edit-horse")}catch(e){const{AppError:t}=await import("../../../../../errors/models/AppError.min.js");t.process(e,{errorCode:t.Types.RENDER_ERROR,userMessage:null},!0)}}