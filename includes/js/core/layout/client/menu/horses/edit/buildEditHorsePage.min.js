// @ts-nocheck
import{buildEle}from"../../../../../utils/dom/elements.js";import{removeListeners}from"../../../../../utils/dom/listeners.js";import{clearMsg}from"../../../../../utils/dom/messages.js";import{cleanUserOutput}from"../../../../../utils/string/stringUtils.js";import buildPageContainer from"../../../../components/buildPageContainer.js";import buildTwoColumnSelectElementSection from"../../../../components/buildTwoColumnSelectElementSection.js";const COMPONENT_ID="edit-horse";export default async function buildEditHorsePage({cID:e,primaryKey:t,mainContainer:r,manageClient:i,manageUser:o}){try{if(clearMsg({container:"page-msg"}),!e&&!t)throw new Error("Unable to build the edit horse page. Certain parameters are missing.");const s=await i.getClientInfo({primaryKey:t}),n=cleanUserOutput(s.client_name)||"No Name Found",a=(s?.horses||[]).map((e=>({value:e.hID,text:cleanUserOutput(e.horse_name)})));a.unshift({value:"null",text:"-- Select a horse --"});const[[l,m],p]=await Promise.all([buildPageContainer({pageTitle:"Edit Horse for ",clientName:n,cID:e,primaryKey:t}),buildTwoColumnSelectElementSection({labelText:"Select a Horse: ",selectID:"horse-list",selectName:"horse_list",selectTitle:"Horse's Name",options:a,required:!0})]),u=buildEle({type:"div",attributes:{id:"horse-container"}});r.innerHTML="",l.appendChild(m),m.append(p,u),r.appendChild(l);const{default:c}=await import("../../../../../../features/client/ui/edit-horse/editClientHorse.js");return c({cID:e,primaryKey:t,mainContainer:r,manageClient:i,manageUser:o,componentId:"edit-horse"}),()=>removeListeners("edit-horse")}catch(e){const{AppError:t}=await import("../../../../../errors/models/AppError.js");t.process(e,{errorCode:t.Types.RENDER_ERROR,userMessage:null},!0)}}