// @ts-nocheck
import{getLocalDateString,getReadableCurrentFutureDate}from"../../../../../utils/date/dateUtils.js";import{buildEle,buildElementsFromConfig,buildElementTree}from"../../../../../utils/dom/elements.js";import{buildPageContainer,buildSubmitButtonSection,buildTwoColumnInputSection,buildTwoColumnTextareaSection}from"../../../../../utils/dom/forms/buildUtils.js";import{removeListeners}from"../../../../../utils/dom/listeners.js";import{clearMsg}from"../../../../../utils/dom/messages.js";import{cleanUserOutput}from"../../../../../utils/string/stringUtils.js";const COMPONENT="Build Add Trimming Page",DEBUG=!1,debugLog=(...e)=>{false},COMPONENT_ID="add-trimming";export default async function buildAddTrimmingPage({cID:e,primaryKey:t,mainContainer:n,manageUser:i,manageClient:a}){try{if(clearMsg({container:"page-msg"}),!e||!t)throw new Error("Unable to build the add trimming page. Certain parameters are missing.");const o=await fetchRequiredData({cID:e,primaryKey:t,manageClient:a,manageUser:i});if(0===o.clientHorses.length)return await handleNoHorsesScenerio({cID:e,primaryKey:t,mainContainer:n,manageClient:a,manageUser:i});const[r,m,l]=await Promise.all([buildPageComponents({pageData:o,cID:e,primaryKey:t}),buildFormComponents({pageData:o,cID:e,primaryKey:t}),buildOptionalComponents({pageData:o,cID:e,primaryKey:t})]);return renderPage({mainContainer:n,pageComponents:r,formComponents:m,optionalComponents:l}),await initializeUIHandlers({cID:e,primaryKey:t,mainContainer:n,manageClient:a,manageUser:i}),()=>removeListeners(COMPONENT_ID)}catch(e){throw e}}async function fetchRequiredData({cID:e,primaryKey:t,manageClient:n,manageUser:i}){const[a,o]=await Promise.all([i.getMileageCharges(),n.getClientInfo({primaryKey:t})]);return{mileageCharges:a,clientInfo:o,clientName:cleanUserOutput(o.client_name)||"No Name Found",clientHorses:o?.horses||[],clientDistance:o?.distance||0,trimCycleWeeks:parseInt(o?.trim_cycle,10)/7}}async function handleNoHorsesScenerio({cID:e,primaryKey:t,mainContainer:n,manageClient:i,manageUser:a}){const[{default:o},{default:r}]=await Promise.all([import("./components/buildNoHorsePage.js"),import("../../../../../../features/client/ui/add-trimming/addTrimmingNoHorseJS.js")]);return o({cID:e,primaryKey:t,mainContainer:n}),await r({cID:e,primaryKey:t,manageClient:i,manageUser:a,mainContainer:n,componentId:COMPONENT_ID}),()=>removeListeners(COMPONENT_ID)}async function buildPageComponents({pageData:e,cID:t,primaryKey:n}){const[i,a]=await buildPageContainer({pageTitle:"Add Trimming for ",clientName:e.clientName,cID:t,primaryKey:n});return{container:i,card:a}}async function buildFormComponents({pageData:e,cID:t,primaryKey:n}){const{clientInfo:i,trimCycleWeeks:a}=e,{form:o,optionalContainer:r,numberHorseContainer:m}=buildElementsFromConfig({form:{type:"form",attributes:{id:"trimming-form"}},optionalContainer:{type:"div",attributes:{id:"optional-container"}},numberHorseContainer:{type:"div",myClass:["w3-padding-small"],attributes:{id:"number-horse-container"}}}),l=buildElementTree({type:"div",myClass:["w3-container","w3-margin-bottom","w3-margin-top","w3-center"],children:{label:{type:"label",attributes:{for:"paid"},myClass:["w3-bold"],text:"Invoice Paid: ",children:{checkbox:{type:"input",attributes:{id:"paid",type:"checkbox",name:"paid",value:"yes"}}}}}}),[s,p,u,c,d,g,C]=await Promise.all([buildTwoColumnInputSection({labelText:"Number of Horses:",inputID:"number-horses",inputType:"number",inputName:"number_horses",inputTitle:"Number of Horses",required:!0}),buildTwoColumnInputSection({labelText:"Date of Service:",inputID:"trim-date",inputType:"date",inputName:"trim_date",inputTitle:"Date of Trimming/Shoeing",required:!0,inputValue:getLocalDateString(),additionalElement:buildEle({type:"div",myClass:["w3-small","w3-text-red"],text:`Note: Client's appointment is set to ${a} weeks.`})}),buildTwoColumnInputSection({labelText:"Next Appointment:",inputID:"next-trim-date",inputType:"date",inputName:"next_trim_date",inputTitle:"Next Appointment Date",required:!0,inputValue:getReadableCurrentFutureDate(i?.trim_cycle)}),buildTwoColumnInputSection({labelText:"Appointment Time:",inputID:"app-time",inputType:"time",inputName:"app_time",inputTitle:"Appointment Time",required:!0,inputValue:i?.app_time||"09:00"}),buildTwoColumnTextareaSection({labelText:"Trimming/Shoeing Session Notes:",textareaID:"session-notes",textareaName:"session_notes",textareaTitle:"Session Notes",rows:5}),buildTwoColumnInputSection({labelText:"Amount Due:",inputID:"payment",inputType:"number",inputName:"payment",inputTitle:"Amount Due",required:!0}),buildSubmitButtonSection("Add Trimming/Shoeing")]);return{form:o,numberHorseSection:s,numberHorseContainer:m,appointmentDateSection:p,nextAppointmentSection:u,appointmentTimeSection:c,optionalContainer:r,sessionNotesSection:d,paymentSection:g,invoicePaidContainer:l,submitButtonSection:C}}async function buildOptionalComponents({pageData:e,cID:t,primaryKey:n}){const{clientDistance:i,mileageCharges:a,clientInfo:o}=e,r={},[{default:m},{default:l}]=await Promise.all([import("./components/getMileageCharges.js"),import("./components/buildFuelChargeCheckboxSection.js")]);if(o?.email){const{default:e}=await import("./components/buildReceiptSection.js");r.receiptSection=await e()}const{inRange:s,cost:p}=m({clientDistance:i,mileageCharges:a});return s&&(r.fuelChargeSection=await l(p)),r}function renderPage({mainContainer:e,pageComponents:t,formComponents:n,optionalComponents:i}){const{container:a,card:o}=t,{form:r,...m}=n,{receiptSection:l,fuelChargeSection:s}=i;r.append(...Object.values(m)),l instanceof HTMLElement&&m.optionalContainer.appendChild(l),s instanceof HTMLElement&&m.optionalContainer.appendChild(s),o.appendChild(r),a.appendChild(o),e.innerHTML="",e.appendChild(a)}async function initializeUIHandlers({cID:e,primaryKey:t,mainContainer:n,manageClient:i,manageUser:a}){const{default:o}=await import("../../../../../../features/client/ui/add-trimming/addTrimmingJS.js");o({cID:e,primaryKey:t,mainContainer:n,manageClient:i,manageUser:a,componentId:COMPONENT_ID})}