// @ts-nocheck
import{getReadableCurrentFutureDate}from"../../../../../utils/date/dateUtils.min.js";import{buildElementsFromConfig}from"../../../../../utils/dom/elements.min.js";import{buildPageContainer,buildSubmitButtonSection,buildTwoColumnInputSection}from"../../../../../utils/dom/forms/buildUtils.min.js";import{removeListeners}from"../../../../../utils/dom/listeners.min.js";import{clearMsg}from"../../../../../utils/dom/messages.min.js";import{cleanUserOutput}from"../../../../../utils/string/stringUtils.min.js";import{buildFuelChargeCheckboxSection,buildInvoicePaidCheckbox,buildSessionNotesSection}from"./components/buildUtils.min.js";import getMileageCharges from"./components/getMileageCharges.min.js";const COMPONENT_ID="add-trimming";export default async function buildAddTrimmingPage({cID:e,primaryKey:t,mainContainer:i,manageUser:n,manageClient:a}){try{if(clearMsg({container:"page-msg"}),!e||!t)throw new Error("Unable to build the add trimming page. Certain parameters are missing.");const r=await fetchRequiredData({cID:e,primaryKey:t,manageClient:a,manageUser:n});if(0===r.clientHorses.length)return await handleNoHorsesScenerio({cID:e,primaryKey:t,mainContainer:i,manageClient:a,manageUser:n});return renderPage(i,await buildPageComponents({cID:e,primaryKey:t,pageData:r})),await initializeUIHandlers({cID:e,primaryKey:t,mainContainer:i,manageClient:a,manageUser:n})}catch(e){throw e}}async function fetchRequiredData({cID:e,primaryKey:t,manageClient:i,manageUser:n}){const[a,r]=await Promise.all([n.getMileageCharges(),i.getClientInfo({primaryKey:t})]);return{mileageCharges:a,clientInfo:r,clientName:cleanUserOutput(r.client_name)||"No Name Found",clientHorses:r?.horses||[],clientDistance:r?.distance||0,trimCycleWeeks:parseInt(r?.trim_cycle,10)/7}}async function handleNoHorsesScenerio({cID:e,primaryKey:t,mainContainer:i,manageClient:n,manageUser:a}){buildNoHorsePage({cID:e,primaryKey:t,mainContainer:i});const{default:r}=await import("../../../../../../features/client/ui/add-trimming/addTrimmingJS.js");return r({cID:e,primaryKey:t,mainContainer:i,manageClient:n,manageUser:a,componentId:COMPONENT_ID}),()=>removeListeners(COMPONENT_ID)}function buildNoHorsePage({cID:e,primaryKey:t,mainContainer:i}){try{const n=buildElementsFromConfig({container:{type:"div",myClass:["w3-center"]},card:{type:"div",myClass:["w3-card"],attributes:{id:"card"}},notice:{type:"h4",myClass:["w3-text-red"],text:"This client does not have any horses Listed."},linkContainer:{type:"p",myClass:["w3-margin-top","w3-padding-small"],text:"Please "},link:{type:"a",attributes:{id:"add-horse-link",href:`/tracker/client-horses/add/?cID=${e}&primaryKey=${t}`,title:"Add a Horse","data-add-horse-navigation:":!0},myClass:["w3-text-blue"],text:"add a horse"}}),{container:a,card:r,notice:m,linkContainer:o,link:l}=n;o.appendChild(l),r.append(m,o),a.appendChild(r),i.innerHTML="",i.appendChild(n.container)}catch(e){throw e}}async function buildPageComponents({cID:e,primaryKey:t,pageData:i}){const{clientInfo:n,clientName:a,trimCycleWeeks:r}=i,m=createBaseStructure(r),o=await buildFormComponents({pageElements:m,clientInfo:n,clientName:a,cID:e,primaryKey:t}),[l,s,...u]=o,c=await getOptionalSections(i);return{...m,container:l,card:s,updatedFormElements:u,...c}}function createBaseStructure(e){return buildElementsFromConfig({trimmingForm:{type:"form",attributes:{id:"trimming-form"}},numberHorseContainer:{type:"div",attributes:{id:"number-horse-container"},myClass:["w3-padding-small"]},trimCycleNoteContainer:{type:"div",myClass:["w3-small","w3-text-red"],text:`Note: Client's appointment is set to ${e} weeks.`}})}async function buildFormComponents({pageElements:e,clientInfo:t,clientName:i,cID:n,primaryKey:a}){const[[r,m],o,l,s,u,c,d,p,g]=await Promise.all([buildPageContainer({pageTitle:"Add Trimming for ",clientName:i,cID:n,primaryKey:a}),buildTwoColumnInputSection({labelText:"Number of Horses:",inputType:"number",inputID:"number-horses",inputName:"number_horses",inputTitle:"Number of Horses",required:!0}),buildTwoColumnInputSection({labelText:"Trim Date:",inputType:"date",inputID:"trim-date",inputName:"trim_date",inputTitle:"Trim Date",required:!0,additionalElement:e.trimCycleNoteContainer}),buildTwoColumnInputSection({labelText:"Next Trimming/Shoeing Date:",inputType:"date",inputID:"next-trim-date",inputName:"next_trim_date",inputTitle:"Next Trim Date",required:!0,inputValue:getReadableCurrentFutureDate(t?.trim_cycle)}),buildTwoColumnInputSection({labelText:"Appointment Time:",inputType:"time",inputID:"app-time",inputName:"app_time",inputTitle:"Appointment Time",required:!0,inputValue:t?.app_time}),buildSessionNotesSection(),buildTwoColumnInputSection({labelText:"Amount Due:",inputType:"number",inputID:"payment",inputName:"payment",inputTitle:"Payment",required:!0}),buildInvoicePaidCheckbox(),buildSubmitButtonSection("Add Trimming/Shoeing")]);return[r,m,o,e.numberHorseContainer,l,s,u,c,d,p,g]}async function getOptionalSections({clientInfo:e,clientDistance:t,mileageCharges:i}){const n={};if(e?.email){const{default:e}=await import("./components/buildReceiptSection.js");n.receiptSection=await e()}const{inRange:a,cost:r}=getMileageCharges({clientDistance:t,mileageCharges:i});return a&&(n.fuelChargeSection=await buildFuelChargeCheckboxSection(r)),n}function renderPage(e,{container:t,card:i,trimmingForm:n,updatedFormElements:a,receiptSection:r,fuelChargeSection:m}){n.append(...a),r instanceof HTMLElement&&n.appendChild(r),m instanceof HTMLElement&&n.appendChild(m),i.appendChild(n),t.appendChild(i),e.innerHTML="",e.appendChild(t)}async function initializeUIHandlers({cID:e,primaryKey:t,mainContainer:i,manageClient:n,manageUser:a}){const{default:r}=await import("../../../../../../features/client/ui/add-trimming/addTrimmingJS.min.js");return r({cID:e,primaryKey:t,mainContainer:i,manageClient:n,manageUser:a,componentId:COMPONENT_ID}),()=>removeListeners(COMPONENT_ID)}