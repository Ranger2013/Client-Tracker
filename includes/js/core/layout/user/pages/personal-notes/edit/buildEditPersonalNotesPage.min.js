// @ts-nocheck
import{buildElementsFromConfig}from"../../../../../utils/dom/elements.js";import{buildPageContainer,buildSubmitDeleteButtonSection,buildTwoColumnTextareaSection}from"../../../../../utils/dom/forms/buildUtils.js";import{removeListeners}from"../../../../../utils/dom/listeners.js";import{clearMsg}from"../../../../../utils/dom/messages.js";import{cleanUserOutput}from"../../../../../utils/string/stringUtils.js";const COMPONENT="Build edit personal notes page",DEBUG=!1,debugLog=(...e)=>{false},COMPONENT_ID="edit-personal-notes-page";export default async function buildPersonalNotesPage({mainContainer:e,manageClient:t,manageUser:n}){try{clearMsg({container:"page-msg"});const o=await buildPageContainer({pageTitle:"Edit Personal Notes"}),a=await n.getUserPersonalNotes();if(debugLog(),!a?.length){debugLog();return renderPage({mainContainer:e,pageComponents:o,noNotes:buildNoNotes()}),debugLog(),await initializeUIPage({mainContainer:e,manageClient:t,manageUser:n,componentId:COMPONENT_ID}),garbageCollector()}return renderPage({mainContainer:e,pageComponents:o,notes:await buildNotesComponents(a)}),await initializeUIPage({mainContainer:e,manageClient:t,manageUser:n,componentId:COMPONENT_ID}),garbageCollector()}catch(e){throw e}}function buildNoNotes(){return buildElementsFromConfig({notesContainer:{type:"div",myClass:["w3-center","w3-text-red"],text:"No personal notes found"}}).notesContainer}async function buildNotesComponents(e){const t=document.createDocumentFragment();let n=1;for(const o of e){const e={notesBlock:{type:"div",attributes:{id:`notes-block-${n}`},myClass:["w3-padding","w3-border-bottom"]},notesTitle:{type:"div",attributes:{id:`notes-title-${n}`},myClass:["w3-padding-small","w3-pointer","w3-light-grey"]},notesBold:{type:"span",myClass:["w3-bold"],text:"Notes: "},partialNotes:{type:"span",myClass:["w3-small"],text:truncateText(o.notes)},notesForm:{type:"form",attributes:{id:`notes-form-${n}`},myClass:["w3-hide"]},notesMsg:{type:"div",attributes:{id:`notes-msg-${n}`},myClass:["w3-center"]},hiddenNotesID:{type:"input",attributes:{type:"hidden",name:"notesID",value:o.notesID}},hiddenNotesDate:{type:"input",attributes:{type:"hidden",name:"date",value:o.date}}},a=await buildTwoColumnTextareaSection({labelText:"Notes: ",textareaID:`notes-${n}`,textareaName:"notes",textareaTitle:"Personal Notes",required:!0,textareaValue:o.notes,rows:10}),i=await buildSubmitDeleteButtonSection({submitButtonText:"Edit Notes",submitButtonIterator:n,deleteButtonText:"Delete Notes",deleteButtonIterator:n}),s=buildElementsFromConfig(e);s.notesTitle.append(s.notesBold,s.partialNotes),s.notesForm.append(s.notesMsg,s.hiddenNotesID,s.hiddenNotesDate,a,i),s.notesBlock.append(s.notesTitle,s.notesForm),t.appendChild(s.notesBlock),n++}return t}function renderPage({mainContainer:e,pageComponents:t,notes:n,noNotes:o}){const[a,i]=t;if(e.innerHTML="",o&&o instanceof HTMLElement)return i.appendChild(o),a.appendChild(i),void e.appendChild(a);i.appendChild(n),a.appendChild(i),e.appendChild(a)}async function initializeUIPage({mainContainer:e,manageClient:t,manageUser:n,componentId:o}){try{debugLog();const{default:a}=await import("../../../../../../features/user/ui/personal-notes/edit/editPersonalNotesJS.js");a({mainContainer:e,manageClient:t,manageUser:n,componentId:o})}catch(e){const{AppError:t}=await import("../../../../../errors/models/AppError.js");t.handleError(e,{errorCode:t.Types.INITIALIZATION_ERROR,userMessage:"Error initializing functionality for personal notes"})}}function garbageCollector(){return()=>removeListeners(COMPONENT_ID)}function truncateText(e,t=30){const n=e.replace(/[\r\n]+/g," "),o=cleanUserOutput(n);return o.length>t?`${o.substring(0,t)}...`:o}