// @ts-nocheck
import{sortByTrimDateAndAppTime}from"../../../../../utils/date/dateUtils.min.js";import{buildEle,buildElementTree}from"../../../../../utils/dom/elements.min.js";import{buildPageContainer,buildSubmitButtonSection,buildTwoColumnInputSection}from"../../../../../utils/dom/forms/buildUtils.min.js";import createSelectElement from"../../../../../utils/dom/forms/createSelectElement.min.js";import{removeListeners}from"../../../../../utils/dom/listeners.min.js";import{cleanUserOutput}from"../../../../../utils/string/stringUtils.min.js";const COMPONENT="Build Add Mileage Page",DEBUG=!1,debugLog=(...e)=>{false},COMPONENT_ID="add-mileage-page";export default async function buildAddMileagePage({mainContainer:e,manageClient:t,manageUser:n}){try{const i=await getPageData({manageClient:t,manageUser:n});debugLog();renderPage({pageComponents:await buildPageComponents({clientList:i}),mainContainer:e}),await initializeHandlers({manageClient:t,manageUser:n,componentId:COMPONENT_ID})}catch(e){throw e}}async function getPageData({manageClient:e,manageUser:t}){return(await e.getClientScheduleList()).sort(((e,t)=>sortByTrimDateAndAppTime(e,t)))}async function buildPageComponents({clientList:e}){const t=clientListToOptions(e);debugLog();const[[n,i],a,l,o]=await Promise.all([buildPageContainer({pageTitle:"Add Mileage"}),buildTwoColumnInputSection({labelText:"Starting Mileage: ",inputID:"starting-mileage",inputType:"number",inputName:"starting_mileage",inputTitle:"Enter the starting mileage"}),buildTwoColumnInputSection({labelText:"Ending Mileage: ",inputID:"ending-mileage",inputType:"number",inputName:"ending_mileage",inputTitle:"Enter the ending mileage"}),buildSubmitButtonSection("Add Mileage")]),s=buildPageStructure();return{container:n,card:i,startMileageSection:a,endMileageSection:l,submitButton:o,clientListSelect:createSelectElement({id:"select-destination",name:"destination",title:"Select the destination client",options:t,nullOptionText:"-- Select a client --",required:!0,disabled:!0}),destinationInput:buildEle({type:"input",attributes:{id:"input-destination",name:"destination",title:"Enter your destination name",required:!0,disabled:!0,placeholder:"Destination"},myClass:["w3-input","w3-border"]}),form:buildEle({type:"form",attributes:{id:"mileage-form"}}),pageStructure:s}}function buildPageStructure(){const e=buildElementTree({type:"div",myClass:["w3-row"],children:{destinationLabel:{type:"div",myClass:["w3-col","m6","w3-padding-small"],text:"Destination:"},destinationButtonsContainer:{type:"div",myClass:["w3-col","m6","w3-padding-small"],children:{buttonsContainer:{type:"div",myClass:["w3-row","w3-padding-small"],children:{clientListSelectButtonContainer:{type:"div",myClass:["w3-col","s6","w3-center"],children:{clientListButton:{type:"button",attributes:{id:"client-list-button"},myClass:["w3-button","w3-black","w3-round-large","w3-hover-light-grey","w3-padding-small"],text:"Select Client"}}},destinationInputButtonContainer:{type:"div",myClass:["w3-col","s6","w3-center"],children:{destinationButton:{type:"button",attributes:{id:"destination-button"},myClass:["w3-button","w3-black","w3-round-large","w3-hover-light-grey","w3-padding-small"],text:"Enter Destination"}}}}},displayContainer:{type:"div",myClass:["w3-padding-small"],children:{clientListDisplayContainer:{type:"div",myClass:["w3-hide"],attributes:{id:"client-list-display-container"}},destinationDisplayContainer:{type:"div",myClass:["w3-hide"],attributes:{id:"destination-display-container"}}}}}}}});return debugLog(),e}function clientListToOptions(e){debugLog();return e.sort(((e,t)=>sortByTrimDateAndAppTime(e,t))).map((e=>new Option(cleanUserOutput(e.client_name),cleanUserOutput(e.client_name))))}function renderPage({pageComponents:e,mainContainer:t}){const{container:n,card:i,startMileageSection:a,endMileageSection:l,submitButton:o,clientListSelect:s,destinationInput:r,form:d,pageStructure:u}=e,m=u.querySelector("#client-list-display-container"),c=u.querySelector("#destination-display-container");m.appendChild(s),c.appendChild(r),d.append(u,a,l,o),i.append(d),n.append(i),t.innerHTML="",t.append(n)}async function initializeHandlers({manageClient:e,manageUser:t,componentId:n}){const{default:i}=await import("../../../../../../features/user/ui/mileage/add/addMileageJS.js");return i({manageClient:e,manageUser:t,componentId:n}),()=>removeListeners(COMPONENT_ID)}