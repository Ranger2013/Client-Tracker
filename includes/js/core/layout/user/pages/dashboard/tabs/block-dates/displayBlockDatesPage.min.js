// @ts-nocheck
// @ts-nocheck
import{addListener}from"../../../../../core/utils/dom/listeners.js";import ManageUser from"../../../models/ManageUser.js";import{setActiveTab}from"../components/tabs/tabManager.js";const COMPONENT="Dashboard",DEBUG=!1,debugLog=(...a)=>{false},COMPONENT_ID="dashboard",manageUser=new ManageUser({debug:!1});let cleanup=null;const FORM_MSG="form-msg",TAB_CONTENT_CONTAINER="tab-content-container";!async function(){try{const a={"click:manage-reminders-tab":async a=>{const{default:e}=await import("./pages/displayRemindersPage.js");await e({evt:a,tabContainer:TAB_CONTENT_CONTAINER,manageUser:manageUser,componentId:"dashboard"})},"click:manage-notifications-tab":async a=>{const{default:e}=await import("./pages/displayNotificationsPage.js");await e({evt:a,tabContainer:TAB_CONTENT_CONTAINER,manageUser:manageUser,componentId:"dashboard"})},"click:backup-data-tab":async a=>{const{default:e}=await import("../../../../../core/layout/user/pages/dashboard/tabs/backup-data/displayBackupDataPage.js");await e({evt:a,tabContainer:TAB_CONTENT_CONTAINER,manageUser:manageUser,componentId:"dashboard"})},"click:transfer-data-tab":async a=>{const{default:e}=await import("./pages/displayTransferDataPage.js");await e({evt:a,tabContainer:TAB_CONTENT_CONTAINER,manageUser:manageUser,componentId:"dashboard"})},"click:block-dates-tab":async a=>{const{default:e}=await import("../../../../../core/layout/user/pages/dashboard/tabs/block-dates/displayBlockDatesPage.js");await e({evt:a,tabContainer:TAB_CONTENT_CONTAINER,manageUser:manageUser,componentId:"dashboard"})}},e={"click:backup-data-submit-button":async a=>{const{default:e}=await import("./components/backup-data/backupDataToServer.js");debugLog(),await e({tabContainer:TAB_CONTENT_CONTAINER,manageUser:manageUser,componentId:"dashboard"})},"click:reminder-slider":async a=>{const e=a.target.previousElementSibling;a.preventDefault(),e.checked=!e.checked;const{default:t}=await import("./components/reminders/handleReminderSlider.js");await t({evt:{target:e},manageUser:manageUser,componentId:"dashboard"})},"click:notification-slider":async a=>{a.preventDefault();const e=a.target.previousElementSibling;e.checked=!e.checked;const{default:t}=await import("./components/notifications/handleNotificationSlider.js");await t({evt:{target:e},manageUser:manageUser,componentId:"dashboard"})},"click:transfer-data-button":async a=>{a.preventDefault();const{default:e}=await import("./components/transfer-data/transferData.js");await e({manageUser:manageUser})}};addListener({elementOrId:"tab-container",eventType:"click",handler:async e=>{cleanup&&(await cleanup(),cleanup=null);const t=`${e.type}:${e.target.id}`;debugLog(),a[t]&&(setActiveTab({evt:e,msgElement:FORM_MSG}),await a[t](e))},componentId:"dashboard"}),addListener({elementOrId:TAB_CONTENT_CONTAINER,eventType:["click","change"],handler:async a=>{a.preventDefault(),debugLog(a.target),debugLog(a.target.id);const t=`${a.type}:${a.target.id}`;e[t]&&await e[t](a)},componentId:"dashboard"})}catch(a){const{AppError:e}=await import("../../../../../core/errors/models/AppError.js");e.handleError(a,{errorCode:e.Types.INITIALIZATION_ERROR,userMessage:e.BaseMessages.system.initialization})}}();