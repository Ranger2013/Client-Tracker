// @ts-nocheck
import{getValidationToken}from"../../../../../../tracker.js";import{accountAPI,authAPI}from"../../../../../network/api/apiEndpoints.js";import{fetchData}from"../../../../../network/services/network.js";import{getValidElement}from"../../../../../utils/dom/elements";import{removeListeners}from"../../../../../utils/dom/listeners";const COMPONENT="Invoices Page",DEBUG=!1,debugLog=(...e)=>{false},COMPONENT_ID="build-invoices-page";export default async function buildInvoicesPage({tabContentContainer:e,manageUser:t}){try{debugLog();const n=await fetchData({api:accountAPI.unpaidInvoices,token:getValidationToken()});return debugLog(),handleServerResponse({tabContentContainer:e,response:n}),await initalizeUIPage({tabContentContainer:e,manageUser:t,componentId:COMPONENT_ID}),()=>removeListeners(COMPONENT_ID)}catch(e){const{AppError:t}=await import("../../../../../../core/errors/models/AppError.js");t.handleError(e,{errorCode:t.Types.RENDER_ERROR,userMessage:t.BaseMessages.system.render,displayTarget:"form-msg"})}}function handleServerResponse({tabContentContainer:e,response:t}){if("success"===t.status){const n=getValidElement(e);n.innerHTML="",n.innerHTML=t.msg}else if("error"===t.status||"server-error"===t.status)throw new Error(t.msg)}async function initalizeUIPage({tabContentContainer:e,manageUser:t,componentId:n}){const{default:o}=await import("../../../../../../features/user/ui/my-account/user-account/tabs/invoices/unpaidInvoicesJS.js");await o({tabContentContainer:e,manageUser:t,componentId:n})}