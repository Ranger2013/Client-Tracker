// @ts-nocheck
import{getCurrentTime,getReadableCurrentFutureDate}from"../../utils/date/dateUtils.js";import{buildEle}from"../../utils/dom/elements.js";import{cleanUserOutput}from"../../utils/string/stringUtils.js";import buildErrorDiv from"./buildErrorDiv.js";const INPUT_TYPES={date:{getDefaultValue:()=>getReadableCurrentFutureDate()},time:{getDefaultValue:()=>getCurrentTime()},number:{attributes:{step:".01"}}};export default async function buildTwoColumnInputSection({labelText:e,inputID:t,inputType:r,inputName:i,inputTitle:l,required:a,inputValue:s,additionalElement:u=null}){try{const p={id:t,type:r,name:i,placeholder:l,title:l,required:a,value:cleanUserOutput(s)||INPUT_TYPES[r]?.getDefaultValue?.()||void 0,...INPUT_TYPES[r]?.attributes};Object.keys(p).forEach((e=>void 0===p[e]&&delete p[e]));const[n,o,d,m]=[{type:"div",myClass:["w3-row","w3-padding"]},{type:"div",myClass:["w3-col","m6"]},{type:"div",myClass:["w3-col","m6"]},{type:"input",attributes:p,myClass:["w3-input","w3-border","input"]}].map((e=>buildEle(e))),b=buildErrorDiv(t),c=buildEle({type:"label",attributes:{for:t},text:e});if("app-time"===t){const[e,t]=["appointment-block","projected-appointment-block"].map((e=>buildEle({type:"div",attributes:{id:e},myClass:["w3-margin-small"]})));d.append(m,b,e,t)}else d.append(m,b);return u&&d.appendChild(u),o.appendChild(c),n.append(o,d),n}catch(e){const{AppError:t}=await import("../../errors/models/AppError.js");t.process(e,{errorCode:t.Types.RENDER_ERROR,userMessage:t.BaseMessages.system.render},!0)}}