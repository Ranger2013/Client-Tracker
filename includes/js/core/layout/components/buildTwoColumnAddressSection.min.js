// @ts-nocheck
import{buildEle}from"../../utils/dom/elements.js";import{cleanUserOutput}from"../../utils/string/stringUtils.js";import buildErrorDiv from"./buildErrorDiv.js";export default async function buildTwoColumnAddressSection(e,t,i){try{const[l,r,p]=[{type:"div",myClass:["w3-row","w3-padding"]},{type:"div",myClass:["w3-col","m6"]},{type:"div",myClass:["w3-col","m6"]}].map((e=>buildEle(e)));return r.appendChild(buildEle({type:"label",attributes:{for:t},text:e})),i.forEach((e=>{const t=buildEle({type:"div",myClass:["w3-padding-top"]}),i=buildEle({type:e.typeEle,attributes:{id:e.inputId,type:e.inputType,name:e.inputName,title:e.inputTitle,placeholder:e.inputTitle,value:cleanUserOutput(e.inputValue),...e.inputRequired&&{required:!0},...e.inputPattern&&{pattern:e.inputPattern}},myClass:e.inputClass.split(" ")});e.note&&t.appendChild(buildEle({type:"div",myClass:["w3-text-blue","w3-padding-small","w3-small"],text:e.note}));const l=buildErrorDiv(e.inputId);t.append(i,l),p.appendChild(t)})),l.append(r,p),l}catch(e){const{AppError:t}=await import("../../errors/models/AppError.js");t.process(e,{errorCode:t.Types.RENDER_ERROR,userMessage:t.BaseMessages.system.render},!0)}}