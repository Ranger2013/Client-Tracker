// @ts-nocheck
import ManageUser from"../../../features/user/models/ManageUser.js";const SECURITY_MESSAGES={systemError:"System error validating credentials. Please contact support.",tokenMissing:"Unable to verify your credentials. Please try logging in again.",accountExpired:"Your account is expired. If this is in error, please contact support."};export async function userAuthorization(r){try{const r=new ManageUser,e=await r.getSettings("user_status"),{userToken:t,status:o,expiry:n}=e.user_status??{};if(!t)return redirectToLogin(SECURITY_MESSAGES.tokenMissing),null;if("admin"===o)return t;return checkAccountExpiry({accountStatus:o,expiry:n})?(redirectToLogin(SECURITY_MESSAGES.accountExpired),null):t}catch(r){const{AppError:e}=await import("../../errors/models/AppError.js");return new e("Authorization failed",{originalError:r,errorCode:e.Types.AUTHORIZATION_ERROR,userMessage:null,shouldLog:!0}).logError(),redirectToLogin(SECURITY_MESSAGES.systemError),null}}function checkAccountExpiry({accountStatus:r,expiry:e}){if(!e)throw new Error("Expiry date is required");const t=new Date,o=new Date(e);if(isNaN(o.getTime()))throw new Error("Invalid expiry date format");return"member"===r&&o.setDate(o.getDate()+3),t>o}function redirectToLogin(r){window.location.href=`/login/?msg=${encodeURIComponent(r)}`}