// @ts-nocheck
import ManageUser from"../../../features/user/models/ManageUser.min.js";import{fetchData}from"../../network/services/network.min.js";const SECURITY_MESSAGES={systemError:"System error validating credentials. Please contact support.",tokenMissing:"Unable to verify your credentials. Please try logging in again.",accountExpired:"Your account is expired. If this is in error, please contact support."};export async function userAuthorization(){try{const e=new ManageUser,r=await e.getSettings("user_status"),{userToken:t,status:n,expiry:o}=r.user_status??{};if(!t)return redirectToLogin(SECURITY_MESSAGES.tokenMissing),null;if("admin"===n)return t;return checkAccountExpiry({accountStatus:n,expiry:o})?(redirectToLogin(SECURITY_MESSAGES.accountExpired),null):t}catch(e){const{AppError:r}=await import("../../errors/models/AppError.js");return r.handleError(e,{errorCode:r.Types.AUTHORIZATION_ERROR,userMessage:null}),redirectToLogin(SECURITY_MESSAGES.systemError),null}}function checkAccountExpiry({accountStatus:e,expiry:r}){if(!r)throw new Error("Expiry date is required");const t=new Date,n=new Date(r);if(isNaN(n.getTime()))throw new Error("Invalid expiry date format");return"member"===e&&n.setDate(n.getDate()+3),t>n}async function verifyTokenWithServer(e){}function redirectToLogin(e){window.location.href=`/login/?msg=${encodeURIComponent(e)}`}