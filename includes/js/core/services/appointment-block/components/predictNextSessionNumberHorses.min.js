// @ts-nocheck
const COMPONENT="Predict Next Session Number Horses",DEBUG=!1,debugLog=(...e)=>{false};export default async function predictNextSessionNumberHorses({clientData:e,manageClient:t}){try{debugLog();const{cID:r,horses:s,trim_date:n}=e,o=await t.getClientTrimmingInfo(r);if(debugLog(),!o||!Array.isArray(o)||0===o.length)return debugLog(),calculateTimeFromHorses(s,e.scheduleOptions);debugLog();const i=await predictHorsesAndServices(o,s,n);debugLog();const a=calculateTimeFromPrediction(i,e.scheduleOptions);return debugLog(),a}catch(e){throw debugLog(),e}}function calculateTimeFromHorses(e,t){const{avg_trim:r,half_set:s,full_set:n,avg_drive_time:o}=t,i={horses:e,totalTime:parseInt(o),serviceBreakdown:{trims:0,halfSets:0,fullSets:0}};return e.forEach((e=>{switch(e.service_type){case"trim":i.totalTime+=parseInt(r),i.serviceBreakdown.trims++;break;case"half_set":i.totalTime+=parseInt(s),i.serviceBreakdown.halfSets++;break;case"full_set":i.totalTime+=parseInt(n),i.serviceBreakdown.fullSets++}})),i}async function predictHorsesAndServices(e,t,r){debugLog();const s=e.sort(((e,t)=>new Date(e.date_trimmed)-new Date(t.date_trimmed))),n=identifyServiceGroups(s);debugLog();const o=findNextDueGroup(n,t,r,s);if(debugLog(),!o&&t.length<=4)return checkIndividualHorses(s,t,r);if(!o&&t.length>4){const e=findMostFrequentGroupSize(s);return predictLargeHerdGroup(s,t,r,e)}return o.horses.map((e=>({...t.find((t=>t.hID===e)),predictedService:determineNextService(e,s)})))}function findMostFrequentGroupSize(e){const t=e.map((e=>e.horses.length)).reduce(((e,t)=>(e[t]=(e[t]||0)+1,e)),{});return parseInt(Object.entries(t).sort(((e,t)=>t[1]-e[1]))[0][0])}function predictLargeHerdGroup(e,t,r,s){const n=new Date(r);return t.map((t=>{const r=[...e].reverse().find((e=>e.horses.some((e=>e.hID===t.hID))));return{horse:t,daysSinceService:r?(n-new Date(r.date_trimmed))/864e5:Number.MAX_VALUE}})).sort(((e,t)=>t.daysSinceService-e.daysSinceService)).slice(0,s).map((({horse:e})=>({...e,predictedService:e.service_type||"trim"})))}function identifyServiceGroups(e){debugLog();const t=new Map;e.forEach(((e,r)=>{debugLog();const s=e.horses.map((e=>e.hID)).sort().join(",");t.has(s)||t.set(s,{horses:e.horses.map((e=>e.hID)),dates:[],interval:0}),t.get(s).dates.push(new Date(e.date_trimmed))}));const r=Array.from(t.entries()).map((([e,t])=>{debugLog();const r=t.dates.sort(((e,t)=>e-t)),s=[];for(let e=1;e<r.length;e++){const t=(r[e]-r[e-1])/864e5;s.push(t)}const n={horses:t.horses,lastDate:r[r.length-1],interval:s.length>0?Math.round(s.reduce(((e,t)=>e+t))/s.length):42,frequency:r.length};return debugLog(),n}));return debugLog(),r}function findNextDueGroup(e,t,r,s){if(debugLog(),!e.length)return null;const n=new Date(r),o=e.map((r=>{if(!r.horses.every((e=>t.some((t=>t.hID===e)))))return{score:-1,group:r};const o=r.horses.map((e=>{const t=[...s].reverse().find((t=>t.horses.some((t=>t.hID===e))));return t?new Date(t.date_trimmed):null})).filter((e=>null!==e)),i=new Date(Math.max(...o)),a=(n-i)/864e5,c=r.horses.map((e=>t.find((t=>t.hID===e))?.trim_cycle||42)).reduce(((e,t)=>e+t),0),u=Math.round(c/r.horses.length),d=a/u,l=4===r.horses.length?3:r.horses.length/t.length,h=r.frequency/Math.max(...e.map((e=>e.frequency)))*2,g=r.frequency>=2?2:0,m=2*d+3*l+2*h+1.5*g;return debugLog(),{score:m,group:r}})).filter((e=>e.score>0)).sort(((e,t)=>t.score-e.score))[0];return debugLog(),o?o.group:null}function determineNextService(e,t){const r=t.filter((t=>t.horses.some((t=>t.hID===e)))).map((t=>getServiceType(t.horses.find((t=>t.hID===e)).type_trim)));return r.length>0?r[r.length-1]:"trim"}function calculateTimeFromPrediction(e,t){const{avg_trim:r,half_set:s,full_set:n,avg_drive_time:o}=t,i={horses:e,totalTime:parseInt(o),serviceBreakdown:{trims:0,halfSets:0,fullSets:0}};return e.forEach((e=>{switch(e.predictedService||e.service_type){case"trim":i.totalTime+=parseInt(r),i.serviceBreakdown.trims++;break;case"half_set":i.totalTime+=parseInt(s),i.serviceBreakdown.halfSets++;break;case"full_set":i.totalTime+=parseInt(n),i.serviceBreakdown.fullSets++}})),i}function getServiceType(e){return e.includes("front_")?"half_set":e.includes("full_")?"full_set":"trim"}