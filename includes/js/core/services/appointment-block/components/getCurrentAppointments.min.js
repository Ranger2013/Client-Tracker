// @ts-nocheck
import{sortByTrimDateAndAppTime}from"../../../utils/date/dateUtils.min.js";import appointmentBlockData from"./appointmentBlockData.min.js";import predictNextSessionNumberHorses from"./predictNextSessionNumberHorses.min.js";const COMPONENT="getCurrentAppointments",DEBUG=!1,debugLog=(...e)=>{false};export default async function getCurrentAppointments({appointmentDate:e,scheduleOptions:t,dateTimeFormats:o,manageClient:i=null}){try{if(!t||!o)throw new Error("No Schedule Options or Date/Time Options to create booked appointments. Please update your settings.");const{avg_drive_time:n,avg_trim:a,full_set:r,half_set:s}=t,{date_format:m,time_format:p}=o;let c=[];const l=await i.getClientScheduleByTrimDate(e);if(0===l.length)return null;l.sort(((e,t)=>sortByTrimDateAndAppTime(e,t,!0)));let d=new Set;for(let e of l){const{cID:o,primaryKey:n,active:a,client_name:r,city:s,horses:l,app_time:u}=e;if("no"===a)continue;if(d.has(o))continue;d.add(o);l.length>0&&l.length;debugLog();const g=await predictNextSessionNumberHorses({clientData:{...e,scheduleOptions:t},manageClient:i});debugLog();const f={cID:o,primary_key:n,client_name:r,city:s,num_horses:g.horses.length,predicted_time:g.totalTime,service_breakdown:g.serviceBreakdown,app_time:u,time_format:p,date_format:m};debugLog(),c.push(await appointmentBlockData(f))}return debugLog(),c}catch(e){throw e}}