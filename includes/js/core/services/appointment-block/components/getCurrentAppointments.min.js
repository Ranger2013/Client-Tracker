// @ts-nocheck
import{sortByTrimDateAndAppTime}from"../../../utils/date/dateUtils.js";import appointmentBlockData from"./appointmentBlockData.js";import predictNextSessionNumberHorses from"./predictNextSessionNumberHorses.js";export default async function getCurrentAppointments({appointmentDate:t,scheduleOptions:e,dateTimeFormats:o,manageClient:n=null}){console.log("In getCurrentAppointments:");try{if(!e||!o)throw new Error("No Schedule Options or Date/Time Options to create booked appointments. Please update your settings.");const{avg_horses:r,avg_drive_time:i}=e,{date_format:s,time_format:a}=o;let m=[];const p=await n.getClientScheduleByTrimDate(t);if(0===p.length)return null;p.sort(((t,e)=>sortByTrimDateAndAppTime(t,e,!0)));let c=new Set;for(let t of p){const{cID:e,primaryKey:o,active:r,client_name:i,city:s,horses:a,avg_horses:p,avg_drive_time:l,app_time:u,time_format:d,date_format:g}=t;if("no"===r)continue;if(c.has(e))continue;c.add(e);const f=a.length>0?a.length:1;console.log("In getCurrentAppointments: before predictNextSessionOfHorses: ",e,f);const _=await predictNextSessionNumberHorses({clientId:e,manageClient:n,totalHorses:f});console.log("In getCurrentAppointments: after nextSessionOfHorses: ",_);const h={cID:e,primary_key:o,client_name:i,city:s,num_horses:_,avg_horses:p,avg_drive_time:l,app_time:u,time_format:d,date_format:g};m.push(await appointmentBlockData(h))}return console.log("In getCurrentAppointments: pushing appList:"),m}catch(t){throw t}}