// @ts-nocheck
import{formatTime}from"../../../utils/date/dateUtils.js";import{cleanUserOutput}from"../../../utils/string/stringUtils.js";export default async function appointmentBlockData(e){try{const{cID:t,client_name:r,num_horses:s,predicted_time:a,time_format:i,app_time:n,primary_key:o,city:m,service_breakdown:c}=e,l=calculateEndTime(n,a),p=12===parseInt(i)?formatTime(n,12):formatTime(n,24),u=12===parseInt(i)?formatTime(l,12):formatTime(l,24),d=buildServiceMessage(c);return{cID:t,primaryKey:o,client_name:cleanUserOutput(r),num_horses:s,city:cleanUserOutput(m),start:p,end:u,service_breakdown:c,prediction_message:`Predicted services: <span class="w3-small">${d}</span>`}}catch(e){const{AppError:t}=await import("../../../errors/models/AppError.js");t.process(e,{errorCode:t.Types.PROCESSING_ERROR,userMessage:"Unable to process the appointment data."},!0)}}function calculateEndTime(e,t){const[r,s]=e.split(":").map(Number),a=60*r+s+t,i=Math.floor(a/60)%24,n=a%60;return`${String(i).padStart(2,"0")}:${String(n).padStart(2,"0")}`}function buildServiceMessage(e){const t=[];return e.trims>0&&t.push(`${e.trims} trim${e.trims>1?"s":""}`),e.halfSets>0&&t.push(`${e.halfSets} half set${e.halfSets>1?"s":""}`),e.fullSets>0&&t.push(`${e.fullSets} full set${e.fullSets>1?"s":""}`),t.join(", ")||"No services predicted"}