// @ts-nocheck
import{formatTime}from"../../../utils/date/dateUtils.js";import{cleanUserOutput}from"../../../utils/string/stringUtils.js";const COMPONENT="Appointment Block Data",DEBUG=!1,debugLog=(...e)=>{false};export default async function appointmentBlockData(e){try{const{cID:t,client_name:s,num_horses:r,predicted_time:o,time_format:a,app_time:i,primary_key:n,city:c,service_breakdown:u}=e;debugLog(),debugLog(),debugLog(),debugLog();const m=calculateEndTime(i,o);debugLog();const g=12===parseInt(a)?formatTime(i,12):formatTime(i,24);debugLog();const l=12===parseInt(a)?formatTime(m,12):formatTime(m,24);debugLog();const p=buildServiceMessage(u);return{cID:t,primaryKey:n,client_name:cleanUserOutput(s),num_horses:r,city:cleanUserOutput(c),start:g,end:l,service_breakdown:u,prediction_message:`Predicted services: <span class="w3-small">${p}</span>`}}catch(e){const{AppError:t}=await import("../../../errors/models/AppError.js");t.process(e,{errorCode:t.Types.PROCESSING_ERROR,userMessage:"Unable to process the appointment data."},!0)}}function calculateEndTime(e,t){debugLog(),debugLog();const[s,r]=e.split(":").map(Number);debugLog(),debugLog();const o=60*s+r+t;debugLog();const a=Math.floor(o/60)%24;debugLog();const i=o%60;return debugLog(),`${String(a).padStart(2,"0")}:${String(i).padStart(2,"0")}`}function buildServiceMessage(e){const t=[];return e.trims>0&&t.push(`${e.trims} trim${e.trims>1?"s":""}`),e.halfSets>0&&t.push(`${e.halfSets} half set${e.halfSets>1?"s":""}`),e.fullSets>0&&t.push(`${e.fullSets} full set${e.fullSets>1?"s":""}`),t.join(", ")||"No services predicted"}