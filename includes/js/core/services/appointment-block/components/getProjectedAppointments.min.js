// @ts-nocheck
import getBlockOfTime from"./getBlockOfTime.js";export default async function getProjectedAppointments({appointmentDate:e,trimCycle:t,clientInfo:n,scheduleOptions:o,manageClient:s}){console.log("In getProjectedAppointments:");try{let i=n?.cID||null;const l=n?.trim_cycle||("null"!==t.options[t.selectedIndex].value?t.options[t.selectedIndex].value:null);if(console.log("In getProjectedAppointments: before trimCycleValue: ",l),!l)return null;console.log("In getProjectedAppointments: after trimCycleValue: ",l);const[c,r,m]=e.value.split("-"),g=new Date(c,r-1,m);g.setHours(0,0,0,0);const a=[7,14,21,28,35,42,49,56,63,70],p=[];for(const e of a){const t=new Date(g);t.setDate(g.getDate()-e);const n=t.toISOString().slice(0,10);console.log("In getProjectedAppointments.js: before trimDates: ",n);const l=await s.getClientScheduleByTrimDate(n);if(console.log("In getProjectedAppointments.js: after trimDates: ",l),console.log("In getProjectedAppointments.js, trimDates: ",l),l&&l.length>0)for(const t of l){if(t.cID===i||"no"===t.active||t.trim_cycle!==e.toString())continue;const n=await s.getClientTrimmingInfo(t.cID);let l=t.horses?.length||1,c="";n?.trimmings?.length>0?l=n.trimmings[n.trimmings.length-1].horses.length:t.horses&&0!==t.horses.length||(c="New Client.");const r={client_name:t.client_name,city:t.city,num_horses:l,new_client:c,time_block:await getBlockOfTime({avgHorses:o.avg_horses,numberHorses:l,avgDriveTime:o.avg_drive_time})};p.push(r)}}return p.length>0?p:null}catch(e){throw e}}