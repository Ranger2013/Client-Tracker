// @ts-nocheck
import DateHelper from"../../../utils/date/DateHelper.js";import{trimCycleRange}from"../../../utils/dom/forms/trimCycleConfigurations.js";import predictNextSessionNumberHorses from"./predictNextSessionNumberHorses.js";const COMPONENT="Get Projected Appointments",DEBUG=!1,debugLog=(...e)=>{false};export default async function getProjectedAppointments({appointmentDate:e,trimCycle:t,clientInfo:n,scheduleOptions:o,manageClient:i}){try{let r=n?.cID||null;if(!(n?.trim_cycle||("null"!==t.options[t.selectedIndex].value?t.options[t.selectedIndex].value:null)))return null;const s=new DateHelper(e.value),l=(new DateHelper).today(),c=[],a=new Set;for(const e of trimCycleRange){const t=s.addDays(-e);if(t.isBefore(l))return c.length>0?c:null;const n=t.toYYYYMMDD(),u=await i.getClientScheduleByTrimDate(n);if(u?.length>0)for(const t of u)if(t.cID!==r&&!a.has(t.cID)&&"no"!==t.active&&t.trim_cycle===e.toString()){a.add(t.cID);const e=await buildProjectedBookingData(t,i,o);e&&c.push(e)}}return c.length>0?c:null}catch(e){throw e}}async function buildProjectedBookingData(e,t,n){debugLog();const o=await predictNextSessionNumberHorses({clientData:{...e,scheduleOptions:n},manageClient:t});debugLog();const i=o?.totalTime||0;return debugLog(),{client_name:e.client_name,cID:e.cID,primaryKey:e.primaryKey,city:e.city,num_horses:o?.horses?.length||0,new_client:e.horses&&0!==e.horses.length?"":"New Client.",predicted_services:o?.serviceBreakdown||{trims:0,halfSets:0,fullSets:0},time_block:i}}