// @ts-nocheck
import{trimCycleRange}from"../../../utils/dom/forms/trimCycleConfigurations.min.js";import predictNextSessionNumberHorses from"./predictNextSessionNumberHorses.min.js";const COMPONENT="Get Projected Appointments",DEBUG=!1,debugLog=(...e)=>{false};export default async function getProjectedAppointments({appointmentDate:e,trimCycle:t,clientInfo:n,scheduleOptions:o,manageClient:i}){try{let s=n?.cID||null;if(!(n?.trim_cycle||("null"!==t.options[t.selectedIndex].value?t.options[t.selectedIndex].value:null)))return null;const[c,r,l]=e.value.split("-"),a=new Date(c,r-1,l);a.setHours(0,0,0,0);const u=new Date;u.setHours(0,0,0,0);const g=[],d=new Set;for(const e of trimCycleRange){const t=new Date(a);if(t.setDate(a.getDate()-e),t<=u)return g.length>0?g:null;debugLog(),debugLog(t.toISOString());const n=t.toISOString().slice(0,10);debugLog();const c=await i.getClientScheduleByTrimDate(n);if(debugLog(),c?.length>0)for(const t of c){if(d.has(t.cID)||t.cID===s||"no"===t.active||t.trim_cycle!==e.toString())continue;d.add(t.cID);const n=await buildProjectedBookingData(t,i,o);n&&g.push(n)}}return g.length>0?g:null}catch(e){throw e}}async function buildProjectedBookingData(e,t,n){debugLog();const o=await predictNextSessionNumberHorses({clientData:{...e,scheduleOptions:n},manageClient:t});debugLog();const i=o?.totalTime||0;return debugLog(),{client_name:e.client_name,cID:e.cID,primaryKey:e.primaryKey,city:e.city,num_horses:o?.horses?.length||0,new_client:e.horses&&0!==e.horses.length?"":"New Client.",predicted_services:o?.serviceBreakdown||{trims:0,halfSets:0,fullSets:0},time_block:i}}