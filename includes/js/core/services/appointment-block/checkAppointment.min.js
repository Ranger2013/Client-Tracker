// @ts-nocheck
import{getValidElement}from"../../utils/dom/elements.js";import{removeListeners}from"../../utils/dom/listeners.js";import{clearMsg,safeDisplayMessage}from"../../utils/dom/messages.js";import buildAppointmentBlock from"./components/buildAppointmentBlock.js";import buildNoAppointmentsBlock from"./components/buildNoAppointmentsBlock.js";import buildProjectedAppointmentBlock from"./components/buildProjectedAppointmentBlock.js";import getCurrentAppointments from"./components/getCurrentAppointments.js";import getProjectedAppointments from"./components/getProjectedAppointments.js";const COMPONENT_ID="check-appointment",COMPONENT="checkAppointment",DEBUG=!1,debugLog=(...e)=>{false};export default async function checkAppointment({trimDate:e,trimCycle:t=null,appBlock:n,projAppBlock:o,clientInfo:i=null,manageClient:r,manageUser:p}){try{removeListeners(COMPONENT_ID),e=getValidElement(e),t=null===t?null:getValidElement(t),n=getValidElement(n),o=getValidElement(o);document.getElementById(`${e.id}-error`);const s=new Date(e.value.replace(/-/g,"/")).toDateString(),[a,m]=await Promise.all([p.getScheduleOptions(),p.getDateTimeOptions()]);if(0===Object.keys(a).length||0===Object.keys(m).length){const{AppError:e}=await import("../../errors/models/AppError.js");e.process(new Error("User settings are missing for the checkAppointments system."),{errorCode:e.Types.SETTINGS_ERROR,userMessage:"Scheduling options or date time options are not set in your settings.",displayTarget:n},!0)}const[l,c]=await Promise.all([getCurrentAppointments({appointmentDate:e.value,scheduleOptions:a,dateTimeFormats:m,manageClient:r}),getProjectedAppointments({appointmentDate:e,trimCycle:t,clientInfo:i,scheduleOptions:a,manageClient:r})]);debugLog(),l?.length>0?await buildAppointmentBlock({appointmentContainer:n,appointments:l,date:s,manageClient:r,manageUser:p,componentId:COMPONENT_ID}):await buildNoAppointmentsBlock({appointmentContainer:n,date:s}),c?.length>0?await buildProjectedAppointmentBlock({appointmentContainer:o,data:c,date:s,manageClient:r,manageUser:p,componentId:COMPONENT_ID}):o.innerHTML=""}catch(e){const{AppError:t}=await import("../../errors/models/AppError.js");t.handleError(e,{errorCode:t.Types.RENDER_ERROR,userMessage:"Unable to check appointment availability.",displayTarget:n})}}