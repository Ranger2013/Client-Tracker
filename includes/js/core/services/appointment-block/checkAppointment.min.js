// @ts-nocheck
import{getValidElement}from"../../utils/dom/elements.min.js";import{removeListeners}from"../../utils/dom/listeners.min.js";import{clearMsg,safeDisplayMessage}from"../../utils/dom/messages.min.js";import buildAppointmentBlock from"./components/buildAppointmentBlock.min.js";import buildNoAppointmentsBlock from"./components/buildNoAppointmentsBlock.min.js";import buildProjectedAppointmentBlock from"./components/buildProjectedAppointmentBlock.min.js";import getCurrentAppointments from"./components/getCurrentAppointments.min.js";import getProjectedAppointments from"./components/getProjectedAppointments.min.js";const COMPONENT_ID="check-appointment",COMPONENT="checkAppointment",DEBUG=!1,debugLog=(...e)=>{false};export default async function checkAppointment({trimDate:e,trimCycle:t=null,appBlock:n,projAppBlock:o,clientInfo:i=null,manageClient:s,manageUser:r}){try{removeListeners(COMPONENT_ID),e=getValidElement(e),t=null===t?null:getValidElement(t),n=getValidElement(n),o=getValidElement(o);const a=document.getElementById(`${e.id}-error`),p=new Date(e.value.replace(/-/g,"/")).toDateString(),[m,l,c]=await Promise.all([r.getScheduleOptions(),r.getDateTimeOptions(),r.getUserBlockedDates()??[]]);if(0===Object.keys(m).length||0===Object.keys(l).length){const{AppError:e}=await import("../../errors/models/AppError.js");e.process(new Error("User settings are missing for the checkAppointments system."),{errorCode:e.Types.SETTINGS_ERROR,userMessage:"Scheduling options or date time options are not set in your settings.",displayTarget:n},!0)}c?.includes(e.value)?safeDisplayMessage({elementOrId:a,message:"You have blocked out this date.",targetId:a}):clearMsg({container:a,hide:!0,input:a});const[d,g]=await Promise.all([getCurrentAppointments({appointmentDate:e.value,scheduleOptions:m,dateTimeFormats:l,manageClient:s}),getProjectedAppointments({appointmentDate:e,trimCycle:t,clientInfo:i,scheduleOptions:m,manageClient:s})]);debugLog(),d?.length>0?await buildAppointmentBlock({appointmentContainer:n,appointments:d,date:p,manageClient:s,manageUser:r,componentId:COMPONENT_ID}):await buildNoAppointmentsBlock({appointmentContainer:n,date:p}),g?.length>0&&await buildProjectedAppointmentBlock({appointmentContainer:o,data:g,date:p,manageClient:s,manageUser:r,componentId:COMPONENT_ID})}catch(e){const{AppError:t}=await import("../../errors/models/AppError.js");t.handleError(e,{errorCode:t.Types.RENDER_ERROR,userMessage:"Unable to check appointment availability.",displayTarget:n})}}