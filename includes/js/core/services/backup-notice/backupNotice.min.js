// @ts-nocheck
import{getValidElement}from"../../utils/dom/elements.min.js";import{addListener,removeListeners}from"../../utils/dom/listeners.min.js";const TWO_HOURS=72e5,REMINDER_PATTERNS=["add","edit","delete","dateTime","farrierPrices","schedulingOptions","mileageCharges","colorOptions"],BACKUP_NOTICE_ID="backup-notice-component";export default async function setupBackupNotice({errorEleID:e,manageUser:t}){const r=getValidElement(e);try{await initializeBackupNotice({reminders:REMINDER_PATTERNS,displayElement:r,manageUser:t}),addListener({elementOrId:`${e}-close`,eventType:"click",handler:()=>closeBackupNotice({noticeEle:r,manageUser:t}),componentId:BACKUP_NOTICE_ID})}catch(e){const{AppError:t}=await import("../../errors/models/AppError.js");t.handleError(e,{originalError:e,errorCode:t.Types.BACKUP_ERROR,userMessage:"Error: Reminder system failed.",displayTarget:r})}}async function initializeBackupNotice({reminders:e,displayElement:t,manageUser:r}){try{const s=await r.getSettings(),a=await r.getStoreNames();if(shouldShowReminder(s)){const s=filterStores(a,e);await r.checkStoresForData(s)?updateNoticeContent(t,"You currently have data that needs to be backed up to the server."):hideBackupNotice(t)}}catch(e){const{AppError:r}=await import("../../errors/models/AppError.js");throw new r("Failed to initialize backup notice: ",{originalError:e,errorCode:r.Types.BACKUP_ERROR,userMessage:"Unable to check for pending backups",displayTarget:t})}}function shouldShowReminder(e){const t=e.reminders.status,r=e.reminders.timestamp,s=(new Date).getTime();return("default"===t||"yes"===t)&&(0===r||s-r>=72e5)}function updateNoticeContent(e,t,r=!1){const s=e.querySelector("#backup-data-notice-close");e.innerHTML="",s&&e.appendChild(s);const a=document.createElement("span");a.textContent=t,r&&a.classList.add("w3-text-red"),e.insertBefore(a,s),e.classList.remove("w3-hide")}function filterStores(e,t){return Object.keys(e).filter((e=>t.some((t=>e.toLowerCase().includes(t.toLowerCase()))))).reduce(((t,r)=>(t[r]=e[r],t)),{})}function hideBackupNotice(e){e.classList.add("w3-hide")}async function closeBackupNotice({noticeEle:e,manageUser:t}){try{const r=await t.getSettings(),{status:s,timestamp:a}=r.reminders,o={status:s,timestamp:Date.now()};await t.updateLocalUserSettings({userData:o,settingsProperty:"reminders"}),hideBackupNotice(e),removeListeners(BACKUP_NOTICE_ID)}catch(t){const{AppError:r}=await import("../../errors/models/AppError.js");r.handleError(t,{errorCode:r.Types.DATABASE_ERROR,userMessage:r.BaseMessages.system.server,displayTarget:e})}}