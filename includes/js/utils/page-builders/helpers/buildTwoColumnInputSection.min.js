// @ts-nocheck
import{getCurrentTime,getReadableCurrentFutureDate}from"../../date/dateUtils.js";import{buildEle}from"../../dom/domUtils.js";import buildErrorDiv from"./buildErrorDiv.js";export default async function buildTwoColumnInputSection({labelText:e,inputID:t,inputType:i,inputName:l,inputTitle:r,required:d=!0,inputValue:a=null,additionalElement:u=null}){try{let o,p;const n={id:t,type:i,name:l,placeholder:r,title:r,required:d||void 0,"aria-required":d||void 0,"aria-label":r,value:a||void 0,step:"number"===i?".01":void 0};"date"===i?n.value=a||getReadableCurrentFutureDate():"time"===i&&(n.value=a||getCurrentTime()),Object.keys(n).forEach((e=>void 0===n[e]&&delete n[e]));const s=["w3-input","w3-border","input"];"app-time"===t&&(o=buildEle({type:"div",attributes:{id:"appointment-block"},myClass:["w3-margin-small"]}),p=buildEle({type:"div",attributes:{id:"projected-appointment-block"},myClass:["w3-margin-small"]}));const m=buildEle({type:"div",myClass:["w3-row","w3-padding"]}),b=buildEle({type:"div",myClass:["w3-col","m6"]}),C=buildEle({type:"label",attributes:{for:t},text:e}),c=buildEle({type:"div",myClass:["w3-col","m6"]}),y=buildErrorDiv(t),v=buildEle({type:"input",attributes:n,myClass:s});return b.appendChild(C),c.appendChild(v),c.appendChild(y),o&&p&&(c.appendChild(o),c.appendChild(p)),u&&c.appendChild(u),m.appendChild(b),m.appendChild(c),m}catch(e){const{default:t}=await import("../../../utils/error-messages/errorLogs.js");throw await t("buildTwoColumnInputSectionError","Build Two Column Input Section Error: ",e),e}}