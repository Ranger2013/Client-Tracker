// @ts-nocheck
import{buildEle,clearMsg}from"../../../../dom/domUtils.js";import{removeAllListeners}from"../../../../event-listeners/listeners.js";import{trimCycleConfigurations}from"../../../../configurations/trimCycleConfigurations.js";import buildPageContainer from"../../../helpers/buildPageContainer.js";import buildSubmitButtonSection from"../../../helpers/buildSubmitButtonSection.js";import buildSubmitDeleteButtonSection from"../../../helpers/buildSubmitDeleteButtonSection.js";import buildTwoColumnAddressSection from"../../../helpers/buildTwoColumnAddressSection.js";import buildTwoColumnInputSection from"../../../helpers/buildTwoColumnInputSection.js";import buildTwoColumnRadioButtonSection from"../../../helpers/buildTwoColumnRadioButtonSection.js";import buildTwoColumnSelectElementSection from"../../../helpers/buildTwoColumnSelectElementSection.js";import getClientInformation from"./helpers/getClientInformation.js";export default async function buildAddEditClientPage({cID:e=null,primaryKey:t=null,mainContainer:i}){try{clearMsg({container:"page-msg"});let n=null,l=null,u=null,a=null,p={client_name:"",street:"",city:"",state:"",zip:"",distance:"",phone:"",email:"",trim_cycle:"",trim_date:"",app_time:"",active:""};if(e&&""!==e||t&&""!==t)try{n=await getClientInformation({cID:e,primaryKey:t,fieldValues:p}),l=`/tracker/clients/appointments/?cID=${e}&key=${t}`,u=n.client_name,Object.keys(p).forEach((e=>{void 0!==n[e]&&(p[e]=n[e])})),a=await buildSubmitDeleteButtonSection({submitButtonText:"Edit Client",deleteButtonText:"Delete Client"})}catch(e){}else a=await buildSubmitButtonSection("Add Client");const o=n?"Edit ":"Add a new Client",[r,d]=await buildPageContainer({pageTitle:o,clientAnchor:l,clientName:u,cID:e,primaryKey:t}),m=buildEle({type:"form",attributes:{id:"client-form"}});d.appendChild(m);(await Promise.all([buildTwoColumnInputSection({labelText:"Client Name:",inputID:"client-name",inputType:"text",inputName:"client_name",inputTitle:"Client Name",inputValue:p.client_name}),buildTwoColumnAddressSection("Address:","street",[{typeEle:"input",inputId:"street",inputType:"text",inputName:"street",inputTitle:"Street",inputClass:"w3-input w3-border w3-padding-small input",inputRequired:"required",inputValue:p.street},{typeEle:"input",inputId:"city",inputType:"text",inputName:"city",inputTitle:"City",inputClass:"w3-input w3-border w3-padding-small input",inputRequired:"required",inputValue:p.city},{typeEle:"input",inputId:"state",inputType:"text",inputName:"state",inputTitle:"State",inputClass:"w3-input w3-border w3-padding-small input",inputRequired:"required",inputValue:p.state},{typeEle:"input",inputId:"zip",inputType:"text",inputName:"zip",inputTitle:"Zip Code (Optional)",inputClass:"w3-input w3-border w3-padding-small input",inputPattern:"[0-9]{5}",inputValue:p.zip,note:"Zip code is required for accepting credit card payments."}]),buildTwoColumnInputSection({labelText:"Distance:",inputID:"distance",inputType:"number",inputName:"distance",inputTitle:"Total Distance to Client",inputValue:p.distance,required:!1}),buildTwoColumnInputSection({labelText:"Client Phone#:",inputID:"phone",inputType:"tel",inputName:"phone",inputTitle:"Client Phone: xxx-xxx-xxxx",inputValue:p.phone}),buildTwoColumnInputSection({labelText:"Client Email:",inputID:"email",inputType:"email",inputName:"email",inputTitle:"Client Email",inputValue:p.email,required:!1}),buildTwoColumnSelectElementSection({labelText:"Trimming/Shoeing Cycle:",selectID:"trim-cycle",selectName:"trim_cycle",selectTitle:"Trimming/Shoeing Cycle",options:trimCycleConfigurations(p)}),buildTwoColumnInputSection({labelText:"Trimming/Shoeing Date:",inputID:"trim-date",inputName:"trim_date",inputType:"date",inputTitle:"Trimming/Shoeing Date",inputValue:p.trim_date}),buildTwoColumnInputSection({labelText:"Appointment Time:",inputID:"app-time",inputName:"app_time",inputType:"time",inputTitle:"Appointment Time",inputValue:p.app_time}),buildTwoColumnRadioButtonSection({labelText:"Active Status:",buttons:[{type:"radio",name:"active",value:"yes",labelText:"Yes",checked:"yes"===p.active||""===p.active?"checked":void 0},{type:"radio",name:"active",value:"no",labelText:"No",checked:"no"===p.active?"checked":void 0}]})])).forEach((e=>m.appendChild(e))),m.appendChild(a),d.appendChild(m),r.appendChild(d),i.innerHTML="",i.appendChild(r);const{default:c}=await import("../../../../../pages/clients/add-edit-client/addEditClientJS.js");return await c(e,t,n),removeAllListeners}catch(e){const{handleError:t}=await import("../../../../../utils/error-messages/handleError.js");await t("buildAddEditClientPageError","Build add/edit client page error: ",e,"Unable to display the add/edit client page. Please try again later.","page-msg")}}