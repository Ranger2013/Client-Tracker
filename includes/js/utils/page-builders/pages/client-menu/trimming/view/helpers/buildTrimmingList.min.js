// @ts-nocheck
import{formatDate,getWeeksAndDaysSinceLastTrim,sortByDateOnly}from"../../../../../../date/dateUtils.js";import{buildEle}from"../../../../../../dom/domUtils.js";import{cleanUserOutput,ucwords,underscoreToSpaces}from"../../../../../../string/stringUtils.js";export default async function buildTrimmingList(e,t){try{if(0===e.length)return await noCurrentTrimmings();const{dateFormat:r}=t,i=document.createDocumentFragment();e.sort(((e,t)=>sortByDateOnly(e.date_trimmed,t.date_trimmed,!1)));for(const t of e){const{weeks:e,days:l}=getWeeksAndDaysSinceLastTrim(t.date_trimmed),s={dateTrimmed:formatDate(t.date_trimmed,r),weeks:e,days:l,horses:t.horses,mileageCost:t.mileage_cost,totalPayment:t.payment_amount,sessionNotes:cleanUserOutput(t.session_notes)},n=await buildTrimmingBlock(t,s);i.appendChild(n)}return i}catch(e){const{handleError:t}=await import("../../../../../../error-messages/handleError.js");throw await t("buildTrimmingListError","Error building trimming list: ",e),e}}async function noCurrentTrimmings(){}async function buildTrimmingBlock(e,t){try{const{dateTrimmed:e,weeks:r,days:i,horses:l,mileageCost:s,totalPayment:n,sessionNotes:d}=t,o=buildEle({type:"div",myClass:["w3-row","w3-border-bottom","w3-padding-small"]}),a=buildColumnOne(e,r,i),m=buildColumnTwo(l),u=buildColumnThree(s,n),c=buildNotesRow(d);return o.appendChild(a),o.appendChild(m),o.appendChild(u),c&&o.appendChild(c),o}catch(e){const{handleError:t}=await import("../../../../../../error-messages/handleError.js");throw await t("buildTrimmingBlockError","Error building trimming block: ",e),e}}function buildColumnOne(e,t,r){try{const i=buildEle({type:"div",myClass:["w3-col","s4"]}),l=buildEle({type:"div",myClass:["w3-hide-small","w3-center"],text:`${e}<br><span class="w3-small">${t} weeks and ${r} day(s) ago</span>`}),s=buildEle({type:"div",myClass:["w3-hide-medium","w3-hide-large","w3-center"],text:e});return i.appendChild(l),i.appendChild(s),i}catch(e){throw new Error(`Error building column one: ${e.message}`)}}function buildColumnTwo(e){try{console.log("In buildColumnTwo: horses: ",e);const t=buildEle({type:"div",myClass:["w3-col","s4"]}),r=buildEle({type:"div",myClass:["w3-hide-small","w3-center"]}),i=buildEle({type:"div",myClass:["w3-hide-medium","w3-hide-large","w3-center"],text:`${e.length}`});return e.forEach((e=>{const t=buildEle({type:"div"}),i=buildEle({type:"div",myClass:["w3-bold","w3-underline"],text:`${e.horse_name}<br>`}),[l,s]=e.type_trim.split(":"),n=buildEle({type:"div",myClass:["w3-small"],text:`${ucwords(underscoreToSpaces(l))}: $${s}`});t.appendChild(i),t.appendChild(n);const d=buildAccessories(e.acc);d&&t.appendChild(d),r.appendChild(t)})),t.appendChild(r),t.appendChild(i),t}catch(e){throw new Error(`Error building column two: ${e.message}`)}}function buildColumnThree(e,t){try{const r=buildEle({type:"div",myClass:["w3-col","s4"]}),i=buildEle({type:"div",myClass:["w3-center"],text:`Mileage: $${e}`}),l=buildEle({type:"div",myClass:["w3-center"],text:`Total: $${t}`});return r.appendChild(i),r.appendChild(l),r}catch(e){throw new Error(`Error building column three: ${e.message}`)}}function buildNotesRow(e){if(!e)return null;try{const t=buildEle({type:"div",myClass:["w3-row"]}),r=buildEle({type:"div",myClass:["w3-padding-small"],text:e}),i=buildEle({type:"fieldset",children:[buildEle({type:"legend",text:"Session Notes"}),r]});return t.appendChild(i),t}catch(e){throw new Error(`Error building notes row: ${e.message}`)}}function buildAccessories(e){if(!e||0===e.length)return null;const t=buildEle({type:"div",myClass:["w3-small"]});return e.forEach((e=>{const[r,i,l]=e.split(":"),s=buildEle({type:"div",text:`${ucwords(r)}: ${ucwords(underscoreToSpaces(i))}: $${l}`});t.appendChild(s)})),t}