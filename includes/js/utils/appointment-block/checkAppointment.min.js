// @ts-nocheck
import ManageClient from"../../classes/ManageClient.js";import ManageUser from"../../classes/ManageUser.js";import{clearMsg,myError}from"../dom/domUtils.js";import{helpDeskTicket}from"../error-messages/errorMessages.js";import buildAppointmentBlock from"./helpers/buildAppointmentBlock.js";import buildNoAppointmentsBlock from"./helpers/buildNoAppointmentsBlock.js";import buildProjectedAppointmentBlock from"./helpers/buildProjectedAppointmentBlock.js";import getCurrentAppointments from"./helpers/getCurrentAppointments.js";import getProjectedAppointments from"./helpers/getProjectedAppointments.js";export default async function checkAppointment({trimDate:e,trimCycle:t,appBlock:o,projAppBlock:r,clientInfo:n=null}){try{e=resolveElement(e),t=resolveElement(t),o=resolveElement(o),r=resolveElement(r);const i=document.getElementById(`${e.id}-error`),l=new Date(e.value.replace(/-/g,"/")).toDateString(),s=new ManageClient,p=new ManageUser,[m,a,c]=await Promise.all([p.getScheduleOptions(),p.getDateTimeOptions(),p.getUserBlockedDates()??[]]);c?.includes(e.value)?myError(i,"You have blocked out this date.",i):clearMsg({container:i,hide:!0,input:i});const[d,g]=await Promise.all([getCurrentAppointments(e,m,a,s),getProjectedAppointments(e,t,n,m)]);d?.length>0?await buildAppointmentBlock(o,d,l):await buildNoAppointmentsBlock(o,l),g?.length>0&&await buildProjectedAppointmentBlock(r,g,l)}catch(e){const{default:t}=await import("../../utils/error-messages/errorLogs.js");await t("checkAppointmentError","Check Appointment Error: ",e),myError(o,`${e}<br>${helpDeskTicket}`)}}function resolveElement(e){return"string"==typeof e?document.getElementById(e):e instanceof HTMLElement?e:void 0}