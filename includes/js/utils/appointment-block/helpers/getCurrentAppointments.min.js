// @ts-nocheck
import IndexedDBOperations from"../../../classes/IndexedDBOperations.js";import{sortByTrimDateAndAppTime}from"../../date/dateUtils.js";import appointmentBlockData from"./appointmentBlockData.js";import predictNextSessionNumberHorses from"./predictNextSessionNumberHorses.js";export default async function getCurrentAppointments(e,t,r,o=null){try{if(!t||!r)throw new Error("No Schedule Options or Date/Time Options to create booked appointments. Please update your settings.");const{avg_horses:i,avg_drive_time:s}=t,{date_format:a,time_format:n}=r;let m=[];const p=new IndexedDBOperations,c=await p.openDBPromise(),d=await p.getAllStoreByIndexPromise(c,p.stores.CLIENTLIST,"trim_date",e.value);if(d.sort(sortByTrimDateAndAppTime),0===d.length)return null;let l=new Set;for(let e of d){if("no"===e.active)continue;if(l.has(e.cID))continue;l.add(e.cID);const t=e.horses.length>0?e.horses.length:1,r=await predictNextSessionNumberHorses(e.cID,o,t),p={cID:e.cID,primary_key:e.primaryKey,client_name:e.client_name,city:e.city,num_horses:r,avg_horses:i,avg_drive_time:s,app_time:e.app_time,time_format:n,date_format:a};m.push(await appointmentBlockData(p))}return m}catch(e){const{default:t}=await import("../../error-messages/errorLogs.js");throw await t("getCurrentAppointmentsError","Get Current Appointments Error: ",e),e}}