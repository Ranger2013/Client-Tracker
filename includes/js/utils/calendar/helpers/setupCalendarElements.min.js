// @ts-nocheck
import{buildEle}from"../../dom/domUtils.js";import buildButtonContainer from"./buildButtonContainer.js";export default async function setupCalendarElements(t,e){try{const i=buildEle({type:"div",attributes:{id:"calendar-container"}}),d=buildEle({type:"div",myClass:["w3-padding-small","w3-margin-top","w3-small"],text:"Select dates that you wish to be notified to not set bookings on. This will show a reminder on the 'Add Trimming/Shoeing' Page."}),l=buildEle({type:"div",attributes:{id:"calendar-header"},myClass:["w3-margin-bottom","w3-center","w3-margin-top"]}),a=buildEle({type:"button",attributes:{id:"prev-button",style:"margin-right: 10px"},text:"&lt;"}),n=buildEle({type:"span",attributes:{id:"month-name"}}),r=buildEle({type:"button",attributes:{id:"next-button",style:"margin-left: 10px"},text:"&gt;"}),o=buildEle({type:"table",attributes:{id:"calendar-table",width:"100%",border:"1px"}}),p=buildEle({type:"thead"}),s=buildEle({type:"tr"}),u=["S","M","T","W","T","F","S"];for(const t of u){const e=buildEle({type:"th",text:t});s.appendChild(e)}const b=buildEle({type:"tbody",attributes:{id:"calendar-body"}}),h=buildEle({type:"div"});return i.appendChild(d),i.appendChild(l),l.appendChild(a),l.appendChild(n),l.appendChild(r),i.appendChild(h),i.appendChild(await buildButtonContainer(t,e)),h.appendChild(o),o.appendChild(p),p.appendChild(s),o.appendChild(b),i}catch(t){const{default:e}=await import("../../../utils/error-messages/errorLogs.js");throw await e("setupCalendarElementsError","Setup Calendar Elements Error: ",t),t}}