// @ts-nocheck
import setupBackupNotice from"../../../../../core/services/backup-notice/backupNotice.js";import{disableEnableSubmitButton}from"../../../../../core/utils/dom/elements.js";import displayFormValidationErrors from"../../../../../core/utils/dom/forms/displayFormValidationErrors.js";import{addListener}from"../../../../../core/utils/dom/listeners.js";import{clearMsg,safeDisplayMessage}from"../../../../../core/utils/dom/messages.js";import{top}from"../../../../../core/utils/window/scroll.js";const COMPONENT="Add Expenses",DEBUG=!1,debugLog=(...e)=>{false};export default async function addExpenses({mainContainer:e,manageClient:s,manageUser:r,componentId:t,categoryOptions:a}){try{const o={"focusin:store":e=>{clearMsg({container:`${e.target.id}-error`,hide:!0,input:e.target}),disableEnableSubmitButton("submit-button")},"focusin:date":e=>{clearMsg({container:`${e.target.id}-error`,hide:!0,input:e.target}),disableEnableSubmitButton("submit-button")},"focusin:category":e=>{clearMsg({container:`${e.target.id}-error`,hide:!0,input:e.target}),disableEnableSubmitButton("submit-button")},"focusin:price":e=>{clearMsg({container:`${e.target.id}-error`,hide:!0,input:e.target}),disableEnableSubmitButton("submit-button")},"focusin:item-description":e=>{clearMsg({container:`${e.target.id}-error`,hide:!0,input:e.target}),disableEnableSubmitButton("submit-button")},"submit:add-expenses-form":async t=>{t.preventDefault(),await handleAddExpensesFormSubmission({evt:t,mainContainer:e,manageClient:s,manageUser:r,categoryOptions:a})}};addListener({elementOrId:"card",eventType:["focusin","submit"],handler:e=>{debugLog(e.type);const s=`${e.type}:${e.target.id}`;debugLog(),o[s]&&o[s](e)},componentId:t})}catch(e){const{AppError:s}=await import("../../../../../core/errors/models/AppError.js");s.handleError(e,{errorCode:s.Types.INITIALIZATION_ERROR,userMessage:s.BaseMessages.system.initialization})}}async function handleAddExpensesFormSubmission({evt:e,mainContainer:s,manageClient:r,manageUser:t,categoryOptions:a}){try{debugLog(),clearMsg({container:"form-msg"});const s=Object.fromEntries(new FormData(e.target)),r=await validateAddExpensesForm({userData:s,options:a});if(debugLog(),r.length>0)return displayFormValidationErrors(r),void disableEnableSubmitButton("submit-button");if(await handleFormSubmission(s))return void displaySuccessMessageAndResetForm({evt:e,manageUser:t})}catch(e){const{AppError:s}=await import("../../../../../core/errors/models/AppError.js");s.handleError(e,{errorCode:s.Types.FORM_SUBMISSION_ERROR,userMessage:s.BaseMessages.forms.submissionFailed,displayTarget:"form-msg"}),disableEnableSubmitButton("submit-button")}}async function validateAddExpensesForm({userData:e,options:s}){try{debugLog(),debugLog(s.some((s=>"null"!==s.value&&s.value===e?.category)));const r={store:{isValid:()=>""!==e?.store?.trim(),errorMessage:"Store name is required"},date:{isValid:()=>""!==e?.date?.trim(),errorMessage:"Date of purchase is required"},category:{isValid:()=>s.some((s=>"null"!==s.value&&s.value===e?.category)),errorMessage:"Please select a valid category"},price:{isValid:()=>""!==e?.price?.trim()&&parseFloat(e?.price)>0,errorMessage:"Price must be a positive number"},"item-description":{isValid:()=>""!==e["item-description"]?.trim(),errorMessage:"Item description is required"}};return Object.entries(r).filter((([e,s])=>!s.isValid())).map((([e,s])=>({input:e,msg:s.errorMessage})))}catch(e){const{AppError:s}=await import("../../../../../core/errors/models/AppError.js");s.process(e,{errorCode:s.Types.FORM_VALIDATION_ERROR,userMessage:s.BaseMessages.forms.validationFailed,displayTarget:"form-msg"},!0)}}async function handleFormSubmission(e){const{default:s}=await import("../../../../user/models/ManageExpenses.js"),r=new s,t={add_expenses:!0,...e};return await r.addExpense(t)}function displaySuccessMessageAndResetForm({evt:e,manageUser:s}){safeDisplayMessage({elementId:"form-msg",message:"Expense added successfully",isSuccess:!0}),setupBackupNotice({errorEleID:"backup-data-notice",manageUser:s}),e.target.reset(),top();const r=(new Date).toISOString().slice(0,10);document.getElementById("date").value=r}