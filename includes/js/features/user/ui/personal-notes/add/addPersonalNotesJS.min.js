// @ts-nocheck
import setupBackupNotice from"../../../../../core/services/backup-notice/backupNotice.js";import{disableEnableSubmitButton}from"../../../../../core/utils/dom/elements.js";import displayFormValidationErrors from"../../../../../core/utils/dom/forms/displayFormValidationErrors.js";import{addListener}from"../../../../../core/utils/dom/listeners.js";import{clearMsg,safeDisplayMessage}from"../../../../../core/utils/dom/messages.js";const COMPONENT="Add Personal Notes",DEBUG=!1,debugLog=(...e)=>{false};export default async function addPersonalNotes({componentId:e,manageUser:s}){try{const r={"focusin:note":e=>{debugLog(e.target),clearMsg({container:`${e.target.id}-error`,hide:!0,input:e.target.id}),disableEnableSubmitButton("submit-button")},"submit:add-personal-notes-form":async e=>{e.preventDefault(),await handleAddNotesFormSubmission({evt:e,manageUser:s})}};addListener({elementOrId:"add-personal-notes-form",eventType:["focusin","submit"],handler:e=>{const s=`${e.type}:${e.target.id}`;r[s]&&r[s](e)},componentId:e})}catch(e){const{AppError:s}=await import("../../../../../core/errors/models/AppError.js");s.handleError(e,{errorCode:s.Types.INITIALIZATION_ERROR,message:s.BaseMessages.system.initialization})}}async function handleAddNotesFormSubmission({evt:e,manageUser:s}){try{const r=Object.fromEntries(new FormData(e.target)),o=await validateAddPersonalNotesForm(r);if(o?.length)return await displayFormValidationErrors(o),void disableEnableSubmitButton("submit-button");await handleFormSubmission(r)&&displaySuccessMessageAndResetForm({evt:e,manageUser:s})}catch(e){console.log("handleAddNotesFormSubmission: ",e);const{AppError:s}=await import("../../../../../core/errors/models/AppError.js");s.handleError(e,{errorCode:s.Types.FORM_SUBMISSION_ERROR,message:s.BaseMessages.forms.submissionFailed})}}async function validateAddPersonalNotesForm(e){try{const s={notes:{isValid:()=>e.notes.trim().length>0,message:"Please enter a note."}};return Object.entries(s).filter((([e,s])=>!s.isValid())).map((([e,s])=>({input:e,msg:s.message})))}catch(e){const{AppError:s}=await import("../../../../../core/errors/models/AppError.js");s.handleError(e,{errorCode:s.Types.FORM_VALIDATION_ERROR,message:s.BaseMessages.forms.validationFailed})}}async function handleFormSubmission(e){try{const{default:s}=await import("../../../models/ManagePersonalNotes.js"),r=new s({debug:!1});return await r.addPersonalNotes(e)}catch(e){throw console.warn("HandleFormSubmission: ",e),e}}async function displaySuccessMessageAndResetForm({evt:e,manageUser:s}){try{safeDisplayMessage({elementId:"form-msg",message:"Personal notes added successfully.",isSuccess:!0}),e.target.reset(),setupBackupNotice({errorEleID:"backup-data-notice",manageUser:s})}catch(e){const{AppError:s}=await import("../../../../../core/errors/models/AppError.js");s.handleError(e,{errorCode:s.Types.MESSAGE_DISPLAY_ERROR,message:s.BaseMessages.forms.messageDisplayFailed})}}