// @ts-nocheck
import{addListener}from"../../../../core/utils/dom/listeners.js";import{clearMsg,safeDisplayMessage}from"../../../../core/utils/dom/messages.js";import{disableEnableSubmitButton}from"../../../../core/utils/dom/elements.js";import ManageUser from"../../models/ManageUser.js";import populateDateTimeForm from"./components/date-time/populateDateTimeForm.js";const COMPONENT_ID="date-time",manageUser=new ManageUser,timeZone=document.getElementById("time-zone"),dateFormat=document.getElementById("date-format");async function validateDateFormat(e,t){const a=["Y-m-d","m-d-Y","d-m-Y"];for(const s of a)if(s===e.target.value)return clearMsg({container:t,input:e.target}),void disableEnableSubmitButton("submit-button");await safeDisplayMessage({elementId:t,message:"Please select a valid date format."}),disableEnableSubmitButton("submit-button")}async function validateTimeZone(e,t){const a={"America/New_York":"Eastern Time Zone","America/Chicago":"Central Time Zone","America/Denver":"Mountain Time Zone","America/Phoenix":"Mountain Time No DST","America/Los_Angeles":"Pacific Time Zone","America/Anchorage":"Alaska Time Zone"};let s=!1;for(const t in a)if(t.toLowerCase()===e.target.value.toLowerCase()){s=!0;break}s?(clearMsg({container:t,input:e.target}),disableEnableSubmitButton("submit-button")):(await safeDisplayMessage({elementId:t,message:"Please select a valid time zone.",targetId:e.target}),disableEnableSubmitButton("submit-button"))}async function handleFormSubmission(e){e.preventDefault();try{await safeDisplayMessage({elementId:"form-msg",message:"Processing...",isSuccess:!0,color:"w3-text-blue"});const t=Object.fromEntries(new FormData(e.target)),a=manageUser.getStoreNames();await manageUser.updateLocalUserSettings({userData:t,settingsProperty:"date_time",backupStore:a.DATETIME,backupAPITag:"add_date_time"})?await safeDisplayMessage({elementId:"form-msg",message:"Date/Time Options have been saved.",isSuccess:!0}):await safeDisplayMessage({elementId:"form-msg",message:"We were unable to save your Date/Time Options."})}catch(e){const{handleError:t}=await import("../../../../../../old-js-code/js/utils/error-messages/handleError.js");await t({filename:"dateTimeFormError",consoleMsg:"Date/Time form submission error: ",err:e,userMsg:"Unable to save date/time options",errorEle:"form-msg"})}}populateDateTimeForm(manageUser,{timeZone:timeZone,dateFormat:dateFormat}),addListener("date-format","change",(e=>validateDateFormat(e,"date-format-error")),"date-time"),addListener("time-zone","change",(e=>validateTimeZone(e,"time-zone-error")),"date-time"),addListener("date-time-form","submit",handleFormSubmission,"date-time");