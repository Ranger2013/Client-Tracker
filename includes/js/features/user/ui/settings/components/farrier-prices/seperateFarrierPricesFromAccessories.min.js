// @ts-nocheck
import{isNumeric}from"../../../../../../core/utils/validation/validators.js";export default function seperateFarrierPricesFromAccessories(e){try{const s={},c={pads:[],packing:[],wedges:[],rockers:[],clips:[],casting:[],sedation:[]},o={pads:{name:{key:"pads_name_",action:(e,s)=>{c.pads[e-1]={...c.pads[e-1],name:s}}},cost:{key:"pads_cost_",action:(e,s)=>{c.pads[e-1]={...c.pads[e-1],cost:s}}}},packing:{name:{key:"packing_name_",action:(e,s)=>{c.packing[e-1]={...c.packing[e-1],name:s}}},cost:{key:"packing_cost_",action:(e,s)=>{c.packing[e-1]={...c.packing[e-1],cost:s}}}},wedges:{name:{key:"wedges_name_",action:(e,s)=>{c.wedges[e-1]={...c.wedges[e-1],name:s}}},cost:{key:"wedges_cost_",action:(e,s)=>{c.wedges[e-1]={...c.wedges[e-1],cost:s}}}},rockers:{cost:{key:"rockers",action:(e,s)=>{c.rockers=[{cost:s}]}}},clips:{cost:{key:"clips",action:(e,s)=>{c.clips=[{cost:s}]}}},casting:{cost:{key:"casting",action:(e,s)=>{c.casting=[{cost:s}]}}},sedation:{cost:{key:"sedation",action:(e,s)=>{c.sedation=[{cost:s}]}}}};for(let c in e)if(e.hasOwnProperty(c)){const[a,t,i]=c.split("_");if(o[a]){const s=void 0===i&&void 0===t?"cost":c.replace(`${a}_`,"").replace(`_${i}`,"");o[a][s]&&""!==e[c]&&o[a][s].action(i,e[c])}else{if(""!==e[c]&&!isNumeric(e[c],!0)){const e=new Error("Farrier prices must be numeric.");throw e.isCustom=!0,e}s[c]=e[c]}}return s.accessories=c,s}catch(e){throw console.warn("seperate farrier prices from accessories error: ",e),e}}