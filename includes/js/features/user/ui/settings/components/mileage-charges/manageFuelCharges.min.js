// @ts-nocheck
// @ts-nocheck
// @ts-nocheck
// @ts-nocheck
// @ts-nocheck
// @ts-nocheck
// @ts-nocheck
// @ts-nocheck
// @ts-nocheck
// @ts-nocheck
// @ts-nocheck
// @ts-nocheck
// @ts-nocheck
// @ts-nocheck
// @ts-nocheck
// @ts-nocheck
// @ts-nocheck
// @ts-nocheck
// @ts-nocheck
// @ts-nocheck
import{addListener}from"../../../core/utils/dom/listeners.js";export default class ManageTrackerInstallApp{static#e;#t=!1;#a=null;static COMPONENT_ID="tracker-install-manager";#n;#r;static getInstance(e={}){return ManageTrackerInstallApp.#e||(ManageTrackerInstallApp.#e=new ManageTrackerInstallApp(e)),ManageTrackerInstallApp.#e}constructor(e={}){if(ManageTrackerInstallApp.#e)return ManageTrackerInstallApp.#e;this.#t=!!e.debug,this.#n=/iPad|iPhone|iPod/.test(navigator.userAgent)&&!window.MSStream,this.#r=window.matchMedia("(display-mode: standalone)").matches||!0===window.navigator.standalone,this.#s("Initializing ManageTrackerInstallApp"),this.#s("Running on iOS:",this.#n),this.#s("Running in standalone mode:",this.#r),this.#i(),ManageTrackerInstallApp.#e=this}#s(...e){this.#t&&console.log("[ManageTrackerInstallApp]",...e)}#i(){addListener({elementOrId:window,eventType:"beforeinstallprompt",handler:e=>{e.preventDefault(),this.#a=e,this.#s("Install prompt captured and deferred")},componentId:ManageTrackerInstallApp.COMPONENT_ID})}canInstall(){return!!this.#a||this.#n}getPlatformInfo(){return{isIOS:this.#n,isStandalone:this.#r}}async promptForInstall(){try{if(!this.#a)return this.#s("No deferred prompt available"),!1;this.#s("Showing deferred installation prompt"),this.#a.prompt();const e=await this.#a.userChoice;this.#a=null;const t="accepted"===e.outcome;return this.#s("Installation prompt result:",t?"accepted":"dismissed"),t}catch(e){return this.#s("Error showing install prompt:",e),!1}}}