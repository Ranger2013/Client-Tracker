// @ts-nocheck
import{clearMsg,safeDisplayMessage}from"../../../../../../core/utils/dom/messages.min.js";import{isNumeric}from"../../../../../../core/utils/validation/validators.min.js";import{top}from"../../../../../../core/utils/window/scroll.min.js";export default async function handleByRangeFormSubmission({evt:e,manageUser:r}){e.preventDefault();try{clearMsg({container:"form-msg"});const a=document.getElementById("by-range-container"),t=document.getElementById("fuel-range-container"),s=Object.fromEntries(new FormData(e.target)),o=validateFormInputs(s);if(o.length>0){const{default:e}=await import("../../../../../../core/utils/dom/forms/displayFormValidationErrors.js");return void await e(o)}const{addFuelCharges:n}=await import("./manageFuelCharges.js");if(!await n({userData:s,formType:"range",manageUser:r}))throw new Error("Failed to add fuel charges");safeDisplayMessage({elementId:"form-msg",message:"Fuel Charges have been added",isSuccess:!0}),e.target.reset(),t.innerHTML="",a.classList.add("w3-hide"),top()}catch(e){top();const{AppError:r}=await import("../../../../../../core/errors/models/AppError.js");r.handleError(e,{errorCode:r.Types.FORM_SUBMISSION_ERROR,userMessage:"Unable to add mileage charges at this time",displayTarget:"form-msg"})}}function validateFormInputs(e){const r=[];for(const[a,t]of Object.entries(e))a.includes("ranges")||a.includes("cost")?isNumeric(t)||r.push({input:a,msg:"Input must be numeric."}):a.includes("mileage")&&(validateRange(t)||r.push({input:a,msg:"Improper range format."}));return r}export function validateRange(e){const r=e.match(/(\d{1,})-(\d{1,})\+?/);if(!r)return!1;return!(parseInt(r[1],10)>=parseInt(r[2],10))}