// @ts-nocheck
import{addListener,removeListeners}from"../../../../../../core/utils/dom/listeners.js";import buildMileageRangeInputs from"./buildMileageRangeInputs.js";export default async function listenForFuelRangeInput({userClass:e,rangeContainer:n,rangeInputId:r}){const t=document.getElementById("fuel-ranges"),a=document.getElementById("fuel-range-container");try{const o=await e.getMileageCharges();removeListeners(r),addListener({elementOrId:t,eventType:"input",handler:e=>buildMileageRangeInputs({evt:e,rangeContainer:n,fuelRangeContainer:a,values:o,componentId:r}),componentId:r}),o?.length>0&&(t.value=o.length,t.dispatchEvent(new Event("input",{bubbles:!0,cancelable:!0})))}catch(e){const{AppError:n}=await import("../../../../../../core/errors/models/AppError.js");new n("Error listening for fuel range input: ",{originalError:e,shouldLog:!0,userMessage:"Could not load fuel range inputs.",errorCode:"RENDER_ERROR",displayTarget:a}).handle()}}