// @ts-nocheck
import{addListener}from"../../../../../../core/utils/dom/listeners.min.js";import{clearMsg}from"../../../../../../core/utils/dom/messages.min.js";import listenForFuelRangeInput from"./listenForFuelRangeInput.min.js";import populateByMileForm from"./populateByMileForm.min.js";const COMPONENT_ID="fuel-charges-radio",RANGE_INPUT_ID="fuel-range-input";export default async function handleRadioButtonSelect({rangeButton:e,mileButton:a,rangeContainer:r,mileContainer:n,manageUser:t,componentId:o}){try{const o={byRange:{radio:e,container:r,show:async()=>{clearMsg({container:"form-msg"}),n.classList.add("w3-hide"),r.classList.remove("w3-hide"),await listenForFuelRangeInput({userClass:t,rangeContainer:r,rangeInputId:RANGE_INPUT_ID})}},byMile:{radio:a,container:n,show:async()=>{clearMsg({container:"form-msg"}),r.classList.add("w3-hide"),n.classList.remove("w3-hide"),await populateByMileForm({form:"per-mile-form",manageUser:t})}}};Object.values(o).forEach((e=>{addListener({elementOrId:e.radio,eventType:"click",handler:e.show,componentId:COMPONENT_ID})}));const s=await t.getMileageCharges();Array.isArray(s)&&s.length>0?(await listenForFuelRangeInput({userClass:t,rangeContainer:r,rangeInputId:RANGE_INPUT_ID}),n.classList.add("w3-hide"),r.classList.remove("w3-hide"),e.checked=!0):(await populateByMileForm({form:"per-mile-form",manageUser:t}),r.classList.add("w3-hide"),n.classList.remove("w3-hide"),a.checked=!0)}catch(e){console.log("Error in handleRadioButtonSelect: ",e)}}