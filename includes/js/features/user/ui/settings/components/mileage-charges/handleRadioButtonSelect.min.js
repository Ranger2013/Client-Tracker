// @ts-nocheck
import{addListener}from"../../../../../../core/utils/dom/listeners.js";import{clearMsg}from"../../../../../../core/utils/dom/messages.js";import listenForFuelRangeInput from"./listenForFuelRangeInput.js";import populateByMileForm from"./populateByMileForm.js";const COMPONENT_ID="fuel-charges-radio",RANGE_INPUT_ID="fuel-range-input";export default function handleRadioButtonSelect({rangeButton:e,mileButton:o,rangeContainer:n,mileContainer:r,manageUser:a,componentId:t}){try{const t={byRange:{radio:e,container:n,show:async()=>{clearMsg({container:"form-msg"}),r.classList.add("w3-hide"),n.classList.remove("w3-hide"),await listenForFuelRangeInput({userClass:a,rangeContainer:n,rangeInputId:RANGE_INPUT_ID})}},byMile:{radio:o,container:r,show:async()=>{clearMsg({container:"form-msg"}),n.classList.add("w3-hide"),r.classList.remove("w3-hide"),await populateByMileForm({form:"per-mile-form",manageUser:a})}}};Object.values(t).forEach((e=>{addListener({elementOrId:e.radio,eventType:"click",handler:e.show,componentId:COMPONENT_ID})}))}catch(e){console.log("Error in handleRadioButtonSelect: ",e)}}