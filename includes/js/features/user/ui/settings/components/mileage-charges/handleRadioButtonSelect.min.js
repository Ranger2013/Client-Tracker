// @ts-nocheck
import{addListener}from"../../../../../../core/utils/dom/listeners.js";import{clearMsg}from"../../../../../../core/utils/dom/messages.js";import listenForFuelRangeInput from"./listenForFuelRangeInput.js";import populateByMileForm from"./populateByMileForm.js";const COMPONENT_ID="fuel-charges-radio",RANGE_INPUT_ID="fuel-range-input";export default async function handleRadioButtonSelect({rangeButton:e,mileButton:a,rangeContainer:o,mileContainer:r,manageUser:s,componentId:n}){try{const n={byRange:{radio:e,container:o,show:async()=>{clearMsg({container:"form-msg"}),r.classList.add("w3-hide"),o.classList.remove("w3-hide"),await listenForFuelRangeInput({userClass:s,rangeContainer:o,rangeInputId:RANGE_INPUT_ID})}},byMile:{radio:a,container:r,show:async()=>{clearMsg({container:"form-msg"}),o.classList.add("w3-hide"),r.classList.remove("w3-hide"),await populateByMileForm({form:"per-mile-form",manageUser:s})}}};Object.values(n).forEach((e=>{addListener({elementOrId:e.radio,eventType:"click",handler:e.show,componentId:COMPONENT_ID})}));const t=await s.getMileageCharges();Array.isArray(t)&&t.length>0?(console.log("We should have mileage ranges."),await listenForFuelRangeInput({userClass:s,rangeContainer:o,rangeInputId:RANGE_INPUT_ID}),r.classList.add("w3-hide"),o.classList.remove("w3-hide"),e.checked=!0):(console.log("We should have per-mile charges."),await populateByMileForm({form:"per-mile-form",manageUser:s}),o.classList.add("w3-hide"),r.classList.remove("w3-hide"),a.checked=!0)}catch(e){console.log("Error in handleRadioButtonSelect: ",e)}}