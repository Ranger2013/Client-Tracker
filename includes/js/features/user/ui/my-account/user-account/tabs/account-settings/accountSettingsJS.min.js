// @ts-nocheck
import{disableEnableSubmitButton,getValidElement}from"../../../../../../../core/utils/dom/elements.js";import{createAdaptiveHandler}from"../../../../../../../core/utils/dom/eventUtils.js";import{formatPhone}from"../../../../../../../core/utils/dom/forms/validation.js";import{addListener}from"../../../../../../../core/utils/dom/listeners.js";import{clearMsg,safeDisplayMessage}from"../../../../../../../core/utils/dom/messages.js";const COMPONENT="User Account Page",DEBUG=!1,debugLog=(...e)=>{false};export default async function accountSettings({tabContentContainer:e,componentId:t,manageUser:a}){try{debugLog();const e=createAdaptiveHandler((async e=>{const{checkForDuplicate:t}=await import("../../../../../../../auth/services/duplicateCheck.js");return await t({value:e.target.value,column:"username",table:"users",shouldValidate:!0})}),"validation"),n=createAdaptiveHandler((async e=>{const{default:t}=await import("../../../../../../../auth/utils/emailValidation.js");return await t({evt:e,value:e.target.value,column:"email",table:"users",shouldValidate:!0})}),"validation"),o=createAdaptiveHandler((async e=>{const{default:t}=await import("../../../../../../../auth/utils/phoneValidation.js");return await t({evt:e,value:e.target.value,column:"phone",table:"users",shouldValidate:!0})}),"validation"),s={"click:username-label":async e=>await toggleAccountSection({evt:e,containerId:"username-input-container"}),"input:username":async t=>{handleDuplicateResponse({response:await e(t),target:t.target})},"focusin:username":e=>{clearMsg({container:`${e.target.id}-error`,hide:!0,input:e.target}),disableEnableSubmitButton("submit-button")},"click:password-label":async e=>await toggleAccountSection({evt:e,containerId:"password-input-container"}),"focusin:current-password":e=>{clearMsg({container:`${e.target.id}-error`,hide:!0,input:e.target}),disableEnableSubmitButton("submit-button")},"input:new-password":async e=>{const{checkPasswordStrength:t}=await import("../../../../../../../auth/utils/passwordValidation.js");await t({evt:e,strengthBadge:"strength-container",errorContainer:"new-password-error",submitButton:"submit-button"})},"input:confirm-password":async e=>{const{comparePasswords:t}=await import("../../../../../../../auth/utils/passwordValidation.js");await t({evt:e,passwordFieldId:"new-password",errorContainer:"confirm-password-error",submitButton:"submit-button"})},"click:reset-password":async e=>{e.preventDefault(),debugLog(e.target);const{default:t}=await import("./components/handleResetPassword.js");await t({evt:e,manageUser:a})},"click:company-label":async e=>await toggleAccountSection({evt:e,containerId:"company-input-container"}),"click:phone-label":async e=>await toggleAccountSection({evt:e,containerId:"phone-input-container"}),"input:phone":async e=>{handleDuplicateResponse({response:await o(e),target:e.target})},"click:email-label":async e=>await toggleAccountSection({evt:e,containerId:"email-input-container"}),"input:email":async e=>{handleDuplicateResponse({response:await n(e),target:e.target})},"submit:account-form":async e=>{e.preventDefault();const{default:t}=await import("./components/handleAccountSettingsFormSubmission.js");await t({evt:e,manageUser:a})}};addListener({elementOrId:"account-form",eventType:["click","submit","input","focusin"],handler:async e=>{try{const t=`${e.type}:${e.target.id}`;debugLog(),s[t]&&await s[t](e)}catch(e){const{AppError:t}=await import("../../../../../../../core/errors/models/AppError.js");t.handleError(e,{errorCode:t.Types.RENDER_ERROR,message:t.BaseMessages.system.render})}},componentId:t})}catch(e){const{AppError:t}=await import("../../../../../../../core/errors/models/AppError.js");t.handleError(e,{errorCode:t.Types.INITIALIZATION_ERROR,message:t.BaseMessages.system.initialization})}}async function toggleAccountSection({evt:e,containerId:t}){debugLog(e.target),debugLog();const a=getValidElement(t),n=a.querySelectorAll("input"),o=a.classList.contains("w3-hide");a.classList.toggle("w3-hide"),n.forEach((e=>{o&&clearMsg({container:`${e.id}-error`,hide:!0,input:e}),e.disabled=!o}));const s=getValidElement("submit-container"),i=document.querySelector('[id$="-input-container"]:not(.w3-hide)');s.classList.toggle("w3-hide",!i),disableEnableSubmitButton("submit-button"),clearFormMsgOnAllSectionsHidden()}function handleDuplicateResponse({response:e,target:t}){"duplicate"===e.status||"validation-error"===e.status?(safeDisplayMessage({elementId:`${t.id}-error`,message:e.msg,targetId:t}),disableEnableSubmitButton("submit-button")):(clearMsg({container:`${t.id}-error`,hide:!0,input:t}),disableEnableSubmitButton("submit-button"))}function clearFormMsgOnAllSectionsHidden(){const e=document.querySelectorAll('[id$="-input-container"]'),t=Array.from(e).every((e=>e.classList.contains("w3-hide")));getValidElement("submit-container");t&&clearMsg({container:"form-msg",hide:!0})}