// @ts-nocheck
import{addListener}from"../../../../../core/utils/dom/listeners.js";import ManageUser from"../../../models/ManageUser.js";import{setActiveTab}from"../components/tabs/tabManager.js";const COMPONENT_ID="dashboard",manageUser=new ManageUser,fm=document.getElementById("form-msg"),tabContentContainer=document.getElementById("tab-content-container"),tabs={reminders:{eleId:"manage-reminders-tab",action:()=>import("./reminders/displayRemindersPage.js")},notifications:{eleId:"manage-notifications-tab",action:()=>import("./notifications/displayNotificationsPage.js")},backupData:{eleId:"backup-data-tab",action:()=>import("./pages/displayBackupDataPage.js")},transferData:{eleId:"transfer-data-tab",action:()=>import("./transfer-data/displayTransferDataPage.js")},blockDates:{eleId:"block-dates-tab",action:()=>import("./block-dates/displayBlockDatesPage.js")}};async function setupPageTabListeners({tabs:e,fm:a,tabContentContainer:t}){let s=null;try{for(const[r,{eleId:n,action:o}]of Object.entries(e))addListener({elementOrId:n,eventType:"click",handler:async r=>{try{s&&(await s(),s=null),setActiveTab({evt:r,tabs:e,msgElement:a});const{default:n}=await o();s=await n({evt:r,messageContainer:a,tabContainer:t,manageUser:manageUser})}catch(e){const{AppError:a}=await import("../../../../../core/errors/models/AppError.min.js");a.handleError(e,{errorCode:a.Types.RENDER_ERROR,userMessage:a.BaseMessages.system.render})}},componentId:"dashboard"})}catch(e){const{AppError:a}=await import("../../../../../core/errors/models/AppError.min.js");a.handleError(e,{errorCode:a.Types.INITIALIZATION_ERROR,userMessage:a.BaseMessages.system.initialization})}}setupPageTabListeners({tabs:tabs,fm:fm,tabContentContainer:tabContentContainer});