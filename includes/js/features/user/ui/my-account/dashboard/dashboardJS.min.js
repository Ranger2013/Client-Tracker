// @ts-nocheck
import{addListener}from"../../../../../core/utils/dom/listeners.js";import ManageUser from"../../../models/ManageUser.js";import{setActiveTab}from"../components/tabs/tabManager.js";const COMPONENT="Dashboard",DEBUG=!1,debugLog=(...a)=>{false},COMPONENT_ID="dashboard",manageUser=new ManageUser({debug:!1});let cleanup=null;const FORM_MSG="form-msg",TAB_CONTENT_CONTAINER="tab-content-container";function initializeTabEventHandlers({tabContainer:a,manageUser:e,componentId:t}){const n={"click:manage-reminders-tab":async n=>{const{default:s}=await import("../../../../../core/layout/user/pages/dashboard/tabs/reminders/displayRemindersPage.js");await s({evt:n,tabContainer:a,manageUser:e,componentId:t})},"click:manage-notifications-tab":async n=>{const{default:s}=await import("../../../../../core/layout/user/pages/dashboard/tabs/notifications/displayNotificationsPage.js");await s({evt:n,tabContainer:a,manageUser:e,componentId:t})},"click:backup-data-tab":async n=>{const{default:s}=await import("../../../../../core/layout/user/pages/dashboard/tabs/backup-data/displayBackupDataPage.js");await s({evt:n,tabContainer:a,manageUser:e,componentId:t})},"click:transfer-data-tab":async n=>{const{default:s}=await import("../../../../../core/layout/user/pages/dashboard/tabs/transfer-data/displayTransferDataPage.js");await s({evt:n,tabContainer:a,manageUser:e,componentId:t})},"click:block-dates-tab":async n=>{const{default:s}=await import("../../../../../core/layout/user/pages/dashboard/tabs/block-dates/displayBlockDatesPage.js");await s({evt:n,tabContainer:a,manageUser:e,componentId:t})}};addListener({elementOrId:"tab-container",eventType:"click",handler:async a=>{cleanup&&(await cleanup(),cleanup=null);const e=`${a.type}:${a.target.id}`;debugLog(),n[e]&&(setActiveTab({evt:a,msgElement:FORM_MSG}),await n[e](a))},componentId:"dashboard"})}function initializeEventHandersForTabbedPages({tabContainer:a,manageUser:e,componentId:t}){const n={"click:backup-data-submit-button":async n=>{const{default:s}=await import("./components/backup-data/backupDataToServer.js");debugLog(),await s({tabContainer:a,manageUser:e,componentId:t})},"click:reminder-slider":async a=>{const n=a.target.previousElementSibling;a.preventDefault(),n.checked=!n.checked;const{default:s}=await import("./components/reminders/handleReminderSlider.js");await s({evt:{target:n},manageUser:e,componentId:t})},"click:notification-slider":async a=>{a.preventDefault();const n=a.target.previousElementSibling;n.checked=!n.checked;const{default:s}=await import("./components/notifications/handleNotificationSlider.js");await s({evt:{target:n},manageUser:e,componentId:t})},"click:transfer-data-button":async a=>{a.preventDefault();const{default:t}=await import("./components/transfer-data/transferData.js");await t({manageUser:e})}};addListener({elementOrId:a,eventType:["click","change"],handler:async a=>{a.preventDefault(),debugLog(a.target),debugLog(a.target.id);const e=`${a.type}:${a.target.id}`;n[e]&&await n[e](a)},componentId:"dashboard"})}!async function(){try{initializeTabEventHandlers({tabContainer:TAB_CONTENT_CONTAINER,manageUser:manageUser,componentId:"dashboard"}),initializeEventHandersForTabbedPages({tabContainer:TAB_CONTENT_CONTAINER,manageUser:manageUser,componentId:"dashboard"})}catch(a){const{AppError:e}=await import("../../../../../core/errors/models/AppError.js");e.handleError(a,{errorCode:e.Types.INITIALIZATION_ERROR,userMessage:e.BaseMessages.system.initialization})}}();