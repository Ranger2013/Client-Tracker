// @ts-nocheck
import IndexedDBOperations from"../../../../../../../core/database/IndexedDBOperations.js";import{buildEle}from"../../../../../../../core/utils/dom/elements.js";import{ucwords,underscoreToHyphen,underscoreToSpaces}from"../../../../../../../core/utils/string/stringUtils.js";export default async function buildObjectStoreRows({manageUser:e}){try{const t=await setupObjectStoreStructure({manageUser:e}),o=document.createDocumentFragment();for(const e in t){const r=buildStoreRow({storeList:t[e]});o.appendChild(r)}return o}catch(e){}}async function setupObjectStoreStructure({manageUser:e}){try{const t={},o=e.getStoreNames(),r=new IndexedDBOperations,s=await r.openDBPromise();for(const[e,a]of Object.entries(o)){if(!a.includes("backup_"))continue;const e=(await r.getAllStorePromise(s,a)).length>0,o=a.replace("backup_",""),i=ucwords(underscoreToSpaces(o),!1).replace(/ /g,""),n=ucwords(underscoreToSpaces(o)),c=`${underscoreToHyphen(o)}-indicator`;t[i]={indicatorId:c,storeName:a,message:`${n}`,hasData:e}}return t}catch(e){}}function buildStoreRow({storeList:e}){try{const{hasData:t,indicatorId:o,message:r,storeName:s}=e,a=t?`${r} is out of sync`:`${r} is in sync`,i=t?"/public/siteImages/indicator_blue_light.png":"/public/siteImages/indicator_green_light.webp",n=buildEle({type:"div",myClass:["w3-row","w3-border-bottom","w3-padding-top","w3-padding-bottom"]}),c=buildEle({type:"div",myClass:["w3-col","s11","w3-small"],text:a}),d=buildEle({type:"div",myClass:["w3-col","s1","w3-small"]}),l=buildEle({type:"img",attributes:{id:o,src:i,alt:"Indicator",title:"Indicator",width:"25px",height:"25px","data-hasdata":t,"data-store":`${s}`}});return d.appendChild(l),n.append(c,d),n}catch(e){}}