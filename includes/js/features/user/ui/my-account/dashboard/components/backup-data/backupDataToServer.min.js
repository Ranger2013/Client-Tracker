// @ts-nocheck
import IndexedDBOperations from"../../../../../../../core/database/IndexedDBOperations.js";import{dataAPI}from"../../../../../../../core/network/api/apiEndpoints.js";import{fetchData}from"../../../../../../../core/network/services/network.js";import setupBackupNotice from"../../../../../../../core/services/backup-notice/backupNotice.js";import openModal from"../../../../../../../core/services/modal/openModal.js";import{getValidElement}from"../../../../../../../core/utils/dom/elements.js";import{getValidationToken}from"../../../../../../../tracker.js";import handleClearingStore from"./handleClearingStore.js";const COMPONENT="Backup Data To Server",DEBUG=!1,debugLog=(...e)=>{false};export default async function backupDataToServer({tabContainer:e,manageUser:r}){try{debugLog(),debugLog();const t=(e=getValidElement(e)).querySelectorAll('img[data-hasdata="true"]');if(0===Array.from(t).map((e=>e.dataset.store)).length)return;const a=new IndexedDBOperations,o=await a.openDBPromise();let s="",i="";for(const e of t){const t=e.dataset.store,n=await a.getAllStorePromise(o,t);let d=!1;e.src="/public/siteImages/indicator_yellow_light.webp";try{const c=await fetchData({api:dataAPI.backup,data:n,token:getValidationToken()});debugLog();for(const{status:e,msg:r,data:n,email_status:g,email_msg:l}of c)if(debugLog(),debugLog(),debugLog(),debugLog(),debugLog(),"ok"===e||"no-update"===e)"success"===g?i+=l+"<br>":"error"===g?s+=l+"<br>":debugLog(),await handleClearingStore({indexed:a,db:o,response:c,store:t});else if("validation-error"===e){if(debugLog(),n)for(const e in n)debugLog(),s+=`${r}${n[e]}<br>`,d=!0}else"error"===e||"server-error"===e?(s+=r+"<br>",d=!0):(s+=`No status provided from server while processing the ${t} store.<br>`,d=!0);d?(e.src="/public/siteImages/indicator_red_light.png",e.dataset.hasdata="true"):(e.src="/public/siteImages/indicator_green_light.webp",e.dataset.hasdata="false"),await setupBackupNotice({errorEleID:"backup-data-notice",manageUser:r})}catch(r){e.src="/public/siteImages/indicator_red_light.png";const{AppError:t}=await import("../../../../../../../core/errors/models/AppError.js");t.handleError(r,{errorCode:t.Types.API_ERROR,userMessage:t.BaseMessages.system.database})}}if(debugLog(),""!==i){const e=getValidElement("backup-msg-success");e.innerHTML=i,e.classList.remove("w3-hide")}debugLog(),""!==s&&openModal({content:s,title:"Errors During Processing",configuration:["w3-padding","w3-round-large","w3-white","w3-margin","w3-margin-center"]}),shouldHideBackupDataButton()}catch(e){const{AppError:r}=await import("../../../../../../../core/errors/models/AppError.js");r.handleError(e,{errorCode:r.Types.BACKUP_ERROR,userMessage:r.BaseMessages.system.backup},!0)}}function shouldHideBackupDataButton(){if(0===document.querySelectorAll('img[data-hasdata="true"]').length){getValidElement("backup-data-button-container").classList.add("w3-hide")}}