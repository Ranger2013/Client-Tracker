// @ts-nocheck
import IndexedDBOperations from"../../../core/database/IndexedDBOperations.js";export default class ManageClientStats{constructor(){this.indexed=new IndexedDBOperations}async getClientStatsForUser(){try{const e=await this.indexed.openDBPromise(),s=await this.indexed.getAllStorePromise(e,this.indexed.stores.CLIENTLIST),r={};s.forEach((e=>{const s=e.horses.length;r[s]?r[s].num_clients++:r[s]={num_clients:1,num_horses:s}}));return Object.values(r).sort(((e,s)=>e.num_horses-s.num_horses))}catch(e){const{AppError:s}=await import("../../../core/errors/models/AppError.js");s.process(e,{errorCode:s.Types.PROCESSING_ERROR,message:s.BaseMessages.system.processing,displayTarget:"form-msg"},!0)}}async getClientsWithNthHorses(e){try{const s=await this.indexed.openDBPromise(),r=(await this.indexed.getAllStorePromise(s,this.indexed.stores.CLIENTLIST)).filter((s=>Number(s.horses.length)===Number(e)));return r.sort(((e,s)=>e.trim_cycle===s.trim_cycle?e.client_name.localeCompare(s.client_name):e.trim_cycle-s.trim_cycle)),r.length>0?r:null}catch(e){const{AppError:s}=await import("../../../core/errors/models/AppError.js");s.process(e,{errorCode:s.Types.PROCESSING_ERROR,message:s.BaseMessages.system.processing,displayTarget:"form-msg"},!0)}}}