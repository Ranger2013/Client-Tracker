// @ts-nocheck
import{disableEnableSubmitButton,updateSelectOptions}from"../../../../../core/utils/dom/elements";import{safeDisplayMessage}from"../../../../../core/utils/dom/messages";export default async function handleEditHorseFormSubmission({evt:e,cID:s,primaryKey:r,horseContainer:t,manageClient:a,componentId:o}){try{if("delete"===e.submitter.name)return void await deleteClientHorse({evt:e,manageClient:a,cID:s,primaryKey:r,horseContainer:t,componentId:o});const i=Object.fromEntries(new FormData(e.target));if(""===i.horse_name)return safeDisplayMessage({elementId:`${e.target.elements.horse_name.id}-error`,message:"Horse name cannot be empty.",targetId:e.target.elements.horse_name.id}),void disableEnableSubmitButton("submit-button");if(await a.editClientHorse({cID:s,userData:i})){safeDisplayMessage({elementId:"form-msg",message:`${i.horse_name} has been successfully updated.`,isSuccess:!0});const e=await a.getClientHorses({primaryKey:r});document.getElementById("horse-list");return updateSelectOptions("horse-list",e,{valueMapper:e=>e.hID,textMapper:e=>e.horse_name,datasetMapper:e=>({"data-service-type":e.service_type,"data-trim-cycle":e.trim_cycle})}),void(t.innerHTML="")}safeDisplayMessage({elementId:"form-msg",message:"An error occurred while updating the horse. Please try again."})}catch(e){const{AppError:s}=await import("../../../../../core/errors/models/AppError.js");s.handleError(e,{errorCode:s.Types.FORM_SUBMISSION_ERROR,userMessage:s.BaseMessages.forms.submissionFailed,displayTarget:"form-msg"})}}async function deleteClientHorse({evt:e,manageClient:s,cID:r,primaryKey:t,horseContainer:a,componentId:o}){try{if(!confirm("Are you sure you want to delete this horse?"))return;const o=Object.fromEntries(new FormData(e.target));if(!await s.deleteClientHorse({hID:o.hID,cID:r}))return void safeDisplayMessage({elementId:"form-msg",message:`An error occurred while trying to delete ${o.horse_name}. Please try again.`});const i=await s.getClientHorses({primaryKey:t});updateSelectOptions("horse-list",i,{valueMapper:e=>e.hID,textMapper:e=>e.horse_name,datasetMapper:e=>({"data-service-type":e.type_service,"data-trim-cycle":e.trim_cycle})}),a.innerHTML="",safeDisplayMessage({elementId:"form-msg",message:`${o.horse_name} has been successfully deleted.`,isSuccess:!0})}catch(e){const{AppError:s}=await import("../../../../../core/errors/models/AppError.js");s.process(e,{errorCode:s.Types.FORM_SUBMISSION_ERROR,userMessage:s.BaseMessages.forms.submissionFailed,displayTarget:"form-msg"},!0)}}