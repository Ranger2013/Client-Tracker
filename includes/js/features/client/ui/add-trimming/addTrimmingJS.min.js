// @ts-nocheck
import setupClientAnchorListener from"../../../../core/navigation/components/setupClientAnchorListener.js";import checkAppointment from"../../../../core/services/appointment-block/checkAppointment.js";import{disableEnableSubmitButton}from"../../../../core/utils/dom/elements.js";import{addListener}from"../../../../core/utils/dom/listeners.js";import{clearMsg,safeDisplayMessage}from"../../../../core/utils/dom/messages.js";import buildListOfHorsesSection from"./components/buildListOfHorsesSection.js";import calculateTotalCost from"./components/calculateTotalCost.js";import{handleShowingAccessoriesSelectBox,handleShowingCostChangeInput,updateCostChangeInput,updateServiceCostSelectedIndex}from"./handlers/costHandlers.js";import handleAddTrimmingFormSubmission from"./handlers/formSubmission.js";const COMPONENT="Add Trimming JS",DEBUG=!1,debugLog=(...e)=>{false};export const prevOptions=new Map;export default async function addTrimming({cID:e,primaryKey:t,mainContainer:r,manageClient:n,manageUser:o,componentId:s}){try{setupClientAnchorListener({manageClient:n,manageUser:o,componentId:s}),debugLog();const a=await n.getClientInfo({primaryKey:t});document.getElementById("add-horse-link")||checkAppointment({trimDate:"next-trim-date",appBlock:"appointment-block",projAppBlock:"projected-appointment-block",clientInfo:a,manageClient:n,manageUser:o});const i={"input:number-horses":async e=>{numberOfHorsesServiced({evt:e,primaryKey:t,manageClient:n,manageUser:o})},"focusin:number-horses":e=>clearMsg({container:`${e.target.id}-error`,hide:!0,input:e.target}),"change:next-trim-date":e=>checkAppointment({trimDate:"next-trim-date",appBlock:"appointment-block",projAppBlock:"projected-appointment-block",clientInfo:a,manageClient:n,manageUser:o}),"change:mileage":async e=>await disableMileageCharges({evt:e}),"submit:trimming-form":o=>{o.preventDefault(),handleAddTrimmingFormSubmission({evt:o,cID:e,primaryKey:t,mainContainer:r,manageClient:n})},"click:add-horse-link":async s=>{s.preventDefault(),debugLog(s.target);const{default:a}=await import("../../../../core/navigation/services/selectClientMenuPage.js");a({evt:s,page:"add-horse",cID:e,primaryKey:t,manageClient:n,manageUser:o,mainContainer:r})}},c={"horse-list-":{events:["change"],handler:async(e,r)=>{debugLog(e.target.value),await updateAllHorseListSelectElements(e),await changeServiceCostToMatchHorseService({evt:e,primaryKey:t,manageClient:n})}},"service-cost-":{events:["change"],handler:async(e,t)=>{debugLog(e.target.value),await handleShowingAccessoriesSelectBox({evt:e,index:t}),await updateCostChangeInput({evt:e,index:t}),calculateTotalCost()}},"checkbox-cost-":{events:["change"],handler:async(e,t)=>{debugLog(e.target.checked),await handleShowingCostChangeInput({evt:e,index:t})}},"cost-change-":{events:["input"],handler:async(e,t)=>{debugLog(e.target.value),await updateServiceCostSelectedIndex({evt:e,index:t})}},"accessories-":{events:["change"],handler:async(e,t)=>await calculateTotalCost()}};addListener({elementOrId:"card",eventType:["input","change","submit","focusin","click"],handler:e=>{const t=`${e.type}:${e.target.id}`;if(i[t])return debugLog(e.target),void i[t](e);const r=e.target.id;for(const t in c)if(r.startsWith(t)){const n=c[t];if(n.events.includes(e.type)){const t=r.split(/-/g).pop();n.handler(e,t)}return}},componentId:s})}catch(e){debugLog();const{AppError:t}=await import("../../../../core/errors/models/AppError.js");t.handleError(e,{errorCode:t.Types.INITIALIZATION_ERROR,userMessage:t.BaseMessages.system.initialization})}}async function numberOfHorsesServiced({evt:e,primaryKey:t,manageClient:r,manageUser:n}){try{if("0"===e.target.value||""===e.target.value)return safeDisplayMessage({elementId:`${e.target.id}-error`,message:"Please enter the number of horses serviced.",targetId:e.target}),void disableEnableSubmitButton("submit-button");await buildListOfHorsesSection({evt:e,horseListContainer:"number-horse-container",primaryKey:t,manageClient:r,manageUser:n})}catch(e){disableEnableSubmitButton("submit-button");const{AppError:t}=await import("../../../../core/errors/models/AppError.js");t.handleError(e,{errorCode:t.Types.RENDER_ERROR,userMessage:t.BaseMessages.system.render,displayTarget:"number-horses-error"})}}async function disableMileageCharges({evt:e}){try{debugLog(e.target);const t=e.target,r=document.getElementById("mileage-charges");document.getElementById("fuel-cost-display").classList.toggle("w3-hide",t.checked),r.disabled=t.checked,await calculateTotalCost()}catch(e){const{AppError:t}=await import("../../../../core/errors/models/AppError.js");t.handleError(e,{errorCode:t.Types.INITIALIZATION_ERROR,userMessage:"We encountered an error trying to disable mileage charges."})}}async function updateAllHorseListSelectElements(e){try{if(0===prevOptions.size){const e=document.getElementById("trimming-form").querySelectorAll('select[id^="horse-list-"]');for(const t of e){const e=t.options[t.selectedIndex];prevOptions.set(t.id,e)}}debugLog();const t=e.target,r=t.options[t.selectedIndex];let n=document.querySelectorAll('select[id^="horse-list-"]');for(const e of n)if(e.id!==t.id){if(prevOptions.has(t.id)){let r=prevOptions.get(t.id),n=document.createElement("option");n.text=r.text,n.value=r.value,e.add(n)}for(let t=0;t<e.options.length;t++)if(e.options[t].value===r.value){e.remove(t);break}}prevOptions.set(t.id,r),debugLog()}catch(e){const{AppError:t}=await import("../../../../core/errors/models/AppError.js");t.handleError(e,{errorCode:t.Types.INITIALIZATION_ERROR,userMessage:"We encountered an error trying to update the horse list select elements."})}}async function changeServiceCostToMatchHorseService({evt:e,primaryKey:t,manageClient:r}){try{const n={half_set:"front_",full_set:"full_",trim:"trim"},o=e.target.value.split(":")[0],s=e.target.id.split(/-/g).pop(),a=document.getElementById(`service-cost-${s}`),i=a.options[a.selectedIndex].value,c=(await r.getClientHorses({primaryKey:t})).find((e=>e.hID.toString()===o));if(!c)return;const l=n[c.service_type];if(console.log("selectedHorse.service_type: ",c.service_type),console.log("Mapped Service: ",l),!i.includes(l)){const e=a.options;let t=!1;for(let r=0;r<e.length;r++)if(console.log("options value: ",e[r].value),e[r].value.includes(l)){a.selectedIndex=r,t=!0;const e=new Event("change",{bubbles:!0,cancelable:!0});Object.defineProperty(e,"target",{value:a}),a.dispatchEvent(e);break}if(!t){a.selectedIndex=0;const e=new Event("change",{bubbles:!0,cancelable:!0});Object.defineProperty(e,"target",{value:a}),a.dispatchEvent(e)}}}catch(e){const{AppError:t}=await import("../../../../core/errors/models/AppError.js");t.handleError(e,{errorCode:t.Types.INITIALIZATION_ERROR,userMessage:"We encountered an error trying to update the service cost to match the horse service."})}}