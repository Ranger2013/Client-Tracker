// @ts-nocheck
import{disableEnableSubmitButton}from"../../../../../core/utils/dom/elements.js";import{clearMsg,safeDisplayMessage}from"../../../../../core/utils/dom/messages.js";import{top}from"../../../../../core/utils/window/scroll.js";import ManageTrimming from"../../../models/ManageTrimming.js";const COMPONENT="Form Submission",DEBUG=!0,debugLog=(...r)=>{console.log(`[${COMPONENT}]`,...r)};export default async function handleAddTrimmingFormSubmission({evt:r,cID:e,primaryKey:s,mainContainer:o,manageClient:t}){try{clearMsg({container:"form-msg"});const o=processFormData(new FormData(r.target)),a=await validateTrimmingForm({userData:o});debugLog("Validation:",a);const{status:n,message:i,target:m,targetError:u}=a;if(!n)return safeDisplayMessage({elementId:"form-msg",message:"Please fix the following errors:"}),safeDisplayMessage({elementId:u,message:i,targetId:m}),top(),void disableEnableSubmitButton("submit-button");const g=await formSubmission({cID:e,primaryKey:s,userData:o,manageClient:t});debugLog("Form Submission:",g)}catch(r){const{AppError:e}=await import("../../../../../core/errors/models/AppError.js");e.handleError(r,{errorCode:e.Types.FORM_SUBMISSION_ERROR,userMessage:e.BaseMessages.forms.submissionFailed,displayTarget:"form-msg"})}}function processFormData(r){try{const e=Array.from(r.entries());debugLog("Form Entries:",e);const s=e.reduce(((r,[e,s])=>(debugLog("Processing:",{key:e,value:s}),{...r,...processFormField(e,s,r)})),{});return debugLog("Processed Data:",s),s}catch(r){throw console.error("Error processing form data:",r),r}}function processFormField(r,e,s){if("number-horses"===r)return{number_horses:e};if(r.startsWith("horse_list_"))return{[r]:e??"null"};if(r.startsWith("accessories_")){const o=s[r]??[];return e.trim()?{[r]:[...o,e]}:{[r]:o}}return e.trim()||"0"===e?{[r]:e}:{}}async function validateTrimmingForm({userData:r}){try{return r.number_horses&&"0"!==r.number_horses&&""!==r.number_horses?{status:!0}:{status:!1,message:"Please enter the number of horses.",targetError:"number-horses-error",target:"number-horses"}}catch(r){throw r}}async function formSubmission({cID:r,primaryKey:e,userData:s,manageClient:o}){try{const e=new ManageTrimming,o=await e.handleAddTrimmingSession({cID:r,userData:s});debugLog("Form Submission:",o)}catch(r){throw r}}