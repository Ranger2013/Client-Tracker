// @ts-nocheck
import{buildGenericSelectOptions}from"../../../../../core/utils/dom/elements.js";import buildServiceBlocks from"./buildServiceBlocks.js";const COMPONENT="AutoFillHorseList",DEBUG=!1,debugLog=(...e)=>{false},optionsCache=new Map;export default async function autoFillHorseList({totalHorses:e,optionsConfig:r}){try{debugLog();const o=document.createDocumentFragment(),s=(e,r)=>{debugLog();const o=JSON.stringify(e);return optionsCache.has(o)||optionsCache.set(o,buildGenericSelectOptions(e)),optionsCache.get(o)},t={horseList:s(r.horseListOptionsConfig,"horseList"),farrierPrices:s(r.farrierPricesOptionsConfig,"farrierPrices"),accessories:s(r.accessoryOptionsConfig,"accessories")};debugLog();return(await Promise.all(Array.from({length:e},(async(e,r)=>{const o=r+1,s=await buildServiceBlocks({iterator:o,horseListOptions:t.horseList,farrierPricesOptions:t.farrierPrices,accessoryOptions:t.accessories});debugLog();const i=s.querySelector(`#horse-list-${o}`),c=s.querySelector(`#services-container-${o}`),n=s.querySelector(`#checkbox-container-${o}`);return debugLog(),i.selectedIndex=r,[c,n].forEach((e=>e?.classList.remove("w3-hide"))),s})))).forEach((e=>o.appendChild(e))),Array.from(o.children)}catch(e){const{AppError:r}=await import("../../../../../core/errors/models/AppError.js");return r.handleError(e,{errorCode:r.Types.INITIALIZATION_ERROR,userMessage:"We encountered an error auto-filling the horse list.",displayTarget:"form-msg"}),document.getElementById("submit-button").disabled=!0,optionsCache.clear(),[]}}window.addEventListener("unload",(()=>optionsCache.clear()));