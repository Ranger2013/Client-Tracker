// @ts-nocheck
import{getValidElement}from"../../../../core/utils/dom/elements";import{createDebouncedHandler,getOptimalDelay}from"../../../../core/utils/dom/eventUtils.js";import filterClientList from"../../../../core/utils/dom/forms/filterClientSelectElement";import{addListener}from"../../../../core/utils/dom/listeners";import{safeDisplayMessage}from"../../../../core/utils/dom/messages";import showClientSelection from"./components/showClientSelection";const COMPONENT="Delete Duplicate Client JS",DEBUG=!1,debugLog=(...e)=>{false};let currentDuplicateClients=[];export default async function deleteDuplicateClient({mainContainer:e,duplicateClients:t,manageClient:n,manageUser:i,componentId:l}){try{currentDuplicateClients=[...t],initializeEventHandlers({mainContainer:e,manageClient:n,manageUser:i,componentId:l})}catch(e){const{AppError:t}=await import("../../../../core/errors/models/AppError.min.js");t.handleError(e,{errorCode:t.Types.INITIALIZATION_ERROR,userMessage:"An error occurred while initializing the Delete Duplicate Client page."})}}function initializeEventHandlers({mainContainer:e,manageClient:t,manageUser:n,componentId:i}){const l=createDebouncedHandler((async e=>{await filterClientList({evt:e,selectElement:"client-list"})}),getOptimalDelay("search")),a={"input:filter-client-list":e=>{safeDisplayMessage({elementId:"form-msg",message:"Filtering Client List...",isSuccess:!0,color:"w3-text-blue"}),l(e)},"change:client-list":e=>showClientSelection({evt:e,duplicateClients:currentDuplicateClients,manageClient:t,manageUser:n})},r={"delete-button":{events:["click"],handler:async(e,i)=>{const{default:l}=await import("./components/deleteTheDuplicateClient.js");await l({evt:e,duplicateClients:currentDuplicateClients,manageClient:t,manageUser:n,index:i})}}};addListener({elementOrId:"card",eventType:["input","change","click"],handler:async e=>{const t=`${e.type}:${e.target.id}`;if(debugLog(),a[t])return void a[t](e);const n=e.target.id;debugLog();for(const t in r)if(debugLog(),n.startsWith(t)){const i=r[t];if(debugLog(),i.events.includes(e.type)){const t=n.split(/-/g).pop();i.handler(e,t)}return}},componentId:i})}