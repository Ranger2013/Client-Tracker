// @ts-nocheck
import{dropDownClientMenu}from"../../../../core/navigation/services/dropDownClientMenu";import{createDebouncedHandler,getOptimalDelay}from"../../../../core/utils/dom/eventUtils";import{addListener,removeListeners}from"../../../../core/utils/dom/listeners";import{safeDisplayMessage}from"../../../../core/utils/dom/messages";import{handleSearch}from"./components/searchHandlers";const COMPONENT_ID="schedule-list";export default async function appointmentList({active:e,cID:r,primaryKey:t,manageClient:a,manageUser:n,mainContainer:s}){try{try{await initializeSearchHandlers({manageUser:n})}catch(e){const{AppError:r}=await import("../../../../core/errors/models/AppError.js");r.handleError(e,{errorCode:r.Types.INITIALIZATION_ERROR,userMessage:r.BaseMessages.system.initialization})}return initializeMenuHandlers(),()=>removeListeners(COMPONENT_ID)}catch(e){const{AppError:r}=await import("../../../../core/errors/models/AppError.js");r.handleError(e,{errorCode:r.Types.INITIALIZATION_ERROR,userMessage:r.BaseMessages.system.initialization})}}async function initializeSearchHandlers({manageUser:e}){try{const r=document.getElementById("filter"),t=document.getElementById("search");if(!r||!t)throw new Error("Search elements not found");const a=createDebouncedHandler((r=>handleSearch({evt:r,manageUser:e})),getOptimalDelay("search"));addListener({elementOrId:t,eventType:"input",handler:e=>{e.target.value&&safeDisplayMessage({elementId:"page-msg",message:"Searching...",isSuccess:!0,color:"w3-text-blue"}),a(e)},componentId:COMPONENT_ID}),addListener({elementOrId:r,eventType:"change",handler:e=>{t.value&&safeDisplayMessage({elementId:"page-msg",message:"Searching...",isSuccess:!0,color:"w3-text-blue"}),a({target:{value:t.value}})},componentId:COMPONENT_ID})}catch(e){const{AppError:r}=await import("../../../../core/errors/models/AppError.js");r.process(e,{errorCode:r.Types.INITIALIZATION_ERROR,userMessage:"Search functionality not available at the moment.",displayTarget:"page-msg"},!0)}}function initializeMenuHandlers(){const e=document.getElementById("appointment-list");e&&addListener({elementOrId:e,eventType:"click",handler:async e=>{try{if(e.target.closest('[data-action="manage-client"]'))return void await dropDownClientMenu(e);if(!e.target.closest(".w3-dropdown-content")){document.querySelectorAll(".w3-dropdown-content.w3-show").forEach((e=>e.classList.remove("w3-show")))}}catch(e){const{AppError:r}=await import("../../../../core/errors/models/AppError.js");r.handleError(e,{errorCode:r.Types.INITIALIZATION_ERROR,userMessage:"Manage client menu not available at the moment."})}},componentId:COMPONENT_ID})}