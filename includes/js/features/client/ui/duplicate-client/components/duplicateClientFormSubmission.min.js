// @ts-nocheck
import{getValidElement}from"../../../../../core/utils/dom/elements.min.js";import{trimCycleRange}from"../../../../../core/utils/dom/forms/trimCycleConfigurations.min.js";import{clearMsg,safeDisplayMessage}from"../../../../../core/utils/dom/messages.min.js";import{cleanUserOutput}from"../../../../../core/utils/string/stringUtils.min.js";const COMPONENT="Duplicate Client Form Submission",DEBUG=!1,debugLog=(...e)=>{false};export default async function duplicateClientFormSubmission({evt:e,manageClient:s,manageUser:t}){try{clearMsg({container:"form-msg"});const t=Object.fromEntries(new FormData(e.target));if(!trimCycleRange.includes(parseInt(t?.trim_cycle)))return safeDisplayMessage({elementId:"form-msg",message:"Please fix the following errors."}),void safeDisplayMessage({elementId:"trim-cycle-error",message:"Please select a trim/shoeing cycle.",targetId:"trim-cycle"});const r=await s.addDuplicateClient(t),i=t?.select_client.split(":")[1],a=getValidElement("client-container");r?(safeDisplayMessage({elementId:"form-msg",message:`The client "<span class="w3-underline">${cleanUserOutput(i)}</span>" has been successfully duplicated.`,isSuccess:!0}),a.innerHTML="",e.target.reset()):safeDisplayMessage({elementId:"form-msg",message:`Unable to duplicate ${cleanUserOutput(i)} at this time.`})}catch(e){const{AppError:s}=await import("../../../../../core/errors/models/AppError.min.js");s.process(e,{errorCode:s.Types.FORM_SUBMISSION_ERROR,userMessage:"Unable to process the form submission at this time.",displayTarget:"form-msg"},!0)}}