// @ts-nocheck
import checkAppointment from"../../../../core/services/appointment-block/checkAppointment.min.js";import{getValidElement}from"../../../../core/utils/dom/elements.min.js";import{createDebouncedHandler,getOptimalDelay}from"../../../../core/utils/dom/eventUtils.min.js";import filterClientList from"../../../../core/utils/dom/forms/filterClientSelectElement.min.js";import{addListener}from"../../../../core/utils/dom/listeners.min.js";import{clearMsg,safeDisplayMessage}from"../../../../core/utils/dom/messages.min.js";import buildAndShowClientForm from"./components/buildAndShowClientForm.min.js";import duplicateClientFormSubmission from"./components/duplicateClientFormSubmission.min.js";const COMPONENT="Duplicate Client",DEBUG=!1,debugLog=(...e)=>{false};export default async function duplicateClient({mainContainer:e,manageClient:t,manageUser:i,componentId:n}){try{const e=createDebouncedHandler((e=>{filterClientList({evt:e,selectElement:"select-client"})}),getOptimalDelay("search")),r={"input:filter-client":async t=>{t.target.value&&safeDisplayMessage({elementId:"form-msg",message:"Filtering Client List...",isSuccess:!0,color:"w3-text-blue"}),e(t)},"change:select-client":async e=>await buildAndShowClientForm({evt:e,manageClient:t,manageUser:i}),"focusin:trim-cycle":e=>clearMsg({container:"trim-cycle-error",hide:!0,input:"trim-cycle"}),"change:next-trim-date":e=>{checkAppointment({trimDate:"next-trim-date",trimCycle:"trim-cycle",appBlock:"appointment-block",projAppBlock:"projected-appointment-block",manageClient:t,manageUser:i})},"submit:duplicate-form":async e=>{e.preventDefault(),await duplicateClientFormSubmission({evt:e,manageClient:t,manageUser:i})}};addListener({elementOrId:"card",eventType:["input","change","submit","focusin"],handler:e=>{const t=`${e.type}:${e.target.id}`;debugLog(),r[t]&&r[t](e)},componentId:n})}catch(e){const{AppError:t}=await import("../../../../core/errors/models/AppError.js");t.handleError(e,{errorCode:t.Types.INITIALIZATION_ERROR,userMessage:t.BaseMessages.system.initialization})}}