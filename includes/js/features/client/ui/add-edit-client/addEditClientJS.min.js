// @ts-nocheck
import checkAppointment from"../../../../core/services/appointment-block/checkAppointment.js";import{disableEnableSubmitButton}from"../../../../core/utils/dom/elements.js";import{createDebouncedHandler,getOptimalDelay}from"../../../../core/utils/dom/eventUtils.js";import getAllFormIdElements from"../../../../core/utils/dom/forms/getAllFormIDElements.js";import{addListener,removeListeners}from"../../../../core/utils/dom/listeners.js";import{clearMsg,safeDisplayMessage}from"../../../../core/utils/dom/messages.js";import{hyphenToSpaces,hyphenToUnderscore,ucwords}from"../../../../core/utils/string/stringUtils.js";import{top}from"../../../../core/utils/window/scroll.js";const COMPONENT_ID="add-edit-client",FORM_FIELDS=["client-name","street","city","state","zip","distance","phone","email","trim-cycle"];export default async function addEditClient({cID:e,primaryKey:t,clientInfo:r=null,manageClient:n,manageUser:a}){try{const s=getAllFormIdElements("client-form"),i=document.querySelector('[data-component="client-navigation"]');if(i){const{default:e}=await import("../../../../core/navigation/services/selectPage.js");addListener({elementOrId:i,eventType:"click",handler:t=>{t.preventDefault(),e({evt:t,page:"singleClient",cID:i.dataset.clientId,primaryKey:i.dataset.primaryKey})},componentId:COMPONENT_ID})}return initializeAppointmentCheck({elements:s,clientInfo:r,manageClient:n,manageUser:a}),initializeForm({cID:e,primaryKey:t,clientInfo:r,manageClient:n,manageUser:a}),()=>removeListeners(COMPONENT_ID)}catch(e){console.log("In addEditClientJS.js: ",e);const{AppError:t}=await import("../../../../core/errors/models/AppError.js");t.handleError(e,{errorCode:t.Types.INITIALIZATION_ERROR,userMessage:t.BaseMessages.system.initialization});const r=document.getElementById("submit-button");r&&(r.disabled=!0)}}function initializeAppointmentCheck({elements:e,clientInfo:t,manageClient:r,manageUser:n}){const a={trimDate:e["trim-date"],trimCycle:e["trim-cycle"],appBlock:"appointment-block",projAppBlock:"projected-appointment-block",clientInfo:t,manageClient:r,manageUser:n};checkAppointment(a),addListener({elementOrId:"trim-date",eventType:"change",handler:()=>{checkAppointment(a)},componentId:COMPONENT_ID})}function initializeForm({cID:e,primaryKey:t,clientInfo:r,manageClient:n,manageUser:a}){const s=document.getElementById("client-form");s&&(addListener({elementOrId:s,eventType:"input",handler:async a=>{const s=a.target;if(FORM_FIELDS.includes(s.id)){createDebouncedHandler((()=>handleFormValidation({evt:a,field:s.id,cID:e,primaryKey:t,clientInfo:r,manageClient:n})),getOptimalDelay("validation"))()}},componentId:COMPONENT_ID}),addListener({elementOrId:s,eventType:"submit",handler:s=>{s.preventDefault(),handleFormSubmission({evt:s,cID:e,primaryKey:t,clientInfo:r,manageClient:n,manageUser:a})},componentId:COMPONENT_ID}))}async function handleFormValidation({evt:e,field:t,cID:r,primaryKey:n,clientInfo:a,manageClient:s}){try{const a=await checkClientFormValidity({evt:e,cID:r,primaryKey:n,manageClient:s}),i=`${t}-error`;a?(safeDisplayMessage({elementId:i,message:a,targetId:t}),addListener({elementOrId:t,eventType:"focus",handler:()=>clearMsg({container:i,hide:!0,input:t}),componentId:COMPONENT_ID})):clearMsg({container:i,hide:!0,input:t}),await disableEnableSubmitButton("submit-button")}catch(e){const{AppError:t}=await import("../../../../core/errors/models/AppError.js");t.process(e,{errorCode:t.Types.FORM_VALIDATION_ERROR,userMessage:t.BaseMessages.forms.validationFailed,displayTarget:"form-msg"},!0),document.getElementById("submit-button").disabled=!0}}async function checkClientFormValidity({evt:e,cID:t,primaryKey:r,manageClient:n}){try{if("client-form"===e.target.id)return!0;const a=`validate${ucwords(hyphenToSpaces(e.target.id)).replace(" ","")}`,s=(await import(`./components/${a}.js`)).default;if("function"==typeof s)return s({evt:e,cID:t,primaryKey:r,manageClient:n});throw new Error("Invalid function name.")}catch(e){const{AppError:t}=await import("../../../../core/errors/models/AppError.js");t.process(e,{errorCode:t.Types.FORM_VALIDATION_ERROR,userMessage:t.BaseMessages.forms.validationFailed,displayTarget:"form-msg"},!0)}}async function validateAllFormFields({userData:e,cID:t,primaryKey:r,manageClient:n}){let a=!1;for(const s of FORM_FIELDS){e[hyphenToUnderscore(s)];const i=document.getElementById(s);if(!i)continue;const o={target:i},l=await checkClientFormValidity({evt:o,cID:t,primaryKey:r,manageClient:n});l&&(safeDisplayMessage({elementId:`${s}-error`,message:l,targetId:s}),a=!0)}return!a}async function handleFormSubmission({evt:e,cID:t,primaryKey:r,clientInfo:n,manageClient:a,manageUser:s}){try{const i=Object.fromEntries(new FormData(e.target)),[o,l]=await Promise.all([validateAllFormFields({userData:i,cID:t,primaryKey:r,manageClient:a}),handleTrimCycleCheck(i)]);if(!o)return top(),safeDisplayMessage({elementId:"form-msg",message:"Please correct all errors before submitting."}),void disableEnableSubmitButton("submit-button");if(!l)return;const{default:c}=await import("./components/addEditFormSubmission.js"),m=await c({evt:e,cID:t,primaryKey:r,manageClient:a}),{status:d,message:p,delete:u}=handleIDBResponse(m);if("success"===d)return top(),safeDisplayMessage({elementId:"form-msg",message:p,isSuccess:!0}),u?void e.target.remove():(console.log("In addEditClients: After new client added: ",n),checkAppointment({trimDate:"trim-date",trimCycle:"trim-cycle",appBlock:"appointment-block",projAppBlock:"projected-appointment-block",clientInfo:n,manageClient:a,manageUser:s}),void e.target.reset())}catch(e){console.log("In addEditClientJS.js: ",e),top();const{AppError:t}=await import("../../../../core/errors/models/AppError.js");t.handleError(e,{errorCode:t.Types.FORM_SUBMISSION_ERROR,userMessage:t.BaseMessages.forms.submissionFailed,displayTarget:"form-msg"})}}async function handleTrimCycleCheck(e){try{return"null"!==e.trim_cycle||(top(),safeDisplayMessage({elementId:"trim-cycle-error",message:"Please select a trim cycle",targetId:"trim-cycle"}),addListener({elementOrId:"trim-cycle",eventType:"focus",handler:()=>clearMsg({container:"trim-cycle-error",hide:!0,input:"trim-cycle"}),componentId:COMPONENT_ID}),disableEnableSubmitButton("submit-button"),!1)}catch(e){const{AppError:t}=await import("../../../../core/errors/models/AppError.js");t.process(e,{errorCode:t.Types.FORM_VALIDATION_ERROR,userMessage:t.BaseMessages.forms.validationFailed,displayTarget:"form-msg"},!0)}}function handleIDBResponse(e){try{if(!e||!e.status)throw new Error("No response data found.");if("success"===e.status&&"delete"===e.type)return{status:"success",message:e.msg,delete:!0};if("success"===e.status)return{status:"success",message:e.msg,delete:!1};throw new Error("Unknown error occurred during form submission.")}catch(e){throw e}}