// @ts-nocheck
import checkAppointment from"../../../../core/services/appointment-block/checkAppointment.js";import{disableEnableSubmitButton}from"../../../../core/utils/dom/elements.js";import{createDebouncedHandler,getOptimalDelay}from"../../../../core/utils/dom/eventUtils.js";import getAllFormIdElements from"../../../../core/utils/dom/forms/getAllFormIDElements.js";import{addListener,removeListeners}from"../../../../core/utils/dom/listeners.js";import{clearMsg,safeDisplayMessage}from"../../../../core/utils/dom/messages.js";import{hyphenToSpaces,hyphenToUnderscore,ucwords}from"../../../../core/utils/string/stringUtils.js";import{top}from"../../../../core/utils/window/scroll.js";const FORM_FIELDS=["client-name","street","city","state","zip","distance","phone","email","trim-cycle"];export default async function addEditClient({cID:e,primaryKey:t,clientInfo:r,manageClient:n,manageUser:a,componentId:o}){try{const s=getAllFormIdElements("client-form");if(document.querySelector('[data-component="client-navigation"]')){const{default:e}=await import("../../../../core/navigation/components/setupClientAnchorListener.js");await e({manageClient:n,manageUser:a,componentId:o})}initializeAppointmentCheck({elements:s,clientInfo:r,manageClient:n,manageUser:a,componentId:o}),initializeForm({cID:e,primaryKey:t,clientInfo:r,manageClient:n,manageUser:a,componentId:o})}catch(e){const{AppError:t}=await import("../../../../core/errors/models/AppError.js");t.handleError(e,{errorCode:t.Types.INITIALIZATION_ERROR,userMessage:t.BaseMessages.system.initialization});const r=document.getElementById("submit-button");r&&(r.disabled=!0)}}function initializeAppointmentCheck({elements:e,clientInfo:t,manageClient:r,manageUser:n,componentId:a}){const o={trimDate:e["trim-date"],trimCycle:e["trim-cycle"],appBlock:"appointment-block",projAppBlock:"projected-appointment-block",clientInfo:t,manageClient:r,manageUser:n};checkAppointment(o),addListener({elementOrId:"trim-date",eventType:"change",handler:()=>{checkAppointment(o)},componentId:a})}function initializeForm({cID:e,primaryKey:t,clientInfo:r,manageClient:n,manageUser:a,componentId:o}){const s=document.getElementById("client-form");s&&(addListener({elementOrId:s,eventType:"input",handler:async a=>{const s=a.target;if(FORM_FIELDS.includes(s.id)){createDebouncedHandler((()=>handleFormValidation({evt:a,field:s.id,cID:e,primaryKey:t,clientInfo:r,manageClient:n,componentId:o})),getOptimalDelay("validation"))()}},componentId:o}),addListener({elementOrId:s,eventType:"submit",handler:o=>{o.preventDefault(),handleFormSubmission({evt:o,cID:e,primaryKey:t,clientInfo:r,manageClient:n,manageUser:a})},componentId:o}))}async function handleFormValidation({evt:e,field:t,cID:r,primaryKey:n,clientInfo:a,manageClient:o,componentId:s}){try{const a=await checkClientFormValidity({evt:e,cID:r,primaryKey:n,manageClient:o}),i=`${t}-error`;a?(safeDisplayMessage({elementId:i,message:a,targetId:t}),addListener({elementOrId:t,eventType:"focus",handler:()=>clearMsg({container:i,hide:!0,input:t}),componentId:s})):clearMsg({container:i,hide:!0,input:t}),await disableEnableSubmitButton("submit-button")}catch(e){const{AppError:t}=await import("../../../../core/errors/models/AppError.js");t.process(e,{errorCode:t.Types.FORM_VALIDATION_ERROR,userMessage:t.BaseMessages.forms.validationFailed,displayTarget:"form-msg"},!0),document.getElementById("submit-button").disabled=!0}}async function checkClientFormValidity({evt:e,cID:t,primaryKey:r,manageClient:n}){try{if("client-form"===e.target.id)return!0;const a=`validate${ucwords(hyphenToSpaces(e.target.id)).replace(" ","")}`,o=(await import(`./components/${a}.js`)).default;if("function"==typeof o)return o({evt:e,cID:t,primaryKey:r,manageClient:n});throw new Error("Invalid function name.")}catch(e){const{AppError:t}=await import("../../../../core/errors/models/AppError.js");t.process(e,{errorCode:t.Types.FORM_VALIDATION_ERROR,userMessage:t.BaseMessages.forms.validationFailed,displayTarget:"form-msg"},!0)}}async function validateAllFormFields({userData:e,cID:t,primaryKey:r,manageClient:n}){let a=!1;for(const o of FORM_FIELDS){e[hyphenToUnderscore(o)];const s=document.getElementById(o);if(!s)continue;const i={target:s},m=await checkClientFormValidity({evt:i,cID:t,primaryKey:r,manageClient:n});m&&(safeDisplayMessage({elementId:`${o}-error`,message:m,targetId:o}),a=!0)}return!a}async function handleFormSubmission({evt:e,cID:t,primaryKey:r,clientInfo:n,manageClient:a,manageUser:o}){try{const s=Object.fromEntries(new FormData(e.target)),[i,m]=await Promise.all([validateAllFormFields({userData:s,cID:t,primaryKey:r,manageClient:a}),handleTrimCycleCheck(s)]);if(!i)return top(),safeDisplayMessage({elementId:"form-msg",message:"Please correct all errors before submitting."}),void disableEnableSubmitButton("submit-button");if(!m)return;const{default:c}=await import("./components/addEditFormSubmission.js"),l=await c({evt:e,cID:t,primaryKey:r,manageClient:a}),{status:d,message:p,delete:u}=handleIDBResponse(l);if("success"===d)return top(),safeDisplayMessage({elementId:"form-msg",message:p,isSuccess:!0}),u?void e.target.remove():(checkAppointment({trimDate:"trim-date",trimCycle:"trim-cycle",appBlock:"appointment-block",projAppBlock:"projected-appointment-block",clientInfo:n,manageClient:a,manageUser:o}),void e.target.reset())}catch(e){top();const{AppError:t}=await import("../../../../core/errors/models/AppError.js");t.handleError(e,{errorCode:t.Types.FORM_SUBMISSION_ERROR,userMessage:t.BaseMessages.forms.submissionFailed,displayTarget:"form-msg"})}}async function handleTrimCycleCheck(e){try{return"null"!==e.trim_cycle||(top(),safeDisplayMessage({elementId:"trim-cycle-error",message:"Please select a trim cycle",targetId:"trim-cycle"}),addListener({elementOrId:"trim-cycle",eventType:"focus",handler:()=>clearMsg({container:"trim-cycle-error",hide:!0,input:"trim-cycle"}),componentId:COMPONENT_ID}),disableEnableSubmitButton("submit-button"),!1)}catch(e){const{AppError:t}=await import("../../../../core/errors/models/AppError.js");t.process(e,{errorCode:t.Types.FORM_VALIDATION_ERROR,userMessage:t.BaseMessages.forms.validationFailed,displayTarget:"form-msg"},!0)}}function handleIDBResponse(e){try{if(!e||!e.status)throw new Error("No response data found.");if("success"===e.status&&"delete"===e.type)return{status:"success",message:e.msg,delete:!0};if("success"===e.status)return{status:"success",message:e.msg,delete:!1};throw new Error("Unknown error occurred during form submission.")}catch(e){throw e}}