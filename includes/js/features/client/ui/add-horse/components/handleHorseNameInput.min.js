// @ts-nocheck
import{disableEnableSubmitButton}from"../../../../../core/utils/dom/elements";import{addListener}from"../../../../../core/utils/dom/listeners";import{clearMsg,safeDisplayMessage}from"../../../../../core/utils/dom/messages";import{ucwords}from"../../../../../core/utils/string/stringUtils";export async function handleHorseNameInput({evt:e,cID:r,primaryKey:t,manageClient:s,componentId:a}){try{const a=e.target.value,o=`${e.target.id}-error`;if(!a)return void clearMsg({container:o,hide:!0,input:e.target});return await isDuplicateHorseName({evt:e,cID:r,primaryKey:t,manageClient:s})?(safeDisplayMessage({elementId:o,message:`${a} is already listed.`,targetId:e.target.id}),void disableEnableSubmitButton("submit-button")):(e.target.value=ucwords(a),clearMsg({container:o,hide:!0,input:e.target}),clearMsg({container:"form-msg"}),document.getElementById("submit-button").disabled=!1,void disableEnableSubmitButton("submit-button"))}catch(e){const{AppError:r}=await import("../../../../../core/errors/models/AppError.js");r.handleError(e,{errorCode:r.Types.INITIALIZATION_ERROR,userMessage:r.BaseMessages.system.initialization})}}export async function isDuplicateHorseName({evt:e,cID:r,primaryKey:t,manageClient:s}){try{const r=await s.getClientHorses({primaryKey:t});return!!r?.length&&r.some((r=>r.horse_name.toLowerCase()===e.target.value.toLowerCase()))}catch(e){throw e}}export async function handleAddHorseFormSubmission({evt:e,cID:r,primaryKey:t,manageClient:s,componentId:a}){try{const o=e.target.elements["horse-name"].value.trim();if(r=parseInt(r,10),t=parseInt(t,10),!o)return safeDisplayMessage({elementId:`${e.target.id}-error`,message:"Please enter the horse's name.",targetId:"horse-name"}),void addListener({elementOrId:e.target,eventType:"focus",handler:()=>clearMsg({container:`${e.target.id}-error`,hide:!0,input:e.target}),componentId:a});const i=await s.addNewHorse({horseName:o,cID:r,primaryKey:t});console.log(i),i&&(e.target.reset(),safeDisplayMessage({elementId:"form-msg",message:`${o} has been added.`,isSuccess:!0}))}catch(e){const{AppError:r}=await import("../../../../../core/errors/models/AppError.js");r.handleError(e,{errorCode:r.Types.FORM_SUBMISSION_ERROR,userMessage:r.BaseMessages.forms.submissionFailed,displayTarget:"form-msg"})}}