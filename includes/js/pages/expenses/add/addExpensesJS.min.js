// @ts-nocheck
import{clearMsg,myError,mySuccess,top}from"../../../utils/dom/domUtils.js";import{addListener}from"../../../utils/event-listeners/listeners.js";import handleFormValidation from"../../../utils/validation/handleFormValidation.js";import validateAddExpensesForm from"../../../utils/validation/validateAddExpensesForm.js";import addExpensesFormSubmission from"./helpers/addExpensesFormSubmission.js";export default async function addExpenses(){try{addListener("expense-form","submit",(async r=>{r.preventDefault();try{clearMsg({container:"form-msg"}),top();const e=Object.fromEntries(new FormData(r.target));if(!await handleFormValidation(e,validateAddExpensesForm))return;const s=await addExpensesFormSubmission(e);return s.status?(mySuccess("form-msg",s.msg),void r.target.reset()):void myError("form-msg",s.msg)}catch(r){const{handleError:e}=await import("../../../utils/error-messages/handleError.js");await e("addExpensesFormSubmissionError","Error adding expenses: ",r,"Unable to add expenses. Please try again later.","form-msg")}}))}catch(r){const{handleError:e}=await import("../../../utils/error-messages/handleError.js");throw await e("addExpensesError","Error adding expenses: ",r,"Unable to add expenses. Please try again later.","page-msg"),r}}