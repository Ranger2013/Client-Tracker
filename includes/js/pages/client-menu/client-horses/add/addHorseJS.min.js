// @ts-nocheck
import ManageClient from"../../../../classes/ManageClient.js";import{clearMsg,disableEnableSubmitButton,myError,mySuccess}from"../../../../utils/dom/domUtils.js";import{addListener}from"../../../../utils/event-listeners/listeners.js";import{ucwords}from"../../../../utils/string/stringUtils.js";export default async function addHorse({cID:r,primaryKey:e}){try{addListener("horse-name","input",(async t=>{try{if(await isDuplicateHorseName(t,r,e))return myError(`${t.target.id}-error`,`${t.target.value} is already listed.`,t.target.id),disableEnableSubmitButton("submit-button"),void addListener(t.target,"focus",(()=>{clearMsg({container:`${t.target.id}-error`,hide:!0,input:t.target}),disableEnableSubmitButton("submit-button")}));disableEnableSubmitButton("submit-button"),clearMsg({container:`${t.target.id}-error`,hide:!0,input:t.target})}catch(r){const{handleError:e}=await import("../../../../utils/error-messages/handleError.js");await e("isDuplicateHorseNameError","Is duplicate horse name error: ",r,"Unable to validate the horse name.","form-msg")}})),addListener("add-horse-form","submit",(async t=>{t.preventDefault();try{if(await handleSubmission(t,r,e))return mySuccess("form-msg",`${t.target.value} has been added.`),void t.target.reset()}catch(r){const{handleError:e}=await import("../../../../utils/error-messages/handleError.js");await e("addHorseFormSubmissionError","Add horse form submission error: ",r,"Unable to add the horse at this time.","form-msg")}}))}catch(r){const{handleError:e}=await import("../../../../utils/error-messages/handleError.js");await e("addHorseError","Add horse error: ",r,`Error adding ${evt.target.value} at this time.`,"form-msg")}}async function isDuplicateHorseName(r,e,t){try{const e=new ManageClient,a=await e.getClientInfo({primaryKey:t}),s=a?.horses;if(r.target.value=ucwords(r.target.value),!s||0===s?.length)return!1;return s.some((e=>e.horse_name.toLowerCase()===r.target.value.toLowerCase()))}catch(r){const{default:e}=await import("../../../../utils/error-messages/errorLogs.js");throw await e("isDuplicateHorseNameError","Is duplicate horse name error: ",r),r}}async function handleSubmission(r,e,t){try{const a=new ManageClient,s=document.getElementById("horse-name").value,o=await a.addNewHorse(s,e,t);!0===o.status?(mySuccess("form-msg",o.msg),r.target.reset()):!1===o.status&&myError("form-msg",o.msg)}catch(r){const{default:e}=await import("../../../../utils/error-messages/errorLogs.js");return await e("isDuplicateHorseNameError","Is duplicate horse name error: ",r),!1}}