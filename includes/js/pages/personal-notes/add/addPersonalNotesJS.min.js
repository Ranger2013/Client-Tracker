// @ts-nocheck
import ManagePersonalNotes from"../../../classes/ManagePersonalNotes.js";import{getReadableCurrentFutureDate}from"../../../utils/date/dateUtils.js";import{myError,mySuccess}from"../../../utils/dom/domUtils.js";import{addListener}from"../../../utils/event-listeners/listeners.js";import handleFormValidation from"../../../utils/validation/handleFormValidation.js";import validateAddPersonalNotesForm from"../../../utils/validation/validateAddPersonalNotesForm.js";export default async function addPersonalNotes({mainContainer:r}){try{addListener("add-notes-form","submit",(async r=>{r.preventDefault();try{const e=new ManagePersonalNotes,a=Object.fromEntries(new FormData(r.target));if(!handleFormValidation(a,validateAddPersonalNotesForm))return;const t=getReadableCurrentFutureDate();a.date=t;const o=await e.addPersonalNotes(a);return o.status?(mySuccess("form-msg",o.msg),void r.target.reset()):void myError("form-msg",o.msg)}catch(r){const{handleError:e}=await import("../../../utils/error-messages/handleError.js");await e("addPersonalNotesFormSubmissionError","Error adding personal notes: ",r,"Unable to add personal notes at this time. Please try again later.","form-msg")}}))}catch(r){const{handleError:e}=await import("../../../utils/error-messages/handleError.js");await e("addPersonalNotesError","Error adding personal notes: ",r,"Unable to add personal notes. Please try again later.","form-msg")}}