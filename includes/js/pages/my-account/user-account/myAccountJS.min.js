// @ts-nocheck
import{getValidationToken}from"../../../tracker.js";import{getSubscriptionAPI,getUnpaidInvoicesAPI}from"../../utils/apiEndpoints.js";import{addListener}from"../../utils/listeners.js";import{fetchData}from"../../utils/network.js";import{buildEle,clearMsg,myError,mySuccess,setActiveTab,top,topOfModal}from"../../utils/utils.js";import CustomError from"../../classes/CustomerError.js";import handleSubscriptionRactivationListener from"./helpers/subscriptions/handleSubscriptionRactivationListener.js";import setupPageTabListeners from"../../../utils/event-listeners/setupPageTabListeners.js";const fm=document.getElementById("form-msg"),tabContentContainer=document.getElementById("tab-content-container"),modal=document.getElementById("modal"),modalContent=document.getElementById("modal-content"),validationToken=getValidationToken(),tabs={subscription:{eleId:"subscriptions-tab",action:()=>import("../subscription/displaySubscriptionPage.js")},accountSettings:{eleId:"account-settings-tab",action:()=>import("../account-settings/displayAccountSettingsPage.js")},clientStats:{eleId:"client-stats-tab",action:()=>import("../client-stats/displayClientStatsPage.js")},monthlyProjections:{eleId:"monthly-projections-tab",action:()=>import("../monthly-projections/displayMonthlyProjectionSelectElement.js")},unpaidInvoices:{eleId:"invoices-tab",action:()=>import("../unpaid-invoices/displayUnpaidInvoices.js")}};setupPageTabListeners(tabs);export async function displaySubscriptionPage(e){try{tabContentContainer.innerHTML="",setActiveTab(e,tabs,fm);const t=buildEle({type:"h4",attributes:{id:"loading"},myClass:["w3-center","w3-text-blue"],text:"Loading..."});tabContentContainer.appendChild(t);const a=await fetchData({api:getSubscriptionAPI,token:validationToken});if("ok"===a.status)if(tabContentContainer.innerHTML=a.msg,"guest"===a.page)try{const{default:e}=await import("./helpers/subscriptions/handleSubscriptionGuestPage.js");await e()}catch(e){console.warn("Error dealing with the guest subscription: ",e),myError(fm,"There was an issue getting you subscribed.<br>Please submit a new Help Desk Ticket for this issue."),top()}else if("member"===a.page)try{const{default:e}=await import("./helpers/subscriptions/handleLinkToggles.js"),{default:t}=await import("./helpers/subscriptions/handleSubscriptionUpgradeButtonListeners.js"),{default:a}=await import("./helpers/subscriptions/handleSubscriptionCancelationListener.js");e(),t(),a(fm),handleSubscriptionRactivationListener(fm)}catch(e){console.warn("Error dealing with the member subscription page: ",e),myError(fm,e),top()}}catch(e){console.warn("error fetching the subscription page from the server: ",e),e instanceof CustomError&&myError(modalMsg)}}async function displayAccountSettingsPage(e){const{submitMyAccountForm:t}=await import('./helpers/myAccountHelpers.js"'),{buildPasswordColTwo:a,toggleColTwoInput:i}=await import('./helpers/account-settings/accountSettingsHelpers.js"'),{buildSubmitButtonSection:n}=await import("../../utils/helpers/pageBuilderHelpers.js"),{getUserInfoAPI:s}=await import("../../utils/apiEndpoints.js"),{fetchData:o}=await import("../../utils/network.js");e.preventDefault(),setActiveTab(e,tabs,fm);try{const e=buildEle({type:"div",attributes:{id:"account-container"},myClass:["w3-padding-small"]}),l=buildEle({type:"div",myClass:["w3-center"],attributes:{id:"account-msg"}}),r=buildEle({type:"h6",attributes:{style:"margin-bottom: 0px;"},text:"Account Settings"}),d=buildEle({type:"span",myClass:["w3-small","w3-italic"],text:"Click on a name to access the form.<br>For your security, any changes made to your credentials will need to be validated from an auto-generated email sent to your email on record.<br>If you do not have access to your old email. Please contact us through the Help Desk and we will update your information."}),p=buildEle({type:"form",attributes:{method:"post"}});addListener(p,"submit",t),e.appendChild(l),e.appendChild(r),e.appendChild(d),e.appendChild(p);const c=buildEle({type:"div",attributes:{id:"username-container"},myClass:["w3-row","w3-margin-top"]}),m=buildEle({type:"div",myClass:["w3-col","m6","w3-padding-small"]}),u=buildEle({type:"label",attributes:{id:"username-label",for:"username"},text:"User Name:"});p.appendChild(c),c.appendChild(m),m.appendChild(u);const b=buildEle({type:"div",attributes:{id:"password-container"},myClass:["w3-row","w3-margin-top"]}),y=buildEle({type:"div",myClass:["w3-col","m6","w3-padding-small"]}),h=buildEle({type:"label",attributes:{id:"password-label",for:"password"},text:"Password:"});p.appendChild(b),b.appendChild(y),y.appendChild(h),addListener(y,"click",(e=>a(e,b)));const C=buildEle({type:"div",attributes:{id:"company-container"},myClass:["w3-row","w3-margin-top"]}),g=buildEle({type:"div",myClass:["w3-col","m6","w3-padding-small"]}),w=buildEle({type:"label",attributes:{id:"company-label",for:"company"},text:"Company Name:"});p.appendChild(C),C.appendChild(g),g.appendChild(w);const f=buildEle({type:"div",attributes:{id:"phone-container"},myClass:["w3-row","w3-margin-top"]}),E=buildEle({type:"div",myClass:["w3-col","m6","w3-padding-small"]}),v=buildEle({type:"label",attributes:{id:"phone-label",for:"phone"},text:"Phone Number:"});p.appendChild(f),f.appendChild(E),E.appendChild(v);const j=buildEle({type:"div",attributes:{id:"email-container"},myClass:["w3-row","w3-margin-top"]}),S=buildEle({type:"div",myClass:["w3-col","m6","w3-padding-small"]}),P=buildEle({type:"label",attributes:{id:"email-label",for:"email"},text:"Email:"});p.appendChild(j),j.appendChild(S),S.appendChild(P),p.appendChild(n("Update Credentials",!0)),tabContentContainer.innerHTML="",tabContentContainer.appendChild(e);let T=null,L=null,k=null,x=null,I=null;try{T=await o({api:s,data:{getUserCredentials:!0},token:validationToken}),T&&T.data&&Object.keys(T.data).length>0&&(L=T.data.username,k=T.data.company_name,x=T.data.phone,I=T.data.email);const e={username:{params:{id:"username",type:"text",name:"username",title:"User Name",autocomplete:"username",required:"required",value:L},row:c,colOne:m},company:{params:{id:"company-name",type:"text",name:"company_name",title:"Company Name:",autocomplete:"organization",value:k},row:C,colOne:g},phone:{params:{id:"phone",type:"text",name:"phone",title:"Phone Number",autocomplete:"tel",required:"required",value:x},row:f,colOne:E},email:{params:{id:"email",type:"email",name:"email",title:"Email",autocomplete:"email",required:"required",value:I},row:j,colOne:S}};for(const t in e){const a=e[t];addListener(a.colOne,"click",(e=>i(e,a.row,a.params)))}}catch(e){console.warn("Could not fetch the user's account information: ",e),myError(fm,"Unable to get data from the server at this time.<br>Please try again later.")}}catch(e){console.warn("Error building the account settings page: ",e)}}async function displayClientStatsPage(e){e.preventDefault(),setActiveTab(e,tabs,fm);const{default:t}=await import("../../classes/ManageClientStats.js"),{displayClientsWithNthHorses:a}=await import("./helpers/client-stats/clientStatsHelpers.js"),i=document.createDocumentFragment(),n=new t,s=await n.getClientStatsForUser();if(tabContentContainer.innerHTML="",s)return s.forEach((async e=>{const t=buildEle({type:"div",myClass:["w3-padding-small"],text:` ${e.num_horses} horses.`}),n=buildEle({type:"span",myClass:["w3-pointer","w3-underline","w3-text-blue"],attributes:{"data-horses":`${e.num_horses}`},text:`${e.num_clients} clients with:`});t.prepend(n),i.appendChild(t),addListener(n,"click",(e=>a(e,tabContentContainer)))})),void tabContentContainer.appendChild(i);tabContentContainer.innerHTML="You don't have any clients listed."}async function displayMonthlyProjectionSelectElement(e){e.preventDefault(),setActiveTab(e,tabs,fm);try{const{getMonthlyProjections:e}=await import("./helpers/projections/monthlyProjectionsHelpers.js"),t=buildEle({type:"div",attributes:{id:"select-container"},myClass:["w3-padding-small"]}),a=buildEle({type:"div",myClass:["w3-center"]}),i=buildEle({type:"h4",text:"Select a Month"}),n=buildEle({type:"div",attributes:{id:"projection-form-msg"},myClass:["w3-center"]});t.appendChild(a).appendChild(i),t.appendChild(n);const s=buildEle({type:"select",attributes:{id:"month"},myClass:["w3-input","w3-border"]}),o=buildEle({type:"option",attributes:{value:""},text:"Select a Month"});s.appendChild(o);["January","February","March","April","May","June","July","August","September","October","November","December"].forEach(((e,t)=>{const a=buildEle({type:"option",attributes:{value:t+1},text:e});s.appendChild(a)}));const l=buildEle({type:"div",attributes:{id:"projection-container"}});t.appendChild(s),tabContentContainer.innerHTML="",tabContentContainer.appendChild(t),tabContentContainer.appendChild(l),s.addEventListener("change",e)}catch(e){console.warn("Error building the select element for monthly projections: ",e)}}