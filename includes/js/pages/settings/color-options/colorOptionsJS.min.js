// @ts-nocheck
import ManageUser from"../../../classes/ManageUser.js";import setupBackupNotice from"../../../utils/backup-notice/backupNotice.js";import displayFormValidationErrors from"../../../utils/dom/displayFormValidationErrors.js";import{clearMsg,myError,mySuccess,top}from"../../../utils/dom/domUtils.js";import{helpDeskTicket}from"../../../utils/error-messages/errorMessages.js";import{addListener}from"../../../utils/event-listeners/listeners.js";const fm=document.getElementById("form-msg"),colorOptionsForm=document.getElementById("color-options-form");async function handleColorOptionFormSubmission(o){o.preventDefault();try{clearMsg({container:fm});const r=Object.fromEntries(new FormData(o.target)),t=validateColor(r);if(t)return void await displayFormValidationErrors(t);const e=new ManageUser;return await e.updateLocalUserSettings({userData:r,settingsProperty:"color_options",backupStore:e.indexed.stores.COLOROPTIONS,backupAPITag:"add_colorOptions"})?(mySuccess(fm,"Color Options have been saved"),void top()):void myError(fm,`Unable to save color options at this time.<br>${helpDeskTicket}`)}catch(o){console.warn("Handle color options form submissin error: ",o)}}function validateColor(o){const r=/^#[0-9a-fA-F]{6}$/;let t=[];for(let e in o){let s=o[e];r.test(s)||t.push({input:e,msg:"Invalid color format."})}return t.length>0?t:null}setupBackupNotice(),addListener(colorOptionsForm,"submit",handleColorOptionFormSubmission);