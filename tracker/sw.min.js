// @ts-nocheck
import{cacheFirst,dynamicCacheName,networkFirst,staticCacheName}from"../includes/js/core/network/services/swFunctions.js";const assets=["/includes/css/w3-css.css","/includes/js/core/errors/models/AppError.js","/tracker/public/src/libs/trackerFallBackPage.php"];self.addEventListener("install",(async e=>{try{const e=await caches.open(staticCacheName);await e.addAll(assets),self.skipWaiting()}catch(e){console.warn("SW Install Error:",e)}})),self.addEventListener("activate",(async e=>{try{const e=await caches.keys();await Promise.all(e.filter((e=>e!==staticCacheName&&e!==dynamicCacheName)).map((e=>caches.delete(e))))}catch(e){console.warn("SW Activate Error:",e)}})),self.addEventListener("fetch",(async e=>{try{const s=e.request.url;if(["/login/","/logout/","/tracker/online.php","123checkout.io"].some((e=>s.includes(e))))try{return void e.respondWith(fetch(e.request).then((e=>e.redirected?Response.redirect(e.url,303):e)).catch((e=>{throw console.warn("Native fetch request error in sw: ",e),e})))}catch(e){console.warn("Native fetch request error in sw:",e)}assets.some((e=>s.includes(e)))?e.respondWith(cacheFirst(e)):e.respondWith(networkFirst(e))}catch(e){console.warn("SERVICE WORKER FETCH EVENT ERROR: ",e)}}));